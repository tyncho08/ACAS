{
  "filePath": "/Users/MartinGonella/Desktop/Demos/ACAS/common/paymentsMT.cbl",
  "fileName": "paymentsMT.cbl",
  "timestamp": "2025-09-15T16:25:39.063Z",
  "programId": "paymentsMT",
  "parserUsed": "GnuCOBOL + Regex",
  "parseConfidence": 0,
  "validationStatus": "ERROR",
  "gnuCobolValidation": {
    "success": true,
    "errors": [],
    "warnings": []
  },
  "parseErrors": [
    "Cannot read properties of undefined (reading 'total')"
  ],
  "parseWarnings": [],
  "divisions": {
    "identification": true,
    "environment": true,
    "data": true,
    "procedure": true
  },
  "structure": {
    "sections": [
      {
        "name": "input-output",
        "line": 216
      },
      {
        "name": "Working-Storage",
        "line": 218
      },
      {
        "name": "Linkage",
        "line": 326
      },
      {
        "name": "screen",
        "line": 338
      },
      {
        "name": "ba-ACAS-DAL-Process",
        "line": 360
      },
      {
        "name": "bb000-HV-Load",
        "line": 1087
      },
      {
        "name": "exit",
        "line": 1105
      },
      {
        "name": "bb100-UnloadHVs",
        "line": 1107
      },
      {
        "name": "exit",
        "line": 1122
      },
      {
        "name": "bb200-Insert",
        "line": 1124
      },
      {
        "name": "exit",
        "line": 1228
      },
      {
        "name": "bb300-Update",
        "line": 1230
      },
      {
        "name": "exit",
        "line": 1338
      },
      {
        "name": "bc000-RG-Process",
        "line": 1340
      },
      {
        "name": "bc000-HV-Load-rg1",
        "line": 1702
      },
      {
        "name": "exit",
        "line": 1726
      },
      {
        "name": "bc100-UnloadHVs-rg1",
        "line": 1728
      },
      {
        "name": "exit",
        "line": 1762
      },
      {
        "name": "bc200-Insert-rg1",
        "line": 1764
      },
      {
        "name": "exit",
        "line": 1873
      },
      {
        "name": "bc300-Update-rg1",
        "line": 1875
      },
      {
        "name": "exit",
        "line": 2011
      }
    ],
    "paragraphs": [
      {
        "name": "ba010-Initialise",
        "line": 374
      },
      {
        "name": "SQL-Err",
        "line": 386
      },
      {
        "name": "end-evaluate",
        "line": 420
      },
      {
        "name": "end-string",
        "line": 430
      },
      {
        "name": "end-string",
        "line": 434
      },
      {
        "name": "end-string",
        "line": 438
      },
      {
        "name": "end-string",
        "line": 442
      },
      {
        "name": "end-string",
        "line": 446
      },
      {
        "name": "end-string",
        "line": 450
      },
      {
        "name": "end-if",
        "line": 553
      },
      {
        "name": "ba041-Reread",
        "line": 555
      },
      {
        "name": "end-if",
        "line": 604
      },
      {
        "name": "end-if",
        "line": 610
      },
      {
        "name": "end-if",
        "line": 906
      },
      {
        "name": "end-if",
        "line": 994
      },
      {
        "name": "ba100-Bad-Function",
        "line": 1053
      },
      {
        "name": "ba998-Free",
        "line": 1065
      },
      {
        "name": "ba999-end",
        "line": 1077
      },
      {
        "name": "end-if",
        "line": 1082
      },
      {
        "name": "ba999-exit",
        "line": 1084
      },
      {
        "name": "bb000-Exit",
        "line": 1104
      },
      {
        "name": "bb100-Exit",
        "line": 1121
      },
      {
        "name": "bb200-Exit",
        "line": 1227
      },
      {
        "name": "bb300-Exit",
        "line": 1337
      },
      {
        "name": "end-string",
        "line": 1385
      },
      {
        "name": "end-string",
        "line": 1435
      },
      {
        "name": "bc051-Fetch-RG1",
        "line": 1438
      },
      {
        "name": "bc058-Restore-Pointers",
        "line": 1472
      },
      {
        "name": "bc070-Process-Write",
        "line": 1482
      },
      {
        "name": "end-perform",
        "line": 1545
      },
      {
        "name": "bc080-Process-Delete",
        "line": 1549
      },
      {
        "name": "end-if",
        "line": 1610
      },
      {
        "name": "end-if",
        "line": 1696
      },
      {
        "name": "bc000-Exit",
        "line": 1725
      },
      {
        "name": "end-if",
        "line": 1750
      },
      {
        "name": "bc100-Exit",
        "line": 1761
      },
      {
        "name": "bc200-Exit",
        "line": 1872
      },
      {
        "name": "bc300-Exit",
        "line": 2010
      },
      {
        "name": "Ca-Process-Logs",
        "line": 2013
      },
      {
        "name": "ACAS-DAL-Common-data",
        "line": 2017
      }
    ],
    "entryPoints": []
  },
  "dependencies": {
    "calls": [
      {
        "target": "MySQL_errno",
        "line": 532,
        "type": "DYNAMIC",
        "using": [
          "WS-MYSQL-Error-Number",
          "call",
          "\"MySQL_sqlstate\"",
          "using",
          "WS-MYSQL-SQLstate",
          "move",
          "WS-MYSQL-SqlState",
          "to",
          "SQL-State",
          "if",
          "WS-MYSQL-Error-Number",
          "not",
          "=",
          "\"0",
          "\"",
          "*>",
          "set",
          "non",
          "'0'",
          "if",
          "no",
          "rows",
          "?",
          "move",
          "WS-MYSQL-Error-Number",
          "to",
          "SQL-Err",
          "call",
          "\"MySQL_error\"",
          "using",
          "WS-MYSQL-Error-Message",
          "move",
          "WS-MYSQL-Error-Message",
          "to",
          "SQL-Msg",
          "end-if",
          "*>",
          "do",
          "not",
          "really",
          "need",
          "to",
          "do",
          "this",
          "meaning",
          "the",
          "above",
          "CALL",
          "move",
          "10",
          "to",
          "fs-reply",
          "move",
          "10",
          "to",
          "WE-Error",
          "*>",
          "should",
          "be",
          "0",
          "'JIC'",
          "likewise",
          "the",
          "others",
          "move",
          "\"No",
          "Data\"",
          "to",
          "WS-File-Key",
          "go",
          "to",
          "ba999-End",
          "*>",
          "can",
          "clear",
          "the",
          "dup",
          "code",
          "after",
          "testing",
          "end-if",
          "*>",
          "We",
          "have",
          "data",
          "set",
          "Cursor-Active",
          "to",
          "true",
          "move",
          "WS-MYSQL-Count-Rows",
          "to",
          "WS-Temp-Ed",
          "string",
          "\">",
          "0",
          "got",
          "cnt=\"",
          "delimited",
          "by",
          "size",
          "WS-Temp-ED",
          "delimited",
          "by",
          "size",
          "\"",
          "recs",
          "for",
          "PAY-RECORD",
          "Table\"",
          "into",
          "WS-File-Key",
          "end-string",
          "perform",
          "ba999-End",
          "*>",
          "log",
          "it",
          "end-if"
        ]
      },
      {
        "target": "MySQL_fetch_record",
        "line": 569,
        "type": "DYNAMIC",
        "using": [
          "WS-MYSQL-RESULT",
          "HV-PAY-KEY",
          "HV-PAY-CONT",
          "HV-PAY-DAT",
          "HV-PAY-CHEQUE",
          "HV-PAY-SORTCODE",
          "HV-PAY-ACCOUNT",
          "HV-PAY-GROSS",
          "*>",
          "/MYSQL-END\\",
          "end-call",
          "*>",
          "if",
          "return-code",
          "=",
          "-1",
          "*>",
          "no",
          "more",
          "data",
          "so",
          "free",
          "cursor",
          "&",
          "return",
          "move",
          "10",
          "to",
          "fs-Reply",
          "WE-Error",
          "*>",
          "should",
          "be",
          "0",
          "likewise",
          "the",
          "others",
          "move",
          "\"EOF\"",
          "to",
          "WS-File-Key",
          "set",
          "Cursor-Not-Active",
          "to",
          "true",
          "go",
          "to",
          "ba999-End",
          "end-if",
          "*>",
          "if",
          "WS-MYSQL-Count-Rows",
          "=",
          "zero",
          "*>",
          "no",
          "data",
          "but",
          "should",
          "not",
          "happen",
          "here",
          "call",
          "\"MySQL_errno\"",
          "using",
          "WS-MYSQL-Error-Number",
          "call",
          "\"MySQL_sqlstate\"",
          "using",
          "WS-MYSQL-SQLstate",
          "move",
          "WS-MYSQL-SqlState",
          "to",
          "SQL-State",
          "if",
          "WS-MYSQL-Error-Number",
          "not",
          "=",
          "\"0",
          "\"",
          "call",
          "\"MySQL_error\"",
          "using",
          "WS-MYSQL-Error-Message",
          "move",
          "WS-MYSQL-Error-Number",
          "to",
          "SQL-Err",
          "*>",
          "Not",
          "really",
          "needed",
          "but",
          "help",
          "for",
          "testing",
          "move",
          "WS-MYSQL-Error-Message",
          "to",
          "SQL-Msg",
          "*>",
          "ditto",
          "initialize",
          "WS-Pay-Record",
          "with",
          "filler",
          "move",
          "\"EOF2\"",
          "to",
          "WS-File-Key",
          "end-if",
          "move",
          "10",
          "to",
          "fs-reply",
          "*>",
          "EOF",
          "equivilent",
          "!!",
          "move",
          "10",
          "to",
          "WE-Error",
          "set",
          "Cursor-Not-Active",
          "to",
          "true",
          "go",
          "to",
          "ba999-End",
          "end-if"
        ]
      },
      {
        "target": "MySQL_fetch_record",
        "line": 676,
        "type": "DYNAMIC",
        "using": [
          "WS-MYSQL-RESULT",
          "HV-PAY-KEY",
          "HV-PAY-CONT",
          "HV-PAY-DAT",
          "HV-PAY-CHEQUE",
          "HV-PAY-SORTCODE",
          "HV-PAY-ACCOUNT",
          "HV-PAY-GROSS",
          "*>",
          "/MYSQL-END\\",
          "end-call",
          "*>",
          "if",
          "WS-MYSQL-Count-Rows",
          "not",
          ">",
          "zero",
          "call",
          "\"MySQL_errno\"",
          "using",
          "WS-MYSQL-Error-Number",
          "call",
          "\"MySQL_sqlstate\"",
          "using",
          "WS-MYSQL-SQLstate",
          "move",
          "WS-MYSQL-SqlState",
          "to",
          "SQL-State",
          "if",
          "WS-MYSQL-Error-Number",
          "not",
          "=",
          "\"0",
          "\"",
          "move",
          "990",
          "to",
          "WE-Error",
          "call",
          "\"MySQL_error\"",
          "using",
          "WS-MYSQL-Error-Message",
          "move",
          "WS-MYSQL-Error-Number",
          "to",
          "SQL-Err",
          "move",
          "WS-MYSQL-Error-Message",
          "to",
          "SQL-Msg",
          "else",
          "move",
          "989",
          "to",
          "WE-Error",
          "move",
          "zero",
          "to",
          "SQL-Err",
          "move",
          "spaces",
          "to",
          "SQL-Msg",
          "end-if",
          "move",
          "23",
          "to",
          "fs-reply",
          "move",
          "spaces",
          "to",
          "WS-File-Key",
          "go",
          "to",
          "ba998-Free",
          "end-if",
          "*>",
          "row",
          "count",
          "zero",
          "should",
          "show",
          "up",
          "as",
          "a",
          "MYSQL",
          "error",
          "?",
          "perform",
          "bb100-UnloadHVs",
          "*>",
          "transfer/move",
          "HV",
          "vars",
          "to",
          "ws-Record",
          "layout",
          "perform",
          "ba999-End"
        ]
      },
      {
        "target": "MySQL_errno",
        "line": 799,
        "type": "DYNAMIC",
        "using": [
          "WS-MYSQL-Error-Number",
          "call",
          "\"MySQL_sqlstate\"",
          "using",
          "WS-MYSQL-SQLstate",
          "move",
          "WS-MYSQL-SqlState",
          "to",
          "SQL-State",
          "if",
          "WS-MYSQL-Error-Number",
          "not",
          "=",
          "\"0",
          "\"",
          "call",
          "\"MySQL_error\"",
          "using",
          "WS-MYSQL-Error-Message",
          "move",
          "WS-MYSQL-Error-Number",
          "to",
          "SQL-Err",
          "move",
          "WS-MYSQL-Error-Message",
          "to",
          "SQL-Msg",
          "end-if",
          "move",
          "21",
          "to",
          "fs-reply",
          "*>",
          "this",
          "may",
          "need",
          "changing",
          "for",
          "val",
          "in",
          "WE-Error!!",
          "move",
          "zero",
          "to",
          "WE-Error",
          "else",
          "move",
          "zero",
          "to",
          "FS-Reply",
          "WE-Error",
          "move",
          "WS-MYSQL-Count-Rows",
          "to",
          "WS-Temp-Ed",
          "string",
          "MOST-relation",
          "WS-Pay-Record",
          "(K:L)",
          "\"",
          "got",
          "\"",
          "delimited",
          "by",
          "size",
          "WS-Temp-ED",
          "delimited",
          "by",
          "size",
          "\"",
          "recs\"",
          "into",
          "WS-File-Key",
          "end-string",
          "end-if",
          "go",
          "to",
          "ba999-end"
        ]
      },
      {
        "target": "MySQL_errno",
        "line": 833,
        "type": "DYNAMIC",
        "using": [
          "WS-MYSQL-Error-Number",
          "call",
          "\"MySQL_sqlstate\"",
          "using",
          "WS-MYSQL-SQLstate",
          "move",
          "WS-MYSQL-SqlState",
          "to",
          "SQL-State",
          "move",
          "99",
          "to",
          "fs-reply",
          "*>",
          "this",
          "may",
          "need",
          "changing",
          "for",
          "val",
          "in",
          "WE-Error!!",
          "if",
          "WS-MYSQL-Error-Number",
          "not",
          "=",
          "\"0",
          "\"",
          "call",
          "\"MySQL_error\"",
          "using",
          "Ws-Mysql-Error-Message",
          "move",
          "WS-MYSQL-Error-Number",
          "to",
          "SQL-Err",
          "move",
          "WS-MYSQL-Error-Message",
          "to",
          "SQL-Msg",
          "if",
          "SQL-Err",
          "(1:4)",
          "=",
          "\"1062\"",
          "or",
          "=",
          "\"1022\"",
          "*>",
          "Dup",
          "key",
          "(rec",
          "already",
          "present)",
          "or",
          "Sql-State",
          "=",
          "\"23000\"",
          "*>",
          "Dup",
          "key",
          "(rec",
          "already",
          "present)",
          "move",
          "22",
          "to",
          "fs-reply",
          "end-if",
          "end-if",
          "end-if",
          "perform",
          "ba999-End"
        ]
      },
      {
        "target": "MySQL_errno",
        "line": 892,
        "type": "DYNAMIC",
        "using": [
          "WS-MYSQL-Error-Number",
          "call",
          "\"MySQL_sqlstate\"",
          "using",
          "WS-MYSQL-SQLstate",
          "move",
          "WS-MYSQL-SqlState",
          "to",
          "SQL-State",
          "if",
          "WS-MYSQL-Error-Number",
          "not",
          "=",
          "\"0",
          "\"",
          "call",
          "\"MySQL_error\"",
          "using",
          "Ws-Mysql-Error-Message",
          "move",
          "WS-MYSQL-Error-Number",
          "to",
          "SQL-Err",
          "move",
          "WS-MYSQL-Error-Message",
          "to",
          "SQL-Msg",
          "end-if",
          "move",
          "99",
          "to",
          "fs-reply",
          "move",
          "995",
          "to",
          "WE-Error",
          "go",
          "to",
          "ba999-End",
          "else",
          "move",
          "spaces",
          "to",
          "SQL-Msg",
          "move",
          "zero",
          "to",
          "SQL-Err",
          "end-if"
        ]
      },
      {
        "target": "MySQL_query",
        "line": 933,
        "type": "DYNAMIC",
        "using": [
          "SQLCA-STATEMENT",
          "*>",
          "END-CALL",
          "*>",
          "*>",
          "So",
          "if",
          "this",
          "does",
          "not",
          "work",
          "it",
          "will",
          "be",
          "changed"
        ]
      },
      {
        "target": "MySQL_errno",
        "line": 980,
        "type": "DYNAMIC",
        "using": [
          "WS-MYSQL-Error-Number",
          "call",
          "\"MySQL_sqlstate\"",
          "using",
          "WS-MYSQL-SQLstate",
          "move",
          "WS-MYSQL-SqlState",
          "to",
          "SQL-State",
          "if",
          "WS-MYSQL-Error-Number",
          "not",
          "=",
          "\"0",
          "\"",
          "call",
          "\"MySQL_error\"",
          "using",
          "Ws-Mysql-Error-Message",
          "move",
          "WS-MYSQL-Error-Number",
          "to",
          "SQL-Err",
          "move",
          "WS-MYSQL-Error-Message",
          "to",
          "SQL-Msg",
          "end-if",
          "move",
          "99",
          "to",
          "fs-reply",
          "move",
          "995",
          "to",
          "WE-Error",
          "go",
          "to",
          "ba999-End",
          "else",
          "*>",
          "of",
          "course",
          "there",
          "could",
          "be",
          "no",
          "data",
          "in",
          "table",
          "move",
          "spaces",
          "to",
          "SQL-Msg",
          "move",
          "zero",
          "to",
          "SQL-Err",
          "end-if"
        ]
      },
      {
        "target": "MySQL_errno",
        "line": 1031,
        "type": "DYNAMIC",
        "using": [
          "WS-MYSQL-Error-Number",
          "call",
          "\"MySQL_sqlstate\"",
          "using",
          "WS-MYSQL-SQLstate",
          "move",
          "WS-MYSQL-SqlState",
          "to",
          "SQL-State",
          "if",
          "WS-MYSQL-Error-Number",
          "not",
          "=",
          "\"0",
          "\"",
          "call",
          "\"MySQL_error\"",
          "using",
          "Ws-Mysql-Error-Message",
          "move",
          "WS-MYSQL-Error-Number",
          "to",
          "SQL-Err",
          "move",
          "WS-MYSQL-Error-Message",
          "to",
          "SQL-Msg",
          "end-if",
          "move",
          "99",
          "to",
          "fs-reply",
          "*>",
          "this",
          "may",
          "need",
          "changing",
          "for",
          "val",
          "in",
          "WE-Error!!",
          "move",
          "994",
          "to",
          "WE-Error",
          "go",
          "to",
          "ba999-End",
          "end-if",
          "move",
          "zero",
          "to",
          "FS-Reply",
          "WE-Error"
        ]
      },
      {
        "target": "MySQL_free_result",
        "line": 1073,
        "type": "DYNAMIC",
        "using": [
          "WS-MYSQL-RESULT",
          "end-call",
          "*>",
          "/MYSQL-END\\",
          "set",
          "Cursor-Not-Active",
          "to",
          "true"
        ]
      },
      {
        "target": "MySQL_errno",
        "line": 1411,
        "type": "DYNAMIC",
        "using": [
          "WS-MYSQL-Error-Number",
          "call",
          "\"MySQL_sqlstate\"",
          "using",
          "WS-MYSQL-SQLstate",
          "move",
          "WS-MYSQL-SqlState",
          "to",
          "SQL-State",
          "if",
          "WS-MYSQL-Error-Number",
          "not",
          "=",
          "\"0",
          "\"",
          "*>",
          "set",
          "non",
          "'0'",
          "if",
          "no",
          "rows",
          "?",
          "move",
          "WS-MYSQL-Error-Number",
          "to",
          "SQL-Err",
          "call",
          "\"MySQL_error\"",
          "using",
          "WS-MYSQL-Error-Message",
          "move",
          "WS-MYSQL-Error-Message",
          "to",
          "SQL-Msg",
          "end-if",
          "move",
          "23",
          "to",
          "fs-reply",
          "move",
          "890",
          "to",
          "WE-Error",
          "move",
          "spaces",
          "to",
          "WS-File-Key",
          "string",
          "\"No",
          "RG1",
          "Data",
          "for",
          "\"",
          "WS-Pay-Record",
          "(K:L)",
          "into",
          "WS-File-Key",
          "end-string",
          "go",
          "to",
          "bc058-Restore-Pointers",
          "*>",
          "do",
          "ba999-end",
          "at",
          "end",
          "end-if",
          "*>",
          "move",
          "WS-MYSQL-Count-Rows",
          "to",
          "WS-Temp-Ed"
        ]
      },
      {
        "target": "MySQL_fetch_record",
        "line": 1449,
        "type": "DYNAMIC",
        "using": [
          "WS-MYSQL-RESULT",
          "HV1-PAY-FOLIO",
          "HV1-PAY-PERIOD",
          "HV1-PAY-VALUE",
          "HV1-PAY-DEDUCT",
          "HV1-PAY-INVOICE",
          "HV1-LEVEL-J",
          "HV1-PAY-KEY",
          "*>",
          "/MYSQL-END\\",
          "end-call",
          "*>",
          "if",
          "WS-MYSQL-Count-Rows",
          ">",
          "zero",
          "perform",
          "bc100-UnloadHVs-rg1",
          "*>",
          "transfer/move",
          "HV",
          "vars",
          "to",
          "ws-Record",
          "layout",
          "go",
          "to",
          "bc051-Fetch-RG1",
          "end-if",
          "*>",
          "*>",
          "No",
          "more",
          "rows",
          "for",
          "key",
          "*>",
          "move",
          "HV-PAY-KEY",
          "to",
          "WS-File-Key"
        ]
      },
      {
        "target": "MySQL_sqlstate",
        "line": 1509,
        "type": "DYNAMIC",
        "using": [
          "WS-MYSQL-SQLstate",
          "move",
          "WS-MYSQL-SqlState",
          "to",
          "SQL-State",
          "if",
          "Sql-State",
          "=",
          "\"23000\"",
          "perform",
          "bc300-Update-rg1",
          "end-if",
          "if",
          "WS-MYSQL-COUNT-ROWS",
          "not",
          "=",
          "1",
          "call",
          "\"MySQL_errno\"",
          "using",
          "WS-MYSQL-Error-Number",
          "call",
          "\"MySQL_sqlstate\"",
          "using",
          "WS-MYSQL-SQLstate",
          "move",
          "WS-MYSQL-SqlState",
          "to",
          "SQL-State",
          "move",
          "99",
          "to",
          "fs-reply",
          "*>",
          "this",
          "may",
          "need",
          "changing",
          "for",
          "val",
          "in",
          "WE-Error!!",
          "if",
          "WS-MYSQL-Error-Number",
          "not",
          "=",
          "\"0",
          "\"",
          "or",
          "Sql-State",
          "=",
          "\"23000\"",
          "*>",
          "Dup",
          "key",
          "(rec",
          "already",
          "present)",
          "call",
          "\"MySQL_error\"",
          "using",
          "Ws-Mysql-Error-Message",
          "move",
          "WS-MYSQL-Error-Number",
          "to",
          "SQL-Err",
          "move",
          "WS-MYSQL-Error-Message",
          "to",
          "SQL-Msg",
          "if",
          "Sql-State",
          "=",
          "\"23000\"",
          "*>",
          "Dup",
          "key",
          "(rec",
          "already",
          "present)",
          "or",
          "SQL-Err",
          "(1:4)",
          "=",
          "\"1062\"",
          "or",
          "=",
          "\"1022\"",
          "move",
          "22",
          "to",
          "fs-reply",
          "else",
          "move",
          "99",
          "to",
          "fs-reply",
          "*>",
          "this",
          "may",
          "need",
          "changing",
          "for",
          "val",
          "in",
          "WE-Error!!",
          "end-if",
          "end-if",
          "move",
          "spaces",
          "to",
          "WS-File-Key",
          "move",
          "M",
          "to",
          "WS-Temp-Ed",
          "string",
          "\"Cant",
          "Re|WriteRG1",
          "Data",
          "on",
          "\"",
          "WS-Pay-Record",
          "(K:L)",
          "\"",
          "RG=\"",
          "WS-Temp-Ed",
          "into",
          "WS-File-Key",
          "end-string",
          "perform",
          "ba999-End",
          "exit",
          "perform",
          "cycle",
          "end-if",
          "end-if",
          "perform",
          "ba999-End",
          "end-perform"
        ]
      },
      {
        "target": "MySQL_errno",
        "line": 1589,
        "type": "DYNAMIC",
        "using": [
          "WS-MYSQL-Error-Number",
          "call",
          "\"MySQL_sqlstate\"",
          "using",
          "WS-MYSQL-SQLstate",
          "move",
          "WS-MYSQL-SqlState",
          "to",
          "SQL-State",
          "if",
          "WS-MYSQL-Error-Number",
          "not",
          "=",
          "\"0",
          "\"",
          "call",
          "\"MySQL_error\"",
          "using",
          "Ws-Mysql-Error-Message",
          "move",
          "WS-MYSQL-Error-Number",
          "to",
          "SQL-Err",
          "move",
          "WS-MYSQL-Error-Message",
          "to",
          "SQL-Msg",
          "end-if",
          "move",
          "spaces",
          "to",
          "WS-File-Key",
          "move",
          "WS-MYSQL-COUNT-ROWS",
          "to",
          "WS-Temp-Ed",
          "string",
          "\"Delete",
          "for",
          "\"",
          "WS-Pay-Record",
          "(K:L)",
          "\"",
          "only",
          "found",
          "(rg01)",
          "\"",
          "WS-Temp-ED",
          "(7:4)",
          "\"",
          "Rows\"",
          "into",
          "WS-File-Key",
          "end-string",
          "go",
          "to",
          "ba999-End",
          "else",
          "move",
          "spaces",
          "to",
          "SQL-Msg",
          "SQL-State",
          "move",
          "zero",
          "to",
          "SQL-Err",
          "end-if"
        ]
      },
      {
        "target": "MySQL_query",
        "line": 1635,
        "type": "DYNAMIC",
        "using": [
          "SQLCA-STATEMENT",
          "*>",
          "END-CALL",
          "*>",
          "*>",
          "So",
          "if",
          "this",
          "does",
          "not",
          "work",
          "it",
          "will",
          "be",
          "changed"
        ]
      },
      {
        "target": "MySQL_errno",
        "line": 1682,
        "type": "DYNAMIC",
        "using": [
          "WS-MYSQL-Error-Number",
          "call",
          "\"MySQL_sqlstate\"",
          "using",
          "WS-MYSQL-SQLstate",
          "move",
          "WS-MYSQL-SqlState",
          "to",
          "SQL-State",
          "if",
          "WS-MYSQL-Error-Number",
          "not",
          "=",
          "\"0",
          "\"",
          "call",
          "\"MySQL_error\"",
          "using",
          "Ws-Mysql-Error-Message",
          "move",
          "WS-MYSQL-Error-Number",
          "to",
          "SQL-Err",
          "move",
          "WS-MYSQL-Error-Message",
          "to",
          "SQL-Msg",
          "move",
          "99",
          "to",
          "fs-reply",
          "move",
          "995",
          "to",
          "WE-Error",
          "end-if",
          "go",
          "to",
          "ba999-End",
          "else",
          "*>",
          "of",
          "course",
          "there",
          "could",
          "be",
          "no",
          "data",
          "in",
          "table",
          "move",
          "spaces",
          "to",
          "SQL-Msg",
          "move",
          "zero",
          "to",
          "SQL-Err",
          "end-if"
        ]
      },
      {
        "target": "fhlogger",
        "line": 2016,
        "type": "DYNAMIC",
        "using": [
          "File-Access",
          "ACAS-DAL-Common-data"
        ]
      }
    ],
    "copies": [
      {
        "name": "ACAS-SQLstate-error-list",
        "line": 170,
        "replacing": null
      },
      {
        "name": "of",
        "line": 207,
        "replacing": null
      },
      {
        "name": "envdiv",
        "line": 214,
        "replacing": null
      },
      {
        "name": "mysql-variables",
        "line": 299,
        "replacing": null
      },
      {
        "name": "wsfnctn",
        "line": 330,
        "replacing": null
      },
      {
        "name": "Test-Data-Flags",
        "line": 334,
        "replacing": null
      },
      {
        "name": "wspay",
        "line": 336,
        "replacing": null
      },
      {
        "name": "mysql-procedures",
        "line": 1062,
        "replacing": null
      }
    ],
    "performs": [
      {
        "target": "MYSQL-1000-OPEN",
        "thru": "MYSQL-1090-EXIT",
        "line": 425
      },
      {
        "target": "MYSQL-1000-OPEN",
        "thru": "MYSQL-1090-EXIT",
        "line": 452
      },
      {
        "target": "ba998-Free",
        "thru": null,
        "line": 468
      },
      {
        "target": "MYSQL-1980-CLOSE",
        "thru": "MYSQL-1999-EXIT",
        "line": 476
      },
      {
        "target": "MYSQL-1210-COMMAND",
        "thru": "MYSQL-1219-EXIT",
        "line": 520
      },
      {
        "target": "MYSQL-1220-STORE-RESULT",
        "thru": "MYSQL-1239-EXIT",
        "line": 521
      },
      {
        "target": "ba999-End",
        "thru": null,
        "line": 552
      },
      {
        "target": "bb100-UnloadHVs",
        "thru": null,
        "line": 612
      },
      {
        "target": "ba999-End",
        "thru": null,
        "line": 613
      },
      {
        "target": "bc050-Process-Read-Indexed",
        "thru": "bc059-Exit",
        "line": 617
      },
      {
        "target": "MYSQL-1210-COMMAND",
        "thru": "MYSQL-1219-EXIT",
        "line": 659
      },
      {
        "target": "MYSQL-1220-STORE-RESULT",
        "thru": "MYSQL-1239-EXIT",
        "line": 660
      },
      {
        "target": "bb100-UnloadHVs",
        "thru": null,
        "line": 706
      },
      {
        "target": "ba999-End",
        "thru": null,
        "line": 707
      },
      {
        "target": "bc050-Process-Read-Indexed",
        "thru": "bc059-Exit",
        "line": 711
      },
      {
        "target": "ba998-Free",
        "thru": null,
        "line": 715
      },
      {
        "target": "ba998-Free",
        "thru": null,
        "line": 731
      },
      {
        "target": "MYSQL-1210-COMMAND",
        "thru": "MYSQL-1219-EXIT",
        "line": 789
      },
      {
        "target": "MYSQL-1220-STORE-RESULT",
        "thru": "MYSQL-1239-EXIT",
        "line": 790
      },
      {
        "target": "bb000-HV-Load",
        "thru": null,
        "line": 825
      },
      {
        "target": "bb200-Insert",
        "thru": null,
        "line": 831
      },
      {
        "target": "ba999-End",
        "thru": null,
        "line": 848
      },
      {
        "target": "bc070-Process-Write",
        "thru": "bc070-Exit",
        "line": 852
      },
      {
        "target": "MYSQL-1210-COMMAND",
        "thru": "MYSQL-1219-EXIT",
        "line": 889
      },
      {
        "target": "ba999-End",
        "thru": null,
        "line": 907
      },
      {
        "target": "bc080-Process-Delete",
        "thru": "bc080-Exit",
        "line": 911
      },
      {
        "target": "MYSQL-1210-COMMAND",
        "thru": "MYSQL-1219-EXIT",
        "line": 977
      },
      {
        "target": "ba999-End",
        "thru": null,
        "line": 996
      },
      {
        "target": "bc085-Process-Delete-ALL",
        "thru": "bc085-Exit",
        "line": 1000
      },
      {
        "target": "bb000-HV-Load",
        "thru": null,
        "line": 1005
      },
      {
        "target": "bb300-Update",
        "thru": null,
        "line": 1024
      },
      {
        "target": "ba999-End",
        "thru": null,
        "line": 1046
      },
      {
        "target": "bc070-Process-Write",
        "thru": "bc070-Exit",
        "line": 1050
      },
      {
        "target": "Ca-Process-Logs",
        "thru": null,
        "line": 1081
      },
      {
        "target": "MYSQL-1210-COMMAND",
        "thru": "MYSQL-1219-EXIT",
        "line": 1223
      },
      {
        "target": "MYSQL-1210-COMMAND",
        "thru": "MYSQL-1219-EXIT",
        "line": 1333
      },
      {
        "target": "MYSQL-1210-COMMAND",
        "thru": "MYSQL-1219-EXIT",
        "line": 1402
      },
      {
        "target": "MYSQL-1220-STORE-RESULT",
        "thru": "MYSQL-1239-EXIT",
        "line": 1403
      },
      {
        "target": "ba999-End",
        "thru": null,
        "line": 1436
      },
      {
        "target": "bc100-UnloadHVs-rg1",
        "thru": null,
        "line": 1462
      },
      {
        "target": "ba999-End",
        "thru": null,
        "line": 1478
      },
      {
        "target": "varying",
        "thru": null,
        "line": 1486
      },
      {
        "target": "cycle",
        "thru": null,
        "line": 1489
      },
      {
        "target": "bc000-HV-Load-rg1",
        "thru": null,
        "line": 1491
      },
      {
        "target": "bc200-Insert-rg1",
        "thru": null,
        "line": 1504
      },
      {
        "target": "bc300-Update-rg1",
        "thru": null,
        "line": 1506
      },
      {
        "target": "bc300-Update-rg1",
        "thru": null,
        "line": 1512
      },
      {
        "target": "ba999-End",
        "thru": null,
        "line": 1540
      },
      {
        "target": "cycle",
        "thru": null,
        "line": 1541
      },
      {
        "target": "ba999-End",
        "thru": null,
        "line": 1544
      },
      {
        "target": "MYSQL-1210-COMMAND",
        "thru": "MYSQL-1219-EXIT",
        "line": 1583
      },
      {
        "target": "ba999-End",
        "thru": null,
        "line": 1612
      },
      {
        "target": "MYSQL-1210-COMMAND",
        "thru": "MYSQL-1219-EXIT",
        "line": 1679
      },
      {
        "target": "ba999-End",
        "thru": null,
        "line": 1698
      },
      {
        "target": "ba999-End",
        "thru": null,
        "line": 1748
      },
      {
        "target": "MYSQL-1210-COMMAND",
        "thru": "MYSQL-1219-EXIT",
        "line": 1868
      },
      {
        "target": "MYSQL-1210-COMMAND",
        "thru": "MYSQL-1219-EXIT",
        "line": 2006
      }
    ]
  },
  "dataFlow": {
    "files": [],
    "moves": [
      {
        "from": "24",
        "to": "ws-env-lines ws-lines\n     else\n              move  ws-env-lines to ws-lines\n     end-if\n*> Force Esc, PgUp, PgDown, PrtSC to be detected\n     set      ENVIRONMENT \"COB_SCREEN_EXCEPTIONS\" to \"Y\"",
        "line": 363
      },
      {
        "from": "zero",
        "to": "SQL-State",
        "line": 376
      },
      {
        "from": "spaces",
        "to": "WS-MYSQL-Error-Message\n                        WS-MYSQL-Error-Number\n                        WS-Log-Where\n                        WS-File-Key\n                        SQL-Msg\n                        SQL-Err",
        "line": 381
      },
      {
        "from": "1",
        "to": "ws-No-Paragraph",
        "line": 451
      },
      {
        "from": "2",
        "to": "ws-No-Paragraph",
        "line": 470
      },
      {
        "from": "spaces",
        "to": "WS-Where\n              move     1   to J\n              string   \"`\"                   delimited by size\n                       KeyName (KOR-x1)      delimited by space\n                       \"`\"                   delimited by size\n                       \" >= \"                 delimited by size\n                       '\"000000000\"'             delimited by size\n                       ' ORDER BY '          delimited by size\n                       \"`\"                   delimited by size\n                       keyname (KOR-x1)      delimited by space\n                       \"`\"                   delimited by size\n                         ' ASC'              delimited by size\n                                      into ws-Where\n                                      with pointer J\n              end-string\n*>\n              move     ws-Where (1:J)   to WS-Log-Where       *>  For test logging\n              move     3 to ws-No-Paragraph\n*>               /MYSQL SELECT\\\n*>\n*>    Select rows\n*>\n*>                    TABLE=PLPAY-REC\n           INITIALIZE WS-MYSQL-COMMAND\n           STRING \"SELECT * FROM \"\n             \"`PLPAY-REC`\"\n             \" WHERE \"\n             ws-Where (1:J)\n            \";\"  X\"00\" INTO WS-MYSQL-COMMAND\n           PERFORM MYSQL-1210-COMMAND THRU MYSQL-1219-EXIT\n           PERFORM MYSQL-1220-STORE-RESULT THRU MYSQL-1239-EXIT\n           MOVE WS-MYSQL-RESULT TO TP-PLPAY-REC\n*>               /MYSQL-END\\\n           move    \"000000000\" to WS-File-Key\n              if    Testing-2\n                    display Display-Message-1 with erase eos\n              end-if\n*>\n*>  It could be an empty table so test for it\n*>\n              if       WS-MYSQL-Count-Rows = zero\n                       call  \"MySQL_errno\" using WS-MYSQL-Error-Number\n                       call  \"MySQL_sqlstate\" using WS-MYSQL-SQLstate\n                       move  WS-MYSQL-SqlState   to SQL-State\n                       if    WS-MYSQL-Error-Number  not = \"0  \"    *> set non '0' if no rows ?\n                             move WS-MYSQL-Error-Number to SQL-Err\n                             call \"MySQL_error\" using WS-MYSQL-Error-Message\n                             move WS-MYSQL-Error-Message to SQL-Msg\n                       end-if       *> do not really need to do this meaning the above CALL\n                       move 10 to fs-reply\n                       move 10 to WE-Error        *> should be 0 'JIC' likewise the others\n                       move    \"No Data\" to WS-File-Key\n                       go to ba999-End       *> can clear the dup code after testing\n              end-if                         *> We have data\n              set      Cursor-Active to true\n              move     WS-MYSQL-Count-Rows to WS-Temp-Ed\n              string   \"> 0 got cnt=\" delimited by size\n                       WS-Temp-ED delimited by size\n                       \" recs for PAY-RECORD Table\"\n                        into WS-File-Key\n              end-string\n              perform ba999-End                         *> log it\n     end-if",
        "line": 491
      },
      {
        "from": "spaces",
        "to": "WS-Log-Where",
        "line": 559
      },
      {
        "from": "4",
        "to": "ws-No-Paragraph",
        "line": 560
      },
      {
        "from": "zero",
        "to": "return-code",
        "line": 561
      },
      {
        "from": "TP-PLPAY-REC",
        "to": "WS-MYSQL-RESULT\n           CALL \"MySQL_fetch_record\" USING WS-MYSQL-RESULT\n                    HV-PAY-KEY\n                    HV-PAY-CONT\n                    HV-PAY-DAT\n                    HV-PAY-CHEQUE\n                    HV-PAY-SORTCODE\n                    HV-PAY-ACCOUNT\n                    HV-PAY-GROSS\n\n*>      /MYSQL-END\\\n     end-call\n*>\n     if       return-code = -1     *> no more data so free cursor & return\n              move 10 to fs-Reply\n                         WE-Error      *> should be 0 likewise the others\n              move    \"EOF\" to WS-File-Key\n              set Cursor-Not-Active to true\n              go to ba999-End\n     end-if\n*>\n     if       WS-MYSQL-Count-Rows = zero   *> no data but should not happen here\n              call  \"MySQL_errno\" using WS-MYSQL-Error-Number\n              call  \"MySQL_sqlstate\" using WS-MYSQL-SQLstate\n              move  WS-MYSQL-SqlState   to SQL-State\n              if    WS-MYSQL-Error-Number  not = \"0  \"\n                    call \"MySQL_error\" using WS-MYSQL-Error-Message\n                    move WS-MYSQL-Error-Number  to SQL-Err   *> Not really needed but help for testing\n                    move WS-MYSQL-Error-Message to SQL-Msg   *>  ditto\n                    initialize WS-Pay-Record with filler\n                   move    \"EOF2\" to WS-File-Key\n              end-if\n              move 10 to fs-reply                  *> EOF equivilent !!\n              move 10 to WE-Error\n              set Cursor-Not-Active to true\n              go to ba999-End\n     end-if",
        "line": 568
      },
      {
        "from": "\"EOF3\"",
        "to": "WS-File-Key\n              go to ba999-End\n     end-if",
        "line": 608
      },
      {
        "from": "HV-PAY-KEY",
        "to": "WS-File-Key",
        "line": 619
      },
      {
        "from": "zero",
        "to": "fs-reply WE-Error",
        "line": 620
      },
      {
        "from": "spaces",
        "to": "WS-Where\n     move     1   to J\n     string   \"`\"                   delimited by size\n              KeyName (KOR-x1)      delimited by space\n              \"`\"                   delimited by size\n              '=\"'                  delimited by size\n              WS-Pay-Record (K:L)       delimited by size\n              '\"'                   delimited by size\n                      into WS-Where\n                        with pointer J\n     end-string\n     move     WS-Where (1:J)   to WS-Log-Where",
        "line": 632
      },
      {
        "from": "5",
        "to": "ws-No-Paragraph\n*>      /MYSQL SELECT\\\n*>\n*>    Select rows\n*>\n*>             TABLE=PLPAY-REC\n           INITIALIZE WS-MYSQL-COMMAND\n           STRING \"SELECT * FROM \"\n             \"`PLPAY-REC`\"\n             \" WHERE \"\n             WS-Where (1:J)\n            \";\"  X\"00\" INTO WS-MYSQL-COMMAND\n           PERFORM MYSQL-1210-COMMAND THRU MYSQL-1219-EXIT\n           PERFORM MYSQL-1220-STORE-RESULT THRU MYSQL-1239-EXIT\n           MOVE WS-MYSQL-RESULT TO TP-PLPAY-REC\n*>      /MYSQL-END\\\n*>\n     if     WS-MYSQL-Count-Rows = zero\n            move 23  to fs-Reply             *> could also be 21 or 14\n            move zero to WE-Error\n            go to ba998-Free\n     end-if\n     move     6 to ws-No-Paragraph\n*>      /MYSQL FETCH\\\n*>\n*>    Fetch next record\n*>\n*>             TABLE=PLPAY-REC\n           MOVE TP-PLPAY-REC TO WS-MYSQL-RESULT\n           CALL \"MySQL_fetch_record\" USING WS-MYSQL-RESULT\n                    HV-PAY-KEY\n                    HV-PAY-CONT\n                    HV-PAY-DAT\n                    HV-PAY-CHEQUE\n                    HV-PAY-SORTCODE\n                    HV-PAY-ACCOUNT\n                    HV-PAY-GROSS\n\n*>      /MYSQL-END\\\n     end-call\n*>\n     if       WS-MYSQL-Count-Rows not > zero\n              call     \"MySQL_errno\" using WS-MYSQL-Error-Number\n              call  \"MySQL_sqlstate\" using WS-MYSQL-SQLstate\n              move  WS-MYSQL-SqlState   to SQL-State\n              if    WS-MYSQL-Error-Number  not = \"0  \"\n                    move 990 to WE-Error\n                    call \"MySQL_error\" using WS-MYSQL-Error-Message\n                    move WS-MYSQL-Error-Number to SQL-Err\n                    move WS-MYSQL-Error-Message to SQL-Msg\n              else\n                    move 989  to WE-Error\n                    move zero to SQL-Err\n                    move spaces to SQL-Msg\n              end-if\n              move 23   to fs-reply\n              move spaces to WS-File-Key\n              go to ba998-Free\n     end-if                        *> row count zero should show up as a MYSQL error ?\n     perform bb100-UnloadHVs       *> transfer/move HV vars to ws-Record layout\n     perform ba999-End",
        "line": 647
      },
      {
        "from": "HV-PAY-KEY",
        "to": "WS-File-Key",
        "line": 713
      },
      {
        "from": "zero",
        "to": "FS-Reply WE-Error",
        "line": 714
      },
      {
        "from": "99",
        "to": "FS-Reply\n              move 997 to WE-Error                     *> Invalid calling parameter settings     997\n              go to ba999-end\n     end-if\n*>\n*>  First clear any active cursors\n*>\n     if       Cursor-Active\n              perform ba998-Free",
        "line": 723
      },
      {
        "from": "spaces",
        "to": "MOST-Relation",
        "line": 740
      },
      {
        "from": "1",
        "to": "J",
        "line": 741
      },
      {
        "from": "spaces",
        "to": "WS-Where\n     string   \"`\"                   delimited by size\n              KeyName (KOR-x1)      delimited by space\n              \"`\"                   delimited by size\n              MOST-relation         delimited by space\n              '\"'                   delimited by size\n              WS-Pay-Record (K:L)       delimited by size\n              '\"'                   delimited by size\n              ' ORDER BY '          delimited by size\n              \"`\"                   delimited by size\n              keyname (KOR-x1)      delimited by space\n              \"`\"                   delimited by size\n                ' ASC  '            delimited by size\n                             into WS-Where\n                             with pointer J\n     end-string\n     move     WS-Where (1:J)  to WS-Log-Where",
        "line": 755
      },
      {
        "from": "8",
        "to": "ws-No-Paragraph\n*>      /MYSQL SELECT\\\n*>\n*>    Select rows\n*>\n*>             TABLE=PLPAY-REC\n           INITIALIZE WS-MYSQL-COMMAND\n           STRING \"SELECT * FROM \"\n             \"`PLPAY-REC`\"\n             \" WHERE \"\n             WS-Where (1:J)\n            \";\"  X\"00\" INTO WS-MYSQL-COMMAND\n           PERFORM MYSQL-1210-COMMAND THRU MYSQL-1219-EXIT\n           PERFORM MYSQL-1220-STORE-RESULT THRU MYSQL-1239-EXIT\n           MOVE WS-MYSQL-RESULT TO TP-PLPAY-REC\n*>      /MYSQL-END\\\n*>\n     if       WS-MYSQL-Count-Rows not zero\n              set Cursor-Active to true\n     end-if\n*>\n     if       WS-MYSQL-Count-Rows = zero\n              call  \"MySQL_errno\" using WS-MYSQL-Error-Number\n              call  \"MySQL_sqlstate\" using WS-MYSQL-SQLstate\n              move  WS-MYSQL-SqlState   to SQL-State\n              if    WS-MYSQL-Error-Number  not = \"0  \"\n                    call \"MySQL_error\" using WS-MYSQL-Error-Message\n                    move WS-MYSQL-Error-Number  to SQL-Err\n                    move WS-MYSQL-Error-Message to SQL-Msg\n              end-if\n              move 21 to fs-reply                  *> this may need changing for val in WE-Error!!\n              move zero to WE-Error\n     else\n              move  zero to FS-Reply WE-Error\n              move     WS-MYSQL-Count-Rows to WS-Temp-Ed\n              string   MOST-relation\n                       WS-Pay-Record (K:L)\n                       \" got \" delimited by size\n                       WS-Temp-ED delimited by size\n                       \" recs\"\n                        into WS-File-Key\n              end-string\n     end-if\n     go       to ba999-end",
        "line": 777
      },
      {
        "from": "WS-PAY-KEY",
        "to": "WS-File-Key",
        "line": 826
      },
      {
        "from": "zero",
        "to": "FS-Reply WE-Error SQL-State\n     move     spaces to SQL-Msg\n     move     zero to SQL-Err\n     move     10 to ws-No-Paragraph",
        "line": 827
      },
      {
        "from": "WS-MYSQL-SqlState",
        "to": "SQL-State\n              move 99 to fs-reply                  *> this may need changing for val in WE-Error!!\n              if    WS-MYSQL-Error-Number  not = \"0  \"\n                    call \"MySQL_error\" using Ws-Mysql-Error-Message\n                    move WS-MYSQL-Error-Number  to SQL-Err\n                    move WS-MYSQL-Error-Message to SQL-Msg\n                    if    SQL-Err (1:4) = \"1062\"\n                                     or = \"1022\"   *> Dup key (rec already present)\n                        or Sql-State = \"23000\"  *> Dup key (rec already present)\n                          move 22 to fs-reply\n                    end-if\n              end-if\n     end-if\n     perform  ba999-End",
        "line": 835
      },
      {
        "from": "spaces",
        "to": "WS-Where\n     move     1   to J\n     string   \"`\"                   delimited by size\n              KeyName (KOR-x1)      delimited by space\n              \"`\"                   delimited by size\n              '=\"'                  delimited by size\n              WS-Pay-Record (K:L)       delimited by size\n              '\"'                   delimited by size\n                      into WS-Where\n                        with pointer J\n     end-string\n     move     WS-Pay-Record (K:L)  to WS-File-Key",
        "line": 861
      },
      {
        "from": "13",
        "to": "ws-No-Paragraph",
        "line": 877
      },
      {
        "from": "WS-MYSQL-SqlState",
        "to": "SQL-State\n              if    WS-MYSQL-Error-Number  not = \"0  \"\n                    call \"MySQL_error\" using Ws-Mysql-Error-Message\n                    move WS-MYSQL-Error-Number  to SQL-Err\n                    move WS-MYSQL-Error-Message to SQL-Msg\n              end-if\n              move 99 to fs-reply\n              move 995 to WE-Error\n              go to ba999-End\n     else\n              move spaces to SQL-Msg\n              move zero   to SQL-Err\n     end-if",
        "line": 894
      },
      {
        "from": "zero",
        "to": "FS-Reply WE-Error",
        "line": 913
      },
      {
        "from": "LOW-VALUES",
        "to": "SQLCA-STATEMENT\n*>   STRING\n*>     \"DELETE \" DELIMITED BY SIZE\n*>     \"FROM \" DELIMITED BY SIZE\n*>     \"PLPAY-REC \" DELIMITED BY SIZE\n*>   INTO SQLCA-STATEMENT\n*>   END-STRING\n*>     CALL \"MySQL_query\" USING SQLCA-STATEMENT\n*>   END-CALL\n*>\n*> So if this does not work it will be changed",
        "line": 926
      },
      {
        "from": "high-values",
        "to": "WS-Pay-Supl-Key",
        "line": 938
      },
      {
        "from": "99",
        "to": "WS-Pay-Nos",
        "line": 939
      },
      {
        "from": "spaces",
        "to": "WS-Where\n     move     1   to J\n     string   \"`\"                   delimited by size\n              KeyName (KOR-x1)      delimited by space\n              \"`\"                   delimited by size\n              '<\"'                  delimited by size\n              WS-Pay-Record (K:L)    delimited by size\n              '\"'                   delimited by size\n                      into WS-Where\n                        with pointer J\n     end-string\n     move     spaces to WS-File-Key\n     string   \"Deleting back from \" delimited by size\n               WS-Pay-Key             delimited by size\n                      into WS-File-Key\n     end-string                                   *> for logging\n     move     WS-Where (1:J)   to WS-Log-Where",
        "line": 945
      },
      {
        "from": "15",
        "to": "ws-No-Paragraph",
        "line": 965
      },
      {
        "from": "WS-MYSQL-SqlState",
        "to": "SQL-State\n              if    WS-MYSQL-Error-Number  not = \"0  \"\n                    call \"MySQL_error\" using Ws-Mysql-Error-Message\n                    move WS-MYSQL-Error-Number  to SQL-Err\n                    move WS-MYSQL-Error-Message to SQL-Msg\n              end-if\n              move 99 to fs-reply\n              move 995 to WE-Error\n              go to ba999-End\n     else      *> of course there could be no data in table\n              move spaces to SQL-Msg\n              move zero   to SQL-Err\n     end-if",
        "line": 982
      },
      {
        "from": "zero",
        "to": "FS-Reply WE-Error",
        "line": 995
      },
      {
        "from": "WS-PAY-KEY",
        "to": "WS-File-Key",
        "line": 1006
      },
      {
        "from": "17",
        "to": "ws-No-Paragraph",
        "line": 1007
      },
      {
        "from": "spaces",
        "to": "WS-Where\n     move     1   to J\n     string   \"`\"                   delimited by size\n              KeyName (KOR-x1)      delimited by space\n              \"`\"                   delimited by size\n              '=\"'                  delimited by size\n              WS-Pay-Record (K:L)       delimited by size\n              '\"'                   delimited by size\n                      into WS-Where\n                        with pointer J\n     end-string\n     move     WS-Where (1:J)   to WS-Log-Where",
        "line": 1012
      },
      {
        "from": "WS-MYSQL-SqlState",
        "to": "SQL-State\n              if    WS-MYSQL-Error-Number  not = \"0  \"\n                    call \"MySQL_error\" using Ws-Mysql-Error-Message\n                    move WS-MYSQL-Error-Number  to SQL-Err\n                    move WS-MYSQL-Error-Message to SQL-Msg\n              end-if\n              move 99 to fs-reply                  *> this may need changing for val in WE-Error!!\n              move 994 to WE-Error\n              go to ba999-End\n     end-if\n     move     zero   to FS-Reply WE-Error",
        "line": 1033
      },
      {
        "from": "zero",
        "to": "SQL-Err",
        "line": 1044
      },
      {
        "from": "spaces",
        "to": "SQL-Msg",
        "line": 1045
      },
      {
        "from": "990",
        "to": "WE-Error",
        "line": 1057
      },
      {
        "from": "99",
        "to": "Fs-Reply",
        "line": 1058
      },
      {
        "from": "20",
        "to": "ws-No-Paragraph",
        "line": 1066
      },
      {
        "from": "TP-PLPAY-REC",
        "to": "WS-MYSQL-RESULT\n           CALL \"MySQL_free_result\" USING WS-MYSQL-RESULT end-call\n*>      /MYSQL-END\\\n     set      Cursor-Not-Active to true",
        "line": 1072
      },
      {
        "from": "WS-Pay-Key",
        "to": "HV-PAY-KEY",
        "line": 1096
      },
      {
        "from": "WS-Pay-Cont",
        "to": "HV-PAY-CONT",
        "line": 1097
      },
      {
        "from": "WS-Pay-Date",
        "to": "HV-PAY-DAT",
        "line": 1098
      },
      {
        "from": "WS-Pay-Cheque",
        "to": "HV-PAY-CHEQUE",
        "line": 1099
      },
      {
        "from": "WS-Pay-SortCode",
        "to": "HV-PAY-SORTCODE",
        "line": 1100
      },
      {
        "from": "WS-Pay-Account",
        "to": "HV-PAY-ACCOUNT",
        "line": 1101
      },
      {
        "from": "WS-Pay-Gross",
        "to": "HV-PAY-GROSS",
        "line": 1102
      },
      {
        "from": "HV-PAY-KEY",
        "to": "WS-Pay-Key",
        "line": 1113
      },
      {
        "from": "HV-PAY-CONT",
        "to": "WS-Pay-Cont\n     move     HV-PAY-DAT          to WS-Pay-Date\n     move     HV-PAY-CHEQUE       to WS-Pay-Cheque\n     move     HV-PAY-SORTCODE     to WS-Pay-SortCode\n     move     HV-PAY-ACCOUNT      to WS-Pay-Account\n     move     HV-PAY-GROSS        to WS-Pay-Gross",
        "line": 1114
      },
      {
        "from": "1",
        "to": "WS-MYSQL-I\n           STRING 'INSERT INTO '\n                    '`PLPAY-REC` SET '\n              INTO WS-MYSQL-COMMAND\n              WITH POINTER WS-MYSQL-I end-string\n*>\n           STRING '`PAY-KEY`=\"' INTO WS-MYSQL-COMMAND\n                   WITH POINTER WS-MYSQL-I end-string\n           STRING FUNCTION TRIM (HV-PAY-KEY,TRAILING)\n                  '\"'\n                   INTO WS-MYSQL-COMMAND\n                   WITH POINTER WS-MYSQL-I end-string\n           STRING ', 'INTO WS-MYSQL-COMMAND\n           WITH POINTER WS-MYSQL-I end-string\n*>\n           STRING '`PAY-CONT`=\"' INTO WS-MYSQL-COMMAND\n                   WITH POINTER WS-MYSQL-I end-string\n           STRING FUNCTION TRIM (HV-PAY-CONT,TRAILING)\n                  '\"'\n                   INTO WS-MYSQL-COMMAND\n                   WITH POINTER WS-MYSQL-I end-string\n           STRING ', 'INTO WS-MYSQL-COMMAND\n           WITH POINTER WS-MYSQL-I end-string\n*>\n           STRING '`PAY-DAT`=\"' INTO WS-MYSQL-COMMAND\n                   WITH POINTER WS-MYSQL-I end-string\n           MOVE HV-PAY-DAT\n             TO WS-MYSQL-EDIT\n           STRING FUNCTION TRIM (WS-MYSQL-EDIT(11:10))\n             INTO WS-MYSQL-COMMAND\n             WITH POINTER WS-MYSQL-I end-string\n           STRING '\"' INTO WS-MYSQL-COMMAND\n           WITH POINTER WS-MYSQL-I end-string\n           STRING ', 'INTO WS-MYSQL-COMMAND\n           WITH POINTER WS-MYSQL-I end-string\n*>\n           STRING '`PAY-CHEQUE`=\"' INTO WS-MYSQL-COMMAND\n                   WITH POINTER WS-MYSQL-I end-string\n           MOVE HV-PAY-CHEQUE\n             TO WS-MYSQL-EDIT\n           STRING FUNCTION TRIM (WS-MYSQL-EDIT(11:10))\n             INTO WS-MYSQL-COMMAND\n             WITH POINTER WS-MYSQL-I end-string\n           STRING '\"' INTO WS-MYSQL-COMMAND\n           WITH POINTER WS-MYSQL-I end-string\n           STRING ', 'INTO WS-MYSQL-COMMAND\n           WITH POINTER WS-MYSQL-I end-string\n*>\n           STRING '`PAY-SORTCODE`=\"' INTO WS-MYSQL-COMMAND\n                   WITH POINTER WS-MYSQL-I end-string\n           MOVE HV-PAY-SORTCODE\n             TO WS-MYSQL-EDIT\n           STRING FUNCTION TRIM (WS-MYSQL-EDIT(11:10))\n             INTO WS-MYSQL-COMMAND\n             WITH POINTER WS-MYSQL-I end-string\n           STRING '\"' INTO WS-MYSQL-COMMAND\n           WITH POINTER WS-MYSQL-I end-string\n           STRING ', 'INTO WS-MYSQL-COMMAND\n           WITH POINTER WS-MYSQL-I end-string\n*>\n           STRING '`PAY-ACCOUNT`=\"' INTO WS-MYSQL-COMMAND\n                   WITH POINTER WS-MYSQL-I end-string\n           MOVE HV-PAY-ACCOUNT\n             TO WS-MYSQL-EDIT\n           STRING FUNCTION TRIM (WS-MYSQL-EDIT(11:10))\n             INTO WS-MYSQL-COMMAND\n             WITH POINTER WS-MYSQL-I end-string\n           STRING '\"' INTO WS-MYSQL-COMMAND\n           WITH POINTER WS-MYSQL-I end-string\n           STRING ', 'INTO WS-MYSQL-COMMAND\n           WITH POINTER WS-MYSQL-I end-string\n*>\n           STRING '`PAY-GROSS`=\"' INTO WS-MYSQL-COMMAND\n                   WITH POINTER WS-MYSQL-I end-string\n           MOVE HV-PAY-GROSS\n             TO WS-MYSQL-EDIT\n           STRING FUNCTION TRIM (WS-MYSQL-EDIT(13:08))\n             INTO WS-MYSQL-COMMAND\n             WITH POINTER WS-MYSQL-I end-string\n           STRING \"",
        "line": 1133
      },
      {
        "from": "1",
        "to": "WS-MYSQL-I\n           STRING 'UPDATE '\n                    '`PLPAY-REC` SET '\n              INTO WS-MYSQL-COMMAND\n              WITH POINTER WS-MYSQL-I end-string\n*>\n           STRING '`PAY-KEY`=\"' INTO WS-MYSQL-COMMAND\n                   WITH POINTER WS-MYSQL-I end-string\n           STRING FUNCTION TRIM (HV-PAY-KEY,TRAILING)\n                  '\"'\n                   INTO WS-MYSQL-COMMAND\n                   WITH POINTER WS-MYSQL-I end-string\n           STRING ', 'INTO WS-MYSQL-COMMAND\n           WITH POINTER WS-MYSQL-I end-string\n*>\n           STRING '`PAY-CONT`=\"' INTO WS-MYSQL-COMMAND\n                   WITH POINTER WS-MYSQL-I end-string\n           STRING FUNCTION TRIM (HV-PAY-CONT,TRAILING)\n                  '\"'\n                   INTO WS-MYSQL-COMMAND\n                   WITH POINTER WS-MYSQL-I end-string\n           STRING ', 'INTO WS-MYSQL-COMMAND\n           WITH POINTER WS-MYSQL-I end-string\n*>\n           STRING '`PAY-DAT`=\"' INTO WS-MYSQL-COMMAND\n                   WITH POINTER WS-MYSQL-I end-string\n           MOVE HV-PAY-DAT\n             TO WS-MYSQL-EDIT\n           STRING FUNCTION TRIM (WS-MYSQL-EDIT(11:10))\n             INTO WS-MYSQL-COMMAND\n             WITH POINTER WS-MYSQL-I end-string\n           STRING '\"' INTO WS-MYSQL-COMMAND\n           WITH POINTER WS-MYSQL-I end-string\n           STRING ', 'INTO WS-MYSQL-COMMAND\n           WITH POINTER WS-MYSQL-I end-string\n*>\n           STRING '`PAY-CHEQUE`=\"' INTO WS-MYSQL-COMMAND\n                   WITH POINTER WS-MYSQL-I end-string\n           MOVE HV-PAY-CHEQUE\n             TO WS-MYSQL-EDIT\n           STRING FUNCTION TRIM (WS-MYSQL-EDIT(11:10))\n             INTO WS-MYSQL-COMMAND\n             WITH POINTER WS-MYSQL-I end-string\n           STRING '\"' INTO WS-MYSQL-COMMAND\n           WITH POINTER WS-MYSQL-I end-string\n           STRING ', 'INTO WS-MYSQL-COMMAND\n           WITH POINTER WS-MYSQL-I end-string\n*>\n           STRING '`PAY-SORTCODE`=\"' INTO WS-MYSQL-COMMAND\n                   WITH POINTER WS-MYSQL-I end-string\n           MOVE HV-PAY-SORTCODE\n             TO WS-MYSQL-EDIT\n           STRING FUNCTION TRIM (WS-MYSQL-EDIT(11:10))\n             INTO WS-MYSQL-COMMAND\n             WITH POINTER WS-MYSQL-I end-string\n           STRING '\"' INTO WS-MYSQL-COMMAND\n           WITH POINTER WS-MYSQL-I end-string\n           STRING ', 'INTO WS-MYSQL-COMMAND\n           WITH POINTER WS-MYSQL-I end-string\n*>\n           STRING '`PAY-ACCOUNT`=\"' INTO WS-MYSQL-COMMAND\n                   WITH POINTER WS-MYSQL-I end-string\n           MOVE HV-PAY-ACCOUNT\n             TO WS-MYSQL-EDIT\n           STRING FUNCTION TRIM (WS-MYSQL-EDIT(11:10))\n             INTO WS-MYSQL-COMMAND\n             WITH POINTER WS-MYSQL-I end-string\n           STRING '\"' INTO WS-MYSQL-COMMAND\n           WITH POINTER WS-MYSQL-I end-string\n           STRING ', 'INTO WS-MYSQL-COMMAND\n           WITH POINTER WS-MYSQL-I end-string\n*>\n           STRING '`PAY-GROSS`=\"' INTO WS-MYSQL-COMMAND\n                   WITH POINTER WS-MYSQL-I end-string\n           MOVE HV-PAY-GROSS\n             TO WS-MYSQL-EDIT\n           STRING FUNCTION TRIM (WS-MYSQL-EDIT(13:08))\n             INTO WS-MYSQL-COMMAND\n             WITH POINTER WS-MYSQL-I end-string\n           STRING \"",
        "line": 1239
      },
      {
        "from": "WS-Mysql-Result",
        "to": "WS-Mysql-Save-Result",
        "line": 1366
      },
      {
        "from": "WS-Mysql-Count-Rows",
        "to": "WS-Mysql-Save-Count-Rows",
        "line": 1367
      },
      {
        "from": "zero",
        "to": "WS-Mysql-Count-Rows",
        "line": 1368
      },
      {
        "from": "spaces",
        "to": "WS-Where\n     move     1   to J\n     string   \"`\"                   delimited by size\n              KeyName (KOR-x1)      delimited by space\n              \"`\"                   delimited by size\n              '=\"'                  delimited by size\n              WS-Pay-Record (K:L)    delimited by size\n              '\"'                   delimited by size\n                      into WS-Where\n                        with pointer J\n     end-string",
        "line": 1375
      },
      {
        "from": "51",
        "to": "ws-No-Paragraph",
        "line": 1390
      },
      {
        "from": "WS-MYSQL-RESULT",
        "to": "TP-PLPAY-RECRG01\n*>      /MYSQL-END\\\n*>\n*> Test for no data but this should not happen - Bug in code somewhere\n*>  when inserting it",
        "line": 1404
      },
      {
        "from": "WS-MYSQL-SqlState",
        "to": "SQL-State\n              if      WS-MYSQL-Error-Number  not = \"0  \"    *> set non '0' if no rows ?\n                      move WS-MYSQL-Error-Number to SQL-Err\n                      call \"MySQL_error\" using WS-MYSQL-Error-Message\n                      move WS-MYSQL-Error-Message to SQL-Msg\n              end-if\n              move    23  to fs-reply\n              move    890 to WE-Error\n              move    spaces to WS-File-Key\n              string  \"No RG1 Data for \"\n                      WS-Pay-Record (K:L)\n                        into WS-File-Key\n              end-string\n              go      to bc058-Restore-Pointers  *> do ba999-end at end\n     end-if\n*>\n     move     WS-MYSQL-Count-Rows to WS-Temp-Ed",
        "line": 1413
      },
      {
        "from": "52",
        "to": "ws-No-Paragraph\n*>      /MYSQL FETCH\\\n*>\n*>    Fetch next record\n*>\n*>             TABLE=PLPAY-RECrg01\n           MOVE TP-PLPAY-RECRG01 TO WS-MYSQL-RESULT\n           CALL \"MySQL_fetch_record\" USING WS-MYSQL-RESULT\n                    HV1-PAY-FOLIO\n                    HV1-PAY-PERIOD\n                    HV1-PAY-VALUE\n                    HV1-PAY-DEDUCT\n                    HV1-PAY-INVOICE\n                    HV1-LEVEL-J\n                    HV1-PAY-KEY\n\n*>      /MYSQL-END\\\n     end-call\n*>\n     if       WS-MYSQL-Count-Rows  > zero\n              perform  bc100-UnloadHVs-rg1       *> transfer/move HV vars to ws-Record layout\n              go to bc051-Fetch-RG1\n     end-if\n*>\n*> No more rows for key\n*>\n     move     HV-PAY-KEY to WS-File-Key",
        "line": 1442
      },
      {
        "from": "zero",
        "to": "FS-Reply WE-Error",
        "line": 1469
      },
      {
        "from": "WS-Mysql-Save-Result",
        "to": "WS-Mysql-Result",
        "line": 1476
      },
      {
        "from": "WS-Mysql-Save-Count-Rows",
        "to": "WS-Mysql-Count-Rows",
        "line": 1477
      },
      {
        "from": "M",
        "to": "WS-Level-J\n              move     spaces to WS-File-Key\n              string   WS-PAY-KEY   delimited by size\n                       \" RG = \"       delimited by size\n                       WS-Level-J   delimited by size\n                             into WS-File-Key\n              end-string\n              move     zero to FS-Reply WE-Error\n              move     spaces to SQL-Msg SQL-State\n              move     zero to SQL-Err\n              move     53  to ws-No-Paragraph\n              if       fn-Write\n                       perform  bc200-Insert-rg1\n              else                                      *> fn-Re-write\n                       perform  bc300-Update-rg1\n              end-if\n              if       WS-MYSQL-COUNT-ROWS not = 1\n                       call  \"MySQL_sqlstate\" using WS-MYSQL-SQLstate\n                       move  WS-MYSQL-SqlState   to SQL-State\n                       if    Sql-State = \"23000\"\n                             perform bc300-Update-rg1\n                       end-if\n                       if      WS-MYSQL-COUNT-ROWS not = 1\n                               call  \"MySQL_errno\" using WS-MYSQL-Error-Number\n                               call  \"MySQL_sqlstate\" using WS-MYSQL-SQLstate\n                               move  WS-MYSQL-SqlState   to SQL-State\n                               move  99 to fs-reply                  *> this may need changing for val in WE-Error!!\n                               if    WS-MYSQL-Error-Number  not = \"0  \"\n                                  or Sql-State = \"23000\"      *> Dup key (rec already present)\n                                     call \"MySQL_error\" using Ws-Mysql-Error-Message\n                                     move WS-MYSQL-Error-Number  to SQL-Err\n                                     move WS-MYSQL-Error-Message to SQL-Msg\n                                     if   Sql-State = \"23000\"      *> Dup key (rec already present)\n                                       or SQL-Err (1:4) = \"1062\"\n                                       or               = \"1022\"\n                                          move 22 to fs-reply\n                                     else\n                                          move 99 to fs-reply                  *> this may need changing for val in WE-Error!!\n                                     end-if\n                               end-if\n                               move    spaces to WS-File-Key\n                               move    M to WS-Temp-Ed\n                               string  \"Cant Re|WriteRG1 Data on \"\n                                       WS-Pay-Record (K:L)\n                                       \" RG=\"\n                                       WS-Temp-Ed\n                                           into WS-File-Key\n                               end-string\n                               perform ba999-End\n                               exit perform cycle\n                      end-if\n              end-if\n              perform ba999-End\n     end-perform",
        "line": 1492
      },
      {
        "from": "spaces",
        "to": "WS-Where\n     move     1   to J\n     string   \"`\"                   delimited by size\n              KeyName (KOR-x1)      delimited by space\n              \"`\"                   delimited by size\n              '=\"'                  delimited by size\n              WS-Pay-Record (K:L)       delimited by size\n              '\"'                   delimited by size\n                      into WS-Where\n                        with pointer J\n     end-string\n     move     WS-Pay-Record (K:L)  to WS-File-Key",
        "line": 1555
      },
      {
        "from": "54",
        "to": "ws-No-Paragraph",
        "line": 1571
      },
      {
        "from": "WS-MYSQL-SqlState",
        "to": "SQL-State\n              if    WS-MYSQL-Error-Number  not = \"0  \"\n                    call \"MySQL_error\" using Ws-Mysql-Error-Message\n                    move WS-MYSQL-Error-Number  to SQL-Err\n                    move WS-MYSQL-Error-Message to SQL-Msg\n              end-if\n              move spaces to WS-File-Key\n              move WS-MYSQL-COUNT-ROWS to WS-Temp-Ed\n              string \"Delete for \"\n                     WS-Pay-Record (K:L)\n                     \" only found (rg01) \"\n                     WS-Temp-ED (7:4)\n                     \" Rows\"\n                          into WS-File-Key\n              end-string\n              go to ba999-End\n     else\n              move spaces to SQL-Msg SQL-State\n              move zero   to SQL-Err\n     end-if",
        "line": 1591
      },
      {
        "from": "zero",
        "to": "FS-Reply WE-Error",
        "line": 1611
      },
      {
        "from": "LOW-VALUES",
        "to": "SQLCA-STATEMENT\n*>   STRING\n*>     \"DELETE \" DELIMITED SIZE\n*>     \"FROM \" DELIMITED SIZE\n*>     \"PLPAY-RECrg01 \" DELIMITED SIZE\n*>   INTO SQLCA-STATEMENT\n*>   END-STRING\n*>     CALL \"MySQL_query\" USING SQLCA-STATEMENT\n*>   END-CALL\n*>\n*> So if this does not work it will be changed",
        "line": 1628
      },
      {
        "from": "high-values",
        "to": "WS-Pay-Supl-Key",
        "line": 1640
      },
      {
        "from": "99",
        "to": "WS-Pay-Nos",
        "line": 1641
      },
      {
        "from": "spaces",
        "to": "WS-Where\n     move     1   to J\n     string   \"`\"                   delimited by size\n              KeyName (KOR-x1)      delimited by space\n              \"`\"                   delimited by size\n              '<\"'                  delimited by size\n              WS-Pay-Record (K:L)    delimited by size\n              '\"'                   delimited by size\n                      into WS-Where\n                        with pointer J\n     end-string\n     move     spaces to WS-File-Key\n     string   \"Deleting back from \" delimited by size\n               WS-Pay-Key             delimited by size\n                      into WS-File-Key\n     end-string                                   *> for logging\n     move     WS-Where (1:J)   to WS-Log-Where",
        "line": 1647
      },
      {
        "from": "55",
        "to": "ws-No-Paragraph",
        "line": 1667
      },
      {
        "from": "WS-MYSQL-SqlState",
        "to": "SQL-State\n              if    WS-MYSQL-Error-Number  not = \"0  \"\n                    call \"MySQL_error\" using Ws-Mysql-Error-Message\n                    move WS-MYSQL-Error-Number  to SQL-Err\n                    move WS-MYSQL-Error-Message to SQL-Msg\n                    move 99 to fs-reply\n                    move 995 to WE-Error\n              end-if\n              go to ba999-End\n     else      *> of course there could be no data in table\n              move spaces to SQL-Msg\n              move zero   to SQL-Err\n     end-if",
        "line": 1684
      },
      {
        "from": "zero",
        "to": "FS-Reply WE-Error",
        "line": 1697
      },
      {
        "from": "WS-Pay-Key",
        "to": "HV1-PAY-KEY",
        "line": 1714
      },
      {
        "from": "M",
        "to": "HV1-LEVEL-J",
        "line": 1715
      },
      {
        "from": "HV1-LEVEL-J",
        "to": "M",
        "line": 1738
      },
      {
        "from": "880",
        "to": "WE-Error\n              move 99  to FS-Reply\n              move spaces to SQL-Msg\n              move M to ws-temp-ed\n              string \"2nd key out of Range = \"\n                     WS-Temp-ED\n                        into SQL-Msg\n              end-string              *> if neg",
        "line": 1740
      },
      {
        "from": "HV1-PAY-FOLIO",
        "to": "WS-Pay-FOLIO   (M)",
        "line": 1752
      },
      {
        "from": "HV1-PAY-PERIOD",
        "to": "WS-Pay-PERIOD  (M)",
        "line": 1753
      },
      {
        "from": "HV1-PAY-VALUE",
        "to": "WS-Pay-VALUE   (M)",
        "line": 1754
      },
      {
        "from": "HV1-PAY-DEDUCT",
        "to": "WS-Pay-DEDUCT  (M)",
        "line": 1755
      },
      {
        "from": "HV1-PAY-INVOICE",
        "to": "WS-Pay-INVOICE (M)",
        "line": 1756
      },
      {
        "from": "1",
        "to": "WS-MYSQL-I\n           STRING 'INSERT INTO '\n                    '`PLPAY-RECrg01` SET '\n              INTO WS-MYSQL-COMMAND\n              WITH POINTER WS-MYSQL-I end-string\n*>\n           STRING '`PAY-FOLIO`=\"' INTO WS-MYSQL-COMMAND\n                   WITH POINTER WS-MYSQL-I end-string\n           MOVE HV1-PAY-FOLIO\n             TO WS-MYSQL-EDIT\n           STRING FUNCTION TRIM (WS-MYSQL-EDIT(11:10))\n             INTO WS-MYSQL-COMMAND\n             WITH POINTER WS-MYSQL-I end-string\n           STRING '\"' INTO WS-MYSQL-COMMAND\n           WITH POINTER WS-MYSQL-I end-string\n           STRING ', 'INTO WS-MYSQL-COMMAND\n           WITH POINTER WS-MYSQL-I end-string\n*>\n           STRING '`PAY-PERIOD`=\"' INTO WS-MYSQL-COMMAND\n                   WITH POINTER WS-MYSQL-I end-string\n           MOVE HV1-PAY-PERIOD\n             TO WS-MYSQL-EDIT\n           STRING FUNCTION TRIM (WS-MYSQL-EDIT(18:03))\n             INTO WS-MYSQL-COMMAND\n             WITH POINTER WS-MYSQL-I end-string\n           STRING '\"' INTO WS-MYSQL-COMMAND\n           WITH POINTER WS-MYSQL-I end-string\n           STRING ', 'INTO WS-MYSQL-COMMAND\n           WITH POINTER WS-MYSQL-I end-string\n*>\n           STRING '`PAY-VALUE`=\"' INTO WS-MYSQL-COMMAND\n                   WITH POINTER WS-MYSQL-I end-string\n           MOVE HV1-PAY-VALUE\n             TO WS-MYSQL-EDIT\n           STRING FUNCTION TRIM (WS-MYSQL-EDIT(11:10))\n             INTO WS-MYSQL-COMMAND\n             WITH POINTER WS-MYSQL-I end-string\n           STRING \"",
        "line": 1773
      },
      {
        "from": "HV1-PAY-DEDUCT",
        "to": "WS-MYSQL-EDIT\n           STRING FUNCTION TRIM (WS-MYSQL-EDIT(11:10))\n             INTO WS-MYSQL-COMMAND\n             WITH POINTER WS-MYSQL-I end-string\n           STRING \"",
        "line": 1822
      },
      {
        "from": "HV1-LEVEL-J",
        "to": "WS-MYSQL-EDIT\n           STRING FUNCTION TRIM (WS-MYSQL-EDIT(18:03))\n             INTO WS-MYSQL-COMMAND\n             WITH POINTER WS-MYSQL-I end-string\n           STRING '\"' INTO WS-MYSQL-COMMAND\n           WITH POINTER WS-MYSQL-I end-string\n           STRING ', 'INTO WS-MYSQL-COMMAND\n           WITH POINTER WS-MYSQL-I end-string\n*>\n           STRING '`PAY-KEY`=\"' INTO WS-MYSQL-COMMAND\n                   WITH POINTER WS-MYSQL-I end-string\n           STRING FUNCTION TRIM (HV1-PAY-KEY,TRAILING)\n                  '\"'\n                   INTO WS-MYSQL-COMMAND\n                   WITH POINTER WS-MYSQL-I end-string\n           STRING \";\" INTO WS-MYSQL-COMMAND\n             WITH POINTER WS-MYSQL-I end-string\n           STRING X\"00\" INTO WS-MYSQL-COMMAND\n             WITH POINTER WS-MYSQL-I end-string\n       PERFORM MYSQL-1210-COMMAND THRU MYSQL-1219-EXIT\n*>  /MYSQL-END\\\n       ",
        "line": 1848
      },
      {
        "from": "WS-PAY-KEY",
        "to": "WS-File-Key",
        "line": 1878
      },
      {
        "from": "56",
        "to": "ws-No-Paragraph",
        "line": 1879
      },
      {
        "from": "spaces",
        "to": "WS-Where\n     move     1   to J\n     move     M   to WS-Level-J\n     string   \"`\"                   delimited by size\n              KeyName (KOR-x1)      delimited by space\n              \"`\"                   delimited by size\n              '=\"'                  delimited by size\n              WS-Pay-Record (K:L)       delimited by size\n              '\"'                   delimited by size\n              \" AND \"               delimited by size\n              \"`LEVEL-J`=\"          delimited by size\n              WS-Level-J            delimited by size\n                      into WS-Where\n                        with pointer J\n     end-string\n     move     WS-Where (1:J)   to WS-Log-Where",
        "line": 1884
      },
      {
        "from": "1",
        "to": "WS-MYSQL-I\n           STRING 'UPDATE '\n                    '`PLPAY-RECrg01` SET '\n              INTO WS-MYSQL-COMMAND\n              WITH POINTER WS-MYSQL-I end-string\n*>\n           STRING '`PAY-FOLIO`=\"' INTO WS-MYSQL-COMMAND\n                   WITH POINTER WS-MYSQL-I end-string\n           MOVE HV1-PAY-FOLIO\n             TO WS-MYSQL-EDIT\n           STRING FUNCTION TRIM (WS-MYSQL-EDIT(11:10))\n             INTO WS-MYSQL-COMMAND\n             WITH POINTER WS-MYSQL-I end-string\n           STRING '\"' INTO WS-MYSQL-COMMAND\n           WITH POINTER WS-MYSQL-I end-string\n           STRING ', 'INTO WS-MYSQL-COMMAND\n           WITH POINTER WS-MYSQL-I end-string\n*>\n           STRING '`PAY-PERIOD`=\"' INTO WS-MYSQL-COMMAND\n                   WITH POINTER WS-MYSQL-I end-string\n           MOVE HV1-PAY-PERIOD\n             TO WS-MYSQL-EDIT\n           STRING FUNCTION TRIM (WS-MYSQL-EDIT(18:03))\n             INTO WS-MYSQL-COMMAND\n             WITH POINTER WS-MYSQL-I end-string\n           STRING '\"' INTO WS-MYSQL-COMMAND\n           WITH POINTER WS-MYSQL-I end-string\n           STRING ', 'INTO WS-MYSQL-COMMAND\n           WITH POINTER WS-MYSQL-I end-string\n*>\n           STRING '`PAY-VALUE`=\"' INTO WS-MYSQL-COMMAND\n                   WITH POINTER WS-MYSQL-I end-string\n           MOVE HV1-PAY-VALUE\n             TO WS-MYSQL-EDIT\n           STRING FUNCTION TRIM (WS-MYSQL-EDIT(11:10))\n             INTO WS-MYSQL-COMMAND\n             WITH POINTER WS-MYSQL-I end-string\n           STRING \"",
        "line": 1907
      },
      {
        "from": "HV1-PAY-DEDUCT",
        "to": "WS-MYSQL-EDIT\n           STRING FUNCTION TRIM (WS-MYSQL-EDIT(11:10))\n             INTO WS-MYSQL-COMMAND\n             WITH POINTER WS-MYSQL-I end-string\n           STRING \"",
        "line": 1956
      },
      {
        "from": "HV1-LEVEL-J",
        "to": "WS-MYSQL-EDIT\n           STRING FUNCTION TRIM (WS-MYSQL-EDIT(18:03))\n             INTO WS-MYSQL-COMMAND\n             WITH POINTER WS-MYSQL-I end-string\n           STRING '\"' INTO WS-MYSQL-COMMAND\n           WITH POINTER WS-MYSQL-I end-string\n           STRING ', 'INTO WS-MYSQL-COMMAND\n           WITH POINTER WS-MYSQL-I end-string\n*>\n           STRING '`PAY-KEY`=\"' INTO WS-MYSQL-COMMAND\n                   WITH POINTER WS-MYSQL-I end-string\n           STRING FUNCTION TRIM (HV1-PAY-KEY,TRAILING)\n                  '\"'\n                   INTO WS-MYSQL-COMMAND\n                   WITH POINTER WS-MYSQL-I end-string\n           STRING \" WHERE \"\n              INTO WS-MYSQL-COMMAND\n              WITH POINTER WS-MYSQL-I end-string\n           STRING FUNCTION TRIM (WS-Where (1:J))\n              INTO WS-MYSQL-COMMAND\n              WITH POINTER WS-MYSQL-I end-string\n           STRING \";\" X\"00\" INTO WS-MYSQL-COMMAND\n             WITH POINTER WS-MYSQL-I end-string\n           PERFORM MYSQL-1210-COMMAND THRU MYSQL-1219-EXIT\n*>  /MYSQL-END\\\n       ",
        "line": 1982
      }
    ],
    "computes": []
  },
  "businessLogic": {
    "conditions": [
      {
        "type": "IF",
        "condition": "RDBMS (Relational Database Management Systems) is in use it will be\n*>                      called by the specific module to handle similar processing as a Cobol\n*>                      flat file and will pass the equivalent\n*>                      RDB (Relational Database) row as a Cobol file record (01 level) moving\n*>                      row by row to the correct Cobol flat file fields as required.\n*>\n*>                      RDB DAL (Data Access Layer) modules are individually modified to handle:\n*>                      MS SQL server, Mysql, DB2, Postgres and Oracle as available and tested.\n*>                      These are contained in separate directories for each RDB, e.g.\n*>                       'MSSQL' (MS SQL Server), 'Mysql', 'DB2', 'Postgres'. 'Oracle'.\n*>                       You need to compile from the correct directory for the specific\n*>                       RDB you will use and have installed along with all of the development\n*>                       libraries and include files etc using the correct pre-compiler tool\n*>                       to process the 'EXEC SQL' code converting to Cobol calls etc.\n*>                       see the RDB specific ACAS notes.\n*>\n*>                      For specific SQL servers supported, the pre-compiler system is included\n*>                       where ever possible but for some, copyright reasons may prevent\n*>                       inclusion. In some cases for one specific RDB more than one precompiler\n*>                       is used as an experiment to help find the ideal one to use.\n*>\n*>                      In addition:\n*>                        If the system has been set up to (see the System File set up via the\n*>                        main menu module for each sub system), it will also process BOTH flat\n*>                        file  AND the correct rdb tables,\n*>\n*>                        it will write/delete/update etc to both but read from 1=Flat and be\n*>                        overwritten by the rdb access if data is present.\n*>                       This will help in transferring the Cobol flat files to rdb tables.\n*>\n*>                      If you wish to convert a running ACAS system over from Flat files\n*>                      to RDBMS see below.\n*>\n*>                      Depending on the RDB you wish to use there is\n*>                      also, included LMs (Load Modules) to convert each ISAM\n*>                      (Indexed Sequential) file to the rdb database tables if you wish to\n*>                      convert the system in one hit, without using the Duplicate file/RDB\n*>                      processing procedures. These will also need to be compiled from the\n*>                      specific LM directory that contains the rdb DAL modules.\n*>                      These will be very RDB specific.\n*>\n*>**\n*>  File Handling:\n*>     Uses the Global Error / Access logging file within the acas0nn module.\n*>**\n*> Called by Modules:\n*>                      acas032 - Sales Payments Cobol Handler.\n*>\n*>**\n*> Error Messages Used.\n*>                      SM004 SQL Err no in 'mysql-procedures'\n*>                      SM901 Note error and hit return.\n*>**\n*> Version.             1.00 17/06/2016.\n*>\n*>**\n*> Changes.\n*> 04/08/16 vbc - .01 Removed file action logging to sep. module ditto acas011.\n*> 18/07/16 vbc - .02 Insert call for SQL error msg where missing and move\n*>                    spaces / zero to SQL-Msg| Err and other little fixes/cleanups.\n*>                    Remap all changes to the .scb source file.\n*> 20/07/16 vbc - .03 Close logger if testing-1 set on table close.\n*>                    branch to 999-end instead of 998-free when EOF on read next.\n*>                    Seems to auto release if end of cursor data reached\n*>                    and causes an abort ??\n*> 24/07/16 vbc -     Taken from the stockMT sources with same versioning.\n*> 30/07/16 vbc - .04 Change Open and Close to also show table name in operation.\n*> 31/07/16 vbc - .05 Moved mv spaces/zero in Write to before insert.\n*>                    Remove fhlogger file close in Process-Close.\n*>                    Forgot error 989 so commented.\n*> 10/01/17 vbc - .06 Taken from salesMT.\n*>                    Updated to support rg table needs for all Fetch, Update,\n*>                    Insert & Delete functions.\n*> 11/01/17 vbc -     Added 800 series WE-Error messages for RG processing\n*>                    for use with logging only.\n*> 01/03/18 vbc - .11 Renamed error messages to SM901, SM004 as needed.\n*> 16/04/24 vbc       Copyright notice update superseding all previous notices.\n*>**\n*>  Module USAGE\n*>**************\n*>\n*>    On Entry:         Set up Linkage areas -\n*>    ********              WS-Pay-Record = Contents of data record to be written/read\n*>                          File-Access = File-Function as needed.\n*>                                        Access-Type   as needed.\n*>                          File-Defs (File-Definitions) = Paths set up.\n*>\n*>    On Exit:          Linkage contains:\n*>    *******               Record = containing a read data record or table row for both tables.\n*>                          Fs-Reply = 0, 99 or other value where\n*>                                     0  = Operation completed successfully\n*>                                     10 = End of (Cobol) File returned to calling module only.\n*>                                     21 = Invalid key on START OR key not found\n*>                                     22 - Attempt to duplicate a key value.\n*>                                     23 = Key not found.     from read indexed\n*>                                     99 = Indicates an error see WE-Error, SQL-ERR/MSG for more info\n*>                          WE-Error   0    = Operation completed successfully\n*>\n*>                                     999  = Not used here - Yet.\n*>                                     998* = File-Key-No Out Of Range not 1, 2 or 3.\n*>                                     997* = Access-Type wrong (< 5 or > 8)\n*>                                     996* = File Delete key out of range (not = 1 or 2)\n*>                                     995* = During Delete SQLSTATE not '00000' investigate using MSG-Err/Msg\n*>                                            or row count not > 0\n*>                                     994* = During Rewrite,                     ^^ see above ^^\n*>                                     992* = Invalid Function requested in File-Function\n*>                                     990* = Unknown and unexpected error, again ^^ see above ^^\n*>                                     989* = Unexpected error on Read-Indexed, investigate as above.\n*>                                     910* = Table locked > 5 seconds\n*>                                     911* = Rdb Error during initializing,\n*>                                            possibly can not connect to database\n*>                                             Check connect data and\n*>                                             see SQL-Err & SQL-MSG\n*>                                     901  = File Def Record size not =< than ws record size\n*>                                            Module needs ws definition changing to correct size\n*>                                            FATAL, Stop using system, fix source code\n*>                                            and recompile before using system again.\n*>                                     8nn  = Processing on RG Table & rows.\n*>                                     890  = Unknown and unexpected error, again ^^ see above on RG processing\n*>                                     880  = Unexpected range error in Rg1 secondary key.\n*>                                            Report to programming team.\n*>                                     Other = any other rdbms errors see specific\n*>                                             (Rdbms) manual\n*>                          SQL-Err   = Error code from RDBMS is set if above 2 are non zero\n*>                          SQL-Msg   = Non space providing more info if SQL-Err non '00000'\n*>                                      * = FS-Reply = 99.\n*>                          SQL-State = In support of SQL-Err for dup keys etc.\n*>\n copy \"ACAS-SQLstate-error-list.cob\".\n*>\n*>       During testing a log file will be created containing datetime stamp, task and return codes\n*>       for FS-Reply, WE-Error & SQL-State with table used - in this case the Payments File.\n*>       WARNING - This file could get large so needs manually deleting after examination.\n*>\n*>       NOTE that the value in SQL-State is the standard ANSI RDBMS error code to help keep\n*>         DAL handler changes to a minimum when reusing code for other RDBs - hopefully\n*>\n*>        SHOULD THIS BE IN THE DAL ONLY ?  Only for RDB accessing.\n*>\n*>********************************************************************************************\n*>\n*> Copyright Notice.\n*> ****************\n*>\n*> This notice supersedes all prior copyright notices & was updated 2024-04-16.\n*>\n*> These files and programs are part of the Applewood Computers Accounting\n*> System and is Copyright (c) Vincent B Coen. 1976-2025 and later.\n*>\n*> This program is now free software; you can redistribute it and/or modify it\n*> under the terms listed here and of the GNU General Public License as\n*> published by the Free Software Foundation; version 3 and later as revised\n*> for PERSONAL USAGE ONLY and that includes for use within a business but\n*> EXCLUDES repackaging or for Resale, Rental or Hire in ANY way.\n*>\n*> Persons interested in repackaging, redevelopment for the purpose of resale or\n*> distribution in a rental or hire mode must get in touch with the copyright\n*> holder with your commercial plans and proposals.\n*>\n*> ACAS is distributed in the hope that it will be useful, but WITHOUT\n*> ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n*> FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n*> for more details. If it breaks, you own both pieces but I will endeavour\n*> to fix it, providing you tell me about the problem.\n*>\n*> You should have received a copy of the GNU General Public License along\n*> with ACAS; see the file COPYING.  If not, write to the Free Software\n*> Foundation, 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA.\n*>\n*>**********************************************************************************\n*>\n environment division.\n*> copy \"envdiv.cob\".\n*>\n input-output section.\n Data Division.\n Working-Storage Section.\n 77  prog-name           pic x(22)    value \"paymentsMT (3.02.11)\".\n*>\n*> JC WS requirements here\n*>\n 77  ws-Where           pic x(512).\n*>\n*>  Used within presql generated code\n*>\n 01  WS-Reply           pic x           value space.\n 01  WS-MYSQL-I         PIC S9(4) COMP.\n 01  WS-MYSQL-EDIT      PIC -Z(18)9.9(9).\n *>\n *> TESING data\n *>\n 01  ws-temp-ed          pic -9(10).\n*>\n*> The communication area for the MySQL database changed for free/mysql\n*>\n*>  jc preSQL MySQL stuff ends\n*>\n*> Metadata on primary and alternate keys...  from Prima DAL for PLPAY-REC\n*>\n 01  Table-Of-Keynames.\n     03  filler         pic x(30) value 'PAY-KEY                       '.\n     03  filler         pic x(8)  value '00010009'.  *> offset/length\n     03  filler         pic x(3)  value 'STR'.       *> data type\n 01  filler redefines table-of-keynames.\n     03  keyOfReference occurs 1\n                             indexed by KOR-x1.\n         05  keyname    pic x(30).\n         05  KOR-offset pic 9(4).\n         05  KOR-length pic 9(4).\n         05  KOR-Type   pic XXX.                    *> Not used currently\n*>\n*>  Start of RG (Repeat Groups)                        NOT USED - YET.\n*> Metadata on Repeating Groups...\n*>\n 01  RG-Table.\n     03  filler  pic x(30) value 'PLPAY-RECrg01'.   *> table name\n     03  filler  pic s9(9) comp-5 value 9.          *> Max row count\n     03  filler  pic s9(9) comp-5 value zero.       *> current row\n*>\n 01  filler redefines RG-Table.\n     03  RG-Entry          occurs 1\n                          indexed by RG-x1.\n         05 RG-recname    pic x(30).\n         05 RG-maxoccurs  pic s9(9) comp-5.\n         05 RG-noloaded   pic s9(9) comp-5.        *> Number loaded.\n*>\n 01  DAL-Data.\n         05  MOST-Relation   pic xxx.                  *> valid are >=, <=, <, >, =\n         05  Most-Cursor-Set pic 9    value zero.\n             88  Cursor-Not-Active    value zero.\n             88  Cursor-Active        value 1.\n*>\n*>  Variables common to all DALs\n*>  ****************************\n*>\n 01  subscripts usage comp-5.\n     12 J                    pic s9(4).\n     12 K                    pic s9(4).\n     12 L                    pic s9(4).\n     12 M                    pic s9(4).\n 01  WS-Level-J              pic 9.\n*>\n 01  work-fields.\n     03  ws-env-lines    pic 999              value zero.\n     03  ws-lines        binary-char unsigned value zero.\n     03  ws-22-lines     binary-char unsigned value zero.\n     03  ws-23-lines     binary-char unsigned value zero.\n     03  ws-98-lines     binary-char unsigned value zero.\n     03  ws-99-lines     binary-char unsigned value zero.\n*>\n 01  Error-Messages.\n     03  SM901          pic x(31) value \"SM901 Note error and hit return\".\n*>\n*> /MYSQL VAR\\\n*>       ACASDB\n*>       TABLE=PLPAY-REC,HV\n*>       TABLE=PLPAY-RECrg01,HV1\n COPY \"mysql-variables.cpy\".\n*>\n*>    Definitions for the PLPAY-REC Table\n*>\n       01  TP-PLPAY-REC                          USAGE POINTER.\n       01  TD-PLPAY-REC.\n           05  HV-PAY-KEY                        PIC X(9).\n           05  HV-PAY-CONT                       PIC X(1).\n           05  HV-PAY-DAT                        PIC  9(10) COMP.\n           05  HV-PAY-CHEQUE                     PIC  9(10) COMP.\n           05  HV-PAY-SORTCODE                   PIC  9(10) COMP.\n           05  HV-PAY-ACCOUNT                    PIC  9(10) COMP.\n           05  HV-PAY-GROSS                      PIC S9(08)V9(02) COMP.\n*>\n*>    Definitions for the PLPAY-RECrg01 Table\n*>\n       01  TP-PLPAY-RECRG01                      USAGE POINTER.\n       01  TD-PLPAY-RECRG01.\n           05  HV1-PAY-FOLIO                     PIC  9(10) COMP.\n           05  HV1-PAY-PERIOD                    PIC  9(03) COMP.\n           05  HV1-PAY-VALUE                     PIC S9(10)V9(04) COMP.\n           05  HV1-PAY-DEDUCT                    PIC S9(10)V9(04) COMP.\n           05  HV1-PAY-INVOICE                   PIC X(10).\n           05  HV1-LEVEL-J                       PIC  9(03) COMP.\n           05  HV1-PAY-KEY                       PIC X(9).\n*> /MYSQL-END\\\n*>\n Linkage Section.\n*>**************\n*>\n*>**********************************************************************\n copy \"wsfnctn.cob\".                         *> File-Access\n*>\n*>**********************************************************************\n*>\n copy \"Test-Data-Flags.cob\".  *> set sw-testing to zero to stop logging.\n*>\n copy \"wspay.cob\".\n*>\n screen section.\n*>=============\n*>\n 01  Display-Message-1       foreground-color 2.\n     03          value \"WS-Where=\"               line 23 col  1.\n     03  from WS-Where (1:J)           pic x(69)         col 10.\n*>\n 01  Display-Message-2       foreground-color 2.\n     03      value \"SM004 SQL Err No.=\"           line 4 col  1.\n     03  using Ws-Mysql-Error-Number   pic x(4)          col 19.\n     03      value \" Para=\"                              col 23.\n     03  using WS-No-Paragraph         pic 9(3)          col 29.\n     03      value \" SQL Cmd=\"                           col 32.\n     03  using Ws-Mysql-Command        pic x(199)        col 41.\n     03      value \"SQL Err Msg=\"                 line 7 col  1.\n     03  using Ws-Mysql-Error-Message  pic x(67)         col 13.\n*>\n*>\n PROCEDURE DIVISION   using File-Access\n                            ACAS-DAL-Common-data\n                            WS-Pay-Record.        *>  Ws record\n*>**********************************************\n ba-ACAS-DAL-Process  section.\n     accept   ws-env-lines from lines.\n     if       ws-env-lines < 24\n              move  24 to ws-env-lines ws-lines\n     else\n              move  ws-env-lines to ws-lines\n     end-if\n*> Force Esc, PgUp, PgDown, PrtSC to be detected\n     set      ENVIRONMENT \"COB_SCREEN_EXCEPTIONS\" to \"Y\".\n     set      ENVIRONMENT \"COB_SCREEN_ESC\" to \"Y\".\n*>\n     add      2 to ws-lines giving ws-99-lines.\n     add      1 to ws-lines giving ws-98-lines.\n*>\n ba010-Initialise.\n*>\n     move     zero   to SQL-State.\n\n*>                        We-Error\n*>                        Fs-Reply.\n*>\n     move     spaces to WS-MYSQL-Error-Message\n                        WS-MYSQL-Error-Number\n                        WS-Log-Where\n                        WS-File-Key\n                        SQL-Msg\n                        SQL-Err.\n*>\n*>   Now Test for valid key for start, read-indexed and delete\n*>      REMOVED as not used here\n*>\n*>  Work out what is being requested and convert to action!!\n*>\n*>    This version uses the JC pre-Sql processor.\n*>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n*>\n     evaluate File-Function\n        when  1\n              go to ba020-Process-Open\n        when  2\n              go to ba030-Process-Close\n        when  3\n              go to ba040-Process-Read-Next\n        when  4\n              go to ba050-Process-Read-Indexed\n        when  5\n              go to ba070-Process-Write\n*>\n*> option 6 is a special to cleardown all data\n*>\n        when  6                              *> DELETE-ALL  Special\n              go to ba085-Process-Delete-All\n        when  7\n              go to ba090-Process-Rewrite\n        when  8\n              go to ba080-Process-Delete\n        when  9\n              go to ba060-Process-Start\n        when  other                          *> 6 is spare / unused\n              go to ba100-Bad-Function\n     end-evaluate.\n*>\n ba020-Process-Open.             *> dry tested - no rg01 requirements.\n *>\n *>  Manual process MYSQL INIT\n *>",
        "line": 42
      },
      {
        "type": "IF",
        "condition": "fs-reply not = zero\n              go   to ba999-end.\n*>\n*> *> /MYSQL INIT\\\n*>       BASE=ACASDB\n*>       IMPLEMENTATION=dev-prog-001\n*>       PASSWORD=mysqlpass\n*> *> /MYSQL-END\\\n*>\n     move    \"OPEN PAYMENTS\" to WS-File-Key\n     set     Cursor-Not-Active to true\n     go      to ba999-end.\n*>\n ba030-Process-Close.             *> dry tested - no rg01 requirements.\n     if      Cursor-Active\n             perform ba998-Free.\n*>\n     move     2 to ws-No-Paragraph.\n     move    \"CLOSE PAYMENTS\" to WS-File-Key.\n*>  /MYSQL CLOSE\\\n*>\n*>    Close the Database\n*>\n           PERFORM MYSQL-1980-CLOSE THRU MYSQL-1999-EXIT\n*>  /MYSQL-END\\\n     go      to ba999-end.\n*>\n ba040-Process-Read-Next.             *> dry tested - Has rg01 requirements.\n*>\n*>   Here a SELECT first",
        "line": 453
      },
      {
        "type": "IF",
        "condition": "no cursor active using lowest\n*>    possible key of \"000000000\"\n*>           [ PAY-KEY ]\n*>\n     if       Cursor-Not-Active\n              set      KOR-x1 to 1                *> 1 = Primary\n              move     KOR-offset (KOR-x1) to K\n              move     KOR-length (KOR-x1) to L\n*>\n              move     spaces to WS-Where\n              move     1   to J\n              string   \"`\"                   delimited by size\n                       KeyName (KOR-x1)      delimited by space\n                       \"`\"                   delimited by size\n                       \" >= \"                 delimited by size\n                       '\"000000000\"'             delimited by size\n                       ' ORDER BY '          delimited by size\n                       \"`\"                   delimited by size\n                       keyname (KOR-x1)      delimited by space\n                       \"`\"                   delimited by size\n                         ' ASC'              delimited by size\n                                      into ws-Where\n                                      with pointer J\n              end-string\n*>\n              move     ws-Where (1:J)   to WS-Log-Where       *>  For test logging\n              move     3 to ws-No-Paragraph\n*>               /MYSQL SELECT\\\n*>\n*>    Select rows\n*>\n*>                    TABLE=PLPAY-REC\n           INITIALIZE WS-MYSQL-COMMAND\n           STRING \"SELECT * FROM \"\n             \"`PLPAY-REC`\"\n             \" WHERE \"\n             ws-Where (1:J)\n            \";\"  X\"00\" INTO WS-MYSQL-COMMAND\n           PERFORM MYSQL-1210-COMMAND THRU MYSQL-1219-EXIT\n           PERFORM MYSQL-1220-STORE-RESULT THRU MYSQL-1239-EXIT\n           MOVE WS-MYSQL-RESULT TO TP-PLPAY-REC\n*>               /MYSQL-END\\\n           move    \"000000000\" to WS-File-Key\n              if    Testing-2\n                    display Display-Message-1 with erase eos\n              end-if\n*>\n*>  It could be an empty table so test for it\n*>\n              if       WS-MYSQL-Count-Rows = zero\n                       call  \"MySQL_errno\" using WS-MYSQL-Error-Number\n                       call  \"MySQL_sqlstate\" using WS-MYSQL-SQLstate\n                       move  WS-MYSQL-SqlState   to SQL-State\n                       if    WS-MYSQL-Error-Number  not = \"0  \"    *> set non '0' if no rows ?\n                             move WS-MYSQL-Error-Number to SQL-Err\n                             call \"MySQL_error\" using WS-MYSQL-Error-Message\n                             move WS-MYSQL-Error-Message to SQL-Msg\n                       end-if       *> do not really need to do this meaning the above CALL\n                       move 10 to fs-reply\n                       move 10 to WE-Error        *> should be 0 'JIC' likewise the others\n                       move    \"No Data\" to WS-File-Key\n                       go to ba999-End       *> can clear the dup code after testing\n              end-if                         *> We have data\n              set      Cursor-Active to true\n              move     WS-MYSQL-Count-Rows to WS-Temp-Ed\n              string   \"> 0 got cnt=\" delimited by size\n                       WS-Temp-ED delimited by size\n                       \" recs for PAY-RECORD Table\"\n                        into WS-File-Key\n              end-string\n              perform ba999-End                         *> log it\n     end-if.\n*>\n ba041-Reread.\n*>\n*>  If here cursor is set (even from start), so get the next row\n*>\n     move     spaces to WS-Log-Where.\n     move     4 to ws-No-Paragraph.\n     move     zero to return-code.\n*>\n*>      /MYSQL FETCH\\\n*>\n*>    Fetch next record\n*>\n*>             TABLE=PLPAY-REC\n           MOVE TP-PLPAY-REC TO WS-MYSQL-RESULT\n           CALL \"MySQL_fetch_record\" USING WS-MYSQL-RESULT\n                    HV-PAY-KEY\n                    HV-PAY-CONT\n                    HV-PAY-DAT\n                    HV-PAY-CHEQUE\n                    HV-PAY-SORTCODE\n                    HV-PAY-ACCOUNT\n                    HV-PAY-GROSS\n\n*>      /MYSQL-END\\\n     end-call\n*>\n     if       return-code = -1     *> no more data so free cursor & return\n              move 10 to fs-Reply\n                         WE-Error      *> should be 0 likewise the others\n              move    \"EOF\" to WS-File-Key\n              set Cursor-Not-Active to true\n              go to ba999-End\n     end-if\n*>\n     if       WS-MYSQL-Count-Rows = zero   *> no data but should not happen here\n              call  \"MySQL_errno\" using WS-MYSQL-Error-Number\n              call  \"MySQL_sqlstate\" using WS-MYSQL-SQLstate\n              move  WS-MYSQL-SqlState   to SQL-State\n              if    WS-MYSQL-Error-Number  not = \"0  \"\n                    call \"MySQL_error\" using WS-MYSQL-Error-Message\n                    move WS-MYSQL-Error-Number  to SQL-Err   *> Not really needed but help for testing\n                    move WS-MYSQL-Error-Message to SQL-Msg   *>  ditto\n                    initialize WS-Pay-Record with filler\n                   move    \"EOF2\" to WS-File-Key\n              end-if\n              move 10 to fs-reply                  *> EOF equivilent !!\n              move 10 to WE-Error\n              set Cursor-Not-Active to true\n              go to ba999-End\n     end-if.\n*>\n     if       fs-reply = 10                 *> should not happen as tested prior\n              set Cursor-Not-Active to true\n              move    \"EOF3\" to WS-File-Key\n              go to ba999-End\n     end-if.\n*>\n     perform  bb100-UnloadHVs.       *> transfer/move HV vars to Record layout\n     perform  ba999-End.                                  *> log it\n*>\n*>  Now process Rg rows (1 to 9) - [bc050 used for both read-next and read-indexed]\n*>\n     perform  bc050-Process-Read-Indexed  thru bc059-Exit.\n*>\n     move     HV-PAY-KEY to WS-File-Key.\n     move     zero to fs-reply WE-Error.\n     go       to ba999-exit.\n*>\n ba050-Process-Read-Indexed.             *> dry tested - Has rg01 requirements.\n*>\n*>  Now do on correct key within WHERE\n*>  Sets up key and compare data\n*>\n     set      KOR-x1 to 1.      *> 1 = Primary\n     move     KOR-offset (KOR-x1) to K\n     move     KOR-length (KOR-x1) to L\n*>\n     move     spaces to WS-Where\n     move     1   to J\n     string   \"`\"                   delimited by size\n              KeyName (KOR-x1)      delimited by space\n              \"`\"                   delimited by size\n              '=\"'                  delimited by size\n              WS-Pay-Record (K:L)       delimited by size\n              '\"'                   delimited by size\n                      into WS-Where\n                        with pointer J\n     end-string\n     move     WS-Where (1:J)   to WS-Log-Where.    *>  For test logging\n     if    Testing-2\n           display Display-Message-1 with erase eos\n     end-if\n     move     5 to ws-No-Paragraph\n*>      /MYSQL SELECT\\\n*>\n*>    Select rows\n*>\n*>             TABLE=PLPAY-REC\n           INITIALIZE WS-MYSQL-COMMAND\n           STRING \"SELECT * FROM \"\n             \"`PLPAY-REC`\"\n             \" WHERE \"\n             WS-Where (1:J)\n            \";\"  X\"00\" INTO WS-MYSQL-COMMAND\n           PERFORM MYSQL-1210-COMMAND THRU MYSQL-1219-EXIT\n           PERFORM MYSQL-1220-STORE-RESULT THRU MYSQL-1239-EXIT\n           MOVE WS-MYSQL-RESULT TO TP-PLPAY-REC\n*>      /MYSQL-END\\\n*>\n     if     WS-MYSQL-Count-Rows = zero\n            move 23  to fs-Reply             *> could also be 21 or 14\n            move zero to WE-Error\n            go to ba998-Free\n     end-if\n     move     6 to ws-No-Paragraph\n*>      /MYSQL FETCH\\\n*>\n*>    Fetch next record\n*>\n*>             TABLE=PLPAY-REC\n           MOVE TP-PLPAY-REC TO WS-MYSQL-RESULT\n           CALL \"MySQL_fetch_record\" USING WS-MYSQL-RESULT\n                    HV-PAY-KEY\n                    HV-PAY-CONT\n                    HV-PAY-DAT\n                    HV-PAY-CHEQUE\n                    HV-PAY-SORTCODE\n                    HV-PAY-ACCOUNT\n                    HV-PAY-GROSS\n\n*>      /MYSQL-END\\\n     end-call\n*>\n     if       WS-MYSQL-Count-Rows not > zero\n              call     \"MySQL_errno\" using WS-MYSQL-Error-Number\n              call  \"MySQL_sqlstate\" using WS-MYSQL-SQLstate\n              move  WS-MYSQL-SqlState   to SQL-State\n              if    WS-MYSQL-Error-Number  not = \"0  \"\n                    move 990 to WE-Error\n                    call \"MySQL_error\" using WS-MYSQL-Error-Message\n                    move WS-MYSQL-Error-Number to SQL-Err\n                    move WS-MYSQL-Error-Message to SQL-Msg\n              else\n                    move 989  to WE-Error\n                    move zero to SQL-Err\n                    move spaces to SQL-Msg\n              end-if\n              move 23   to fs-reply\n              move spaces to WS-File-Key\n              go to ba998-Free\n     end-if                        *> row count zero should show up as a MYSQL error ?\n     perform bb100-UnloadHVs       *> transfer/move HV vars to ws-Record layout\n     perform ba999-End.\n*>\n*>  Now process Rg rows (1 to 9) - [bc050 used for both read-next and read-indexed]\n*>\n     perform  bc050-Process-Read-Indexed  thru bc059-Exit.\n*>\n     move     HV-PAY-KEY to WS-File-Key.\n     move     zero to FS-Reply WE-Error.\n     perform  ba998-Free.                       *> Free cursor\n     go       to ba999-Exit.\n*>\n ba060-Process-Start.             *> No rg01 requirements & not used in P/L.\n*>\n*>  Check for Param error 1st on start\n*>\n     if       access-type < 5 or > 8                   *> not using not < or not >\n              move 99 to FS-Reply\n              move 997 to WE-Error                     *> Invalid calling parameter settings     997\n              go to ba999-end\n     end-if\n*>\n*>  First clear any active cursors\n*>\n     if       Cursor-Active\n              perform ba998-Free.\n*>\n*>  Now do Start on correct key before read-next  within WHERE\n*>  Set up MOST-relation for condition test and key\n*>\n     set      KOR-x1 to 1.\n     move     KOR-offset (KOR-x1) to K\n     move     KOR-length (KOR-x1) to L\n*>\n     move     spaces to MOST-Relation.\n     move     1   to J.\n     evaluate Access-Type\n              when  5                           *> fn-equal-to\n                    move \"=  \" to MOST-Relation\n              when  6                           *> fn-less-than\n                    move \"<  \" to MOST-Relation\n              when  7                           *> fn-greater-than\n                    move \">  \" to MOST-Relation\n              when  8                           *> fn-not-less-than\n                    move \">= \" to MOST-Relation\n              when  9                           *>  fn-not-greater-than [ not currently used in ACAS ]\n                    move \"<= \" to MOST-Relation\n     end-evaluate\n*>\n     move     spaces to WS-Where\n     string   \"`\"                   delimited by size\n              KeyName (KOR-x1)      delimited by space\n              \"`\"                   delimited by size\n              MOST-relation         delimited by space\n              '\"'                   delimited by size\n              WS-Pay-Record (K:L)       delimited by size\n              '\"'                   delimited by size\n              ' ORDER BY '          delimited by size\n              \"`\"                   delimited by size\n              keyname (KOR-x1)      delimited by space\n              \"`\"                   delimited by size\n                ' ASC  '            delimited by size\n                             into WS-Where\n                             with pointer J\n     end-string\n     move     WS-Where (1:J)  to WS-Log-Where.    *>  For test logging\n     move     WS-Pay-Record (K:L) to WS-File-Key\n     if    Testing-2\n           display Display-Message-1 with erase eos\n     end-if\n*>\n     move     8 to ws-No-Paragraph\n*>      /MYSQL SELECT\\\n*>\n*>    Select rows\n*>\n*>             TABLE=PLPAY-REC\n           INITIALIZE WS-MYSQL-COMMAND\n           STRING \"SELECT * FROM \"\n             \"`PLPAY-REC`\"\n             \" WHERE \"\n             WS-Where (1:J)\n            \";\"  X\"00\" INTO WS-MYSQL-COMMAND\n           PERFORM MYSQL-1210-COMMAND THRU MYSQL-1219-EXIT\n           PERFORM MYSQL-1220-STORE-RESULT THRU MYSQL-1239-EXIT\n           MOVE WS-MYSQL-RESULT TO TP-PLPAY-REC\n*>      /MYSQL-END\\\n*>\n     if       WS-MYSQL-Count-Rows not zero\n              set Cursor-Active to true\n     end-if\n*>\n     if       WS-MYSQL-Count-Rows = zero\n              call  \"MySQL_errno\" using WS-MYSQL-Error-Number\n              call  \"MySQL_sqlstate\" using WS-MYSQL-SQLstate\n              move  WS-MYSQL-SqlState   to SQL-State\n              if    WS-MYSQL-Error-Number  not = \"0  \"\n                    call \"MySQL_error\" using WS-MYSQL-Error-Message\n                    move WS-MYSQL-Error-Number  to SQL-Err\n                    move WS-MYSQL-Error-Message to SQL-Msg\n              end-if\n              move 21 to fs-reply                  *> this may need changing for val in WE-Error!!\n              move zero to WE-Error\n     else\n              move  zero to FS-Reply WE-Error\n              move     WS-MYSQL-Count-Rows to WS-Temp-Ed\n              string   MOST-relation\n                       WS-Pay-Record (K:L)\n                       \" got \" delimited by size\n                       WS-Temp-ED delimited by size\n                       \" recs\"\n                        into WS-File-Key\n              end-string\n     end-if\n     go       to ba999-end.\n*>\n*>  Now a read next will process a Fetch from cursor\n*>\n ba070-Process-Write.             *> dry tested - Has rg01 requirements.\n     perform  bb000-HV-Load.                       *>  move WS-Pay-Record fields to HV fields\n     move     WS-PAY-KEY to WS-File-Key.\n     move     zero to FS-Reply WE-Error SQL-State\n     move     spaces to SQL-Msg\n     move     zero to SQL-Err\n     move     10 to ws-No-Paragraph.\n     perform  bb200-Insert.\n     if       WS-MYSQL-COUNT-ROWS not = 1\n              call \"MySQL_errno\" using WS-MYSQL-Error-Number\n              call  \"MySQL_sqlstate\" using WS-MYSQL-SQLstate\n              move  WS-MYSQL-SqlState   to SQL-State\n              move 99 to fs-reply                  *> this may need changing for val in WE-Error!!\n              if    WS-MYSQL-Error-Number  not = \"0  \"\n                    call \"MySQL_error\" using Ws-Mysql-Error-Message\n                    move WS-MYSQL-Error-Number  to SQL-Err\n                    move WS-MYSQL-Error-Message to SQL-Msg\n                    if    SQL-Err (1:4) = \"1062\"\n                                     or = \"1022\"   *> Dup key (rec already present)\n                        or Sql-State = \"23000\"  *> Dup key (rec already present)\n                          move 22 to fs-reply\n                    end-if\n              end-if\n     end-if\n     perform  ba999-End.\n*>\n*>  Now process Rg rows\n*>\n     perform  bc070-Process-Write thru bc070-Exit.\n     go       to ba999-Exit.\n*>\n ba080-Process-Delete.             *> dry tested - Has rg01 requirements.\n*>\n     set      KOR-x1 to 1.\n     move     KOR-offset (KOR-x1) to K\n     move     KOR-length (KOR-x1) to L\n*>\n     move     spaces to WS-Where\n     move     1   to J\n     string   \"`\"                   delimited by size\n              KeyName (KOR-x1)      delimited by space\n              \"`\"                   delimited by size\n              '=\"'                  delimited by size\n              WS-Pay-Record (K:L)       delimited by size\n              '\"'                   delimited by size\n                      into WS-Where\n                        with pointer J\n     end-string\n     move     WS-Pay-Record (K:L)  to WS-File-Key.\n     move     WS-Where (1:J)   to WS-Log-Where.    *>  For test logging\n     if    Testing-2\n           display Display-Message-1 with erase eos\n     end-if\n     move     13 to ws-No-Paragraph.\n*>      /MYSQL DELETE\\\n*>\n*>    Delete a row\n*>\n*>             TABLE=PLPAY-REC\n           INITIALIZE WS-MYSQL-COMMAND\n           STRING \"DELETE FROM \"\n             \"`PLPAY-REC`\"\n             \" WHERE \"\n             WS-Where (1:J)\n             X\"00\" INTO WS-MYSQL-COMMAND\n           PERFORM MYSQL-1210-COMMAND THRU MYSQL-1219-EXIT\n*>      /MYSQL-END\\\n     if       WS-MYSQL-COUNT-ROWS not = 1\n              call \"MySQL_errno\" using WS-MYSQL-Error-Number\n              call  \"MySQL_sqlstate\" using WS-MYSQL-SQLstate\n              move  WS-MYSQL-SqlState   to SQL-State\n              if    WS-MYSQL-Error-Number  not = \"0  \"\n                    call \"MySQL_error\" using Ws-Mysql-Error-Message\n                    move WS-MYSQL-Error-Number  to SQL-Err\n                    move WS-MYSQL-Error-Message to SQL-Msg\n              end-if\n              move 99 to fs-reply\n              move 995 to WE-Error\n              go to ba999-End\n     else\n              move spaces to SQL-Msg\n              move zero   to SQL-Err\n     end-if.\n     perform  ba999-End.\n*>\n*>  Now process Rg rows\n*>\n     perform  bc080-Process-Delete thru bc080-Exit.\n*>\n     move     zero to FS-Reply WE-Error.\n     go       to ba999-Exit.\n*>\n ba085-Process-Delete-ALL.    *> THIS IS NON STANDARD\n*>\n*> This is the equivalent of :\n*>           EXEC SQL\n*>              DELETE\n*>              FROM PLPAY-REC\n*>           END-EXEC.\n*>\n*>  That creates the follwoing code from dbpre\n*>\n*>   MOVE LOW-VALUES TO SQLCA-STATEMENT\n*>   STRING\n*>     \"DELETE \" DELIMITED BY SIZE\n*>     \"FROM \" DELIMITED BY SIZE\n*>     \"PLPAY-REC \" DELIMITED BY SIZE\n*>   INTO SQLCA-STATEMENT\n*>   END-STRING\n*>     CALL \"MySQL_query\" USING SQLCA-STATEMENT\n*>   END-CALL\n*>\n*> So if this does not work it will be changed.\n*>\n     move     high-values  to WS-Pay-Supl-Key.\n     move     99           to WS-Pay-Nos.\n*>\n     set      KOR-x1 to 1\n     move     KOR-offset (KOR-x1) to K\n     move     KOR-length (KOR-x1) to L\n*>\n     move     spaces to WS-Where\n     move     1   to J\n     string   \"`\"                   delimited by size\n              KeyName (KOR-x1)      delimited by space\n              \"`\"                   delimited by size\n              '<\"'                  delimited by size\n              WS-Pay-Record (K:L)    delimited by size\n              '\"'                   delimited by size\n                      into WS-Where\n                        with pointer J\n     end-string\n     move     spaces to WS-File-Key\n     string   \"Deleting back from \" delimited by size\n               WS-Pay-Key             delimited by size\n                      into WS-File-Key\n     end-string                                   *> for logging\n     move     WS-Where (1:J)   to WS-Log-Where.   *>  For test logging\n     if    Testing-2\n           display Display-Message-1 with erase eos\n     end-if\n     move     15 to ws-No-Paragraph.\n*>      /MYSQL DELETE\\\n*>\n*>    Delete a row\n*>\n*>             TABLE=PLPAY-REC\n           INITIALIZE WS-MYSQL-COMMAND\n           STRING \"DELETE FROM \"\n             \"`PLPAY-REC`\"\n             \" WHERE \"\n             WS-Where (1:J)\n             X\"00\" INTO WS-MYSQL-COMMAND\n           PERFORM MYSQL-1210-COMMAND THRU MYSQL-1219-EXIT\n*>      /MYSQL-END\\\n     if       WS-MYSQL-COUNT-ROWS not > zero    *> Changed for delete-ALL\n              call  \"MySQL_errno\" using WS-MYSQL-Error-Number\n              call  \"MySQL_sqlstate\" using WS-MYSQL-SQLstate\n              move  WS-MYSQL-SqlState   to SQL-State\n              if    WS-MYSQL-Error-Number  not = \"0  \"\n                    call \"MySQL_error\" using Ws-Mysql-Error-Message\n                    move WS-MYSQL-Error-Number  to SQL-Err\n                    move WS-MYSQL-Error-Message to SQL-Msg\n              end-if\n              move 99 to fs-reply\n              move 995 to WE-Error\n              go to ba999-End\n     else      *> of course there could be no data in table\n              move spaces to SQL-Msg\n              move zero   to SQL-Err\n     end-if.\n     move     zero to FS-Reply WE-Error.\n     perform  ba999-End.\n*>\n*> Process RG data\n*>\n     perform  bc085-Process-Delete-ALL thru bc085-Exit.\n     go       to ba999-Exit.\n*>\n ba090-Process-Rewrite.             *> dry tested - Has rg01 requirements.\n*>\n     perform  bb000-HV-Load.       *> Load up the HV fields from table record in WS\n     move     WS-PAY-KEY to WS-File-Key.\n     move     17 to ws-No-Paragraph.\n     set      KOR-x1 to 1            *> 1 = Primary\n     move     KOR-offset (KOR-x1) to K\n     move     KOR-length (KOR-x1) to L\n*>\n     move     spaces to WS-Where\n     move     1   to J\n     string   \"`\"                   delimited by size\n              KeyName (KOR-x1)      delimited by space\n              \"`\"                   delimited by size\n              '=\"'                  delimited by size\n              WS-Pay-Record (K:L)       delimited by size\n              '\"'                   delimited by size\n                      into WS-Where\n                        with pointer J\n     end-string\n     move     WS-Where (1:J)   to WS-Log-Where.    *>  For test logging\n     perform  bb300-Update.\n*>\n     if       Testing-2\n              display Display-Message-1 with erase eos\n     end-if\n*>\n     if       WS-MYSQL-COUNT-ROWS not = 1\n              call  \"MySQL_errno\" using WS-MYSQL-Error-Number\n              call  \"MySQL_sqlstate\" using WS-MYSQL-SQLstate\n              move  WS-MYSQL-SqlState   to SQL-State\n              if    WS-MYSQL-Error-Number  not = \"0  \"\n                    call \"MySQL_error\" using Ws-Mysql-Error-Message\n                    move WS-MYSQL-Error-Number  to SQL-Err\n                    move WS-MYSQL-Error-Message to SQL-Msg\n              end-if\n              move 99 to fs-reply                  *> this may need changing for val in WE-Error!!\n              move 994 to WE-Error\n              go to ba999-End\n     end-if\n     move     zero   to FS-Reply WE-Error.\n     move     zero   to SQL-Err.\n     move     spaces to SQL-Msg.\n     perform  ba999-End.\n*>\n*>  Now process Rg rows\n*>\n     perform  bc070-Process-Write thru bc070-Exit.    *> does write & rewrite\n     go       to ba999-Exit.\n*>\n ba100-Bad-Function.\n*>\n*> Houston; We have a problem\n*>\n     move     990 to WE-Error.\n     move     99 to Fs-Reply.\n     go       to ba999-end.\n*>\n*> /MYSQL PRO\\\n COPY \"mysql-procedures.cpy\".\n*> /MYSQL-END\\\n*>\n ba998-Free.\n     move     20 to ws-No-Paragraph.\n*>      /MYSQL FREE\\\n*>\n*>    Free result array\n*>\n*>             TABLE=PLPAY-REC\n           MOVE TP-PLPAY-REC TO WS-MYSQL-RESULT\n           CALL \"MySQL_free_result\" USING WS-MYSQL-RESULT end-call\n*>      /MYSQL-END\\\n     set      Cursor-Not-Active to true.\n*>\n ba999-end.\n*>  Any Clean ups before quiting    move data record ?????  do so at the start as well ??????\n*>\n     if       Testing-1\n              perform Ca-Process-Logs\n     end-if.\n*>\n ba999-exit.\n     exit program.\n*>\n bb000-HV-Load      Section.\n*>*************************\n*>\n*>  Load the Host variables with data from the passed record\n*>\n*> This Method loads the Host Variables for the Base table with\n*> the data passed in the data-buffer.\n*>\n     initialize TD-PLPAY-REC.\n     move     WS-Pay-Key          to HV-PAY-KEY.\n     move     WS-Pay-Cont         to HV-PAY-CONT.\n     move     WS-Pay-Date         to HV-PAY-DAT.\n     move     WS-Pay-Cheque       to HV-PAY-CHEQUE.\n     move     WS-Pay-SortCode     to HV-PAY-SORTCODE.\n     move     WS-Pay-Account      to HV-PAY-ACCOUNT.\n     move     WS-Pay-Gross        to HV-PAY-GROSS.\n*>\n bb000-Exit.\n     exit section.\n*>\n bb100-UnloadHVs    Section.\n*>*************************\n*>\n*>  Load the data buffer in the interface with data from the host variables.\n*>\n     initialize WS-Pay-Record.\n     move     HV-PAY-KEY          to WS-Pay-Key.\n     move     HV-PAY-CONT         to WS-Pay-Cont\n     move     HV-PAY-DAT          to WS-Pay-Date\n     move     HV-PAY-CHEQUE       to WS-Pay-Cheque\n     move     HV-PAY-SORTCODE     to WS-Pay-SortCode\n     move     HV-PAY-ACCOUNT      to WS-Pay-Account\n     move     HV-PAY-GROSS        to WS-Pay-Gross.\n*>\n bb100-Exit.\n     exit section.\n*>\n bb200-Insert Section.\n*>*******************\n*>\n*>  /MYSQL INSERT\\\n*>\n*>    Insert a row\n*>\n*>         TABLE=PLPAY-REC\n           INITIALIZE WS-MYSQL-COMMAND\n           MOVE 1 TO WS-MYSQL-I\n           STRING 'INSERT INTO '\n                    '`PLPAY-REC` SET '\n              INTO WS-MYSQL-COMMAND\n              WITH POINTER WS-MYSQL-I end-string\n*>\n           STRING '`PAY-KEY`=\"' INTO WS-MYSQL-COMMAND\n                   WITH POINTER WS-MYSQL-I end-string\n           STRING FUNCTION TRIM (HV-PAY-KEY,TRAILING)\n                  '\"'\n                   INTO WS-MYSQL-COMMAND\n                   WITH POINTER WS-MYSQL-I end-string\n           STRING ', 'INTO WS-MYSQL-COMMAND\n           WITH POINTER WS-MYSQL-I end-string\n*>\n           STRING '`PAY-CONT`=\"' INTO WS-MYSQL-COMMAND\n                   WITH POINTER WS-MYSQL-I end-string\n           STRING FUNCTION TRIM (HV-PAY-CONT,TRAILING)\n                  '\"'\n                   INTO WS-MYSQL-COMMAND\n                   WITH POINTER WS-MYSQL-I end-string\n           STRING ', 'INTO WS-MYSQL-COMMAND\n           WITH POINTER WS-MYSQL-I end-string\n*>\n           STRING '`PAY-DAT`=\"' INTO WS-MYSQL-COMMAND\n                   WITH POINTER WS-MYSQL-I end-string\n           MOVE HV-PAY-DAT\n             TO WS-MYSQL-EDIT\n           STRING FUNCTION TRIM (WS-MYSQL-EDIT(11:10))\n             INTO WS-MYSQL-COMMAND\n             WITH POINTER WS-MYSQL-I end-string\n           STRING '\"' INTO WS-MYSQL-COMMAND\n           WITH POINTER WS-MYSQL-I end-string\n           STRING ', 'INTO WS-MYSQL-COMMAND\n           WITH POINTER WS-MYSQL-I end-string\n*>\n           STRING '`PAY-CHEQUE`=\"' INTO WS-MYSQL-COMMAND\n                   WITH POINTER WS-MYSQL-I end-string\n           MOVE HV-PAY-CHEQUE\n             TO WS-MYSQL-EDIT\n           STRING FUNCTION TRIM (WS-MYSQL-EDIT(11:10))\n             INTO WS-MYSQL-COMMAND\n             WITH POINTER WS-MYSQL-I end-string\n           STRING '\"' INTO WS-MYSQL-COMMAND\n           WITH POINTER WS-MYSQL-I end-string\n           STRING ', 'INTO WS-MYSQL-COMMAND\n           WITH POINTER WS-MYSQL-I end-string\n*>\n           STRING '`PAY-SORTCODE`=\"' INTO WS-MYSQL-COMMAND\n                   WITH POINTER WS-MYSQL-I end-string\n           MOVE HV-PAY-SORTCODE\n             TO WS-MYSQL-EDIT\n           STRING FUNCTION TRIM (WS-MYSQL-EDIT(11:10))\n             INTO WS-MYSQL-COMMAND\n             WITH POINTER WS-MYSQL-I end-string\n           STRING '\"' INTO WS-MYSQL-COMMAND\n           WITH POINTER WS-MYSQL-I end-string\n           STRING ', 'INTO WS-MYSQL-COMMAND\n           WITH POINTER WS-MYSQL-I end-string\n*>\n           STRING '`PAY-ACCOUNT`=\"' INTO WS-MYSQL-COMMAND\n                   WITH POINTER WS-MYSQL-I end-string\n           MOVE HV-PAY-ACCOUNT\n             TO WS-MYSQL-EDIT\n           STRING FUNCTION TRIM (WS-MYSQL-EDIT(11:10))\n             INTO WS-MYSQL-COMMAND\n             WITH POINTER WS-MYSQL-I end-string\n           STRING '\"' INTO WS-MYSQL-COMMAND\n           WITH POINTER WS-MYSQL-I end-string\n           STRING ', 'INTO WS-MYSQL-COMMAND\n           WITH POINTER WS-MYSQL-I end-string\n*>\n           STRING '`PAY-GROSS`=\"' INTO WS-MYSQL-COMMAND\n                   WITH POINTER WS-MYSQL-I end-string\n           MOVE HV-PAY-GROSS\n             TO WS-MYSQL-EDIT\n           STRING FUNCTION TRIM (WS-MYSQL-EDIT(13:08))\n             INTO WS-MYSQL-COMMAND\n             WITH POINTER WS-MYSQL-I end-string\n           STRING \".\" INTO WS-MYSQL-COMMAND\n             WITH POINTER WS-MYSQL-I end-string\n           STRING WS-MYSQL-EDIT(22:02)\n             INTO WS-MYSQL-COMMAND\n             WITH POINTER WS-MYSQL-I end-string\n           STRING '\"' INTO WS-MYSQL-COMMAND\n           WITH POINTER WS-MYSQL-I end-string\n           STRING \";\" INTO WS-MYSQL-COMMAND\n             WITH POINTER WS-MYSQL-I end-string\n           STRING X\"00\" INTO WS-MYSQL-COMMAND\n             WITH POINTER WS-MYSQL-I end-string\n       PERFORM MYSQL-1210-COMMAND THRU MYSQL-1219-EXIT\n*>  /MYSQL-END\\\n       .     *> period here\n*>\n bb200-Exit.\n     exit section.\n*>\n bb300-Update Section.\n*>*******************\n*>\n*>  /MYSQL UPDATE\\\n*>\n*>    Update a row\n*>\n*>      TABLE=PLPAY-REC\n           INITIALIZE WS-MYSQL-COMMAND\n           MOVE 1 TO WS-MYSQL-I\n           STRING 'UPDATE '\n                    '`PLPAY-REC` SET '\n              INTO WS-MYSQL-COMMAND\n              WITH POINTER WS-MYSQL-I end-string\n*>\n           STRING '`PAY-KEY`=\"' INTO WS-MYSQL-COMMAND\n                   WITH POINTER WS-MYSQL-I end-string\n           STRING FUNCTION TRIM (HV-PAY-KEY,TRAILING)\n                  '\"'\n                   INTO WS-MYSQL-COMMAND\n                   WITH POINTER WS-MYSQL-I end-string\n           STRING ', 'INTO WS-MYSQL-COMMAND\n           WITH POINTER WS-MYSQL-I end-string\n*>\n           STRING '`PAY-CONT`=\"' INTO WS-MYSQL-COMMAND\n                   WITH POINTER WS-MYSQL-I end-string\n           STRING FUNCTION TRIM (HV-PAY-CONT,TRAILING)\n                  '\"'\n                   INTO WS-MYSQL-COMMAND\n                   WITH POINTER WS-MYSQL-I end-string\n           STRING ', 'INTO WS-MYSQL-COMMAND\n           WITH POINTER WS-MYSQL-I end-string\n*>\n           STRING '`PAY-DAT`=\"' INTO WS-MYSQL-COMMAND\n                   WITH POINTER WS-MYSQL-I end-string\n           MOVE HV-PAY-DAT\n             TO WS-MYSQL-EDIT\n           STRING FUNCTION TRIM (WS-MYSQL-EDIT(11:10))\n             INTO WS-MYSQL-COMMAND\n             WITH POINTER WS-MYSQL-I end-string\n           STRING '\"' INTO WS-MYSQL-COMMAND\n           WITH POINTER WS-MYSQL-I end-string\n           STRING ', 'INTO WS-MYSQL-COMMAND\n           WITH POINTER WS-MYSQL-I end-string\n*>\n           STRING '`PAY-CHEQUE`=\"' INTO WS-MYSQL-COMMAND\n                   WITH POINTER WS-MYSQL-I end-string\n           MOVE HV-PAY-CHEQUE\n             TO WS-MYSQL-EDIT\n           STRING FUNCTION TRIM (WS-MYSQL-EDIT(11:10))\n             INTO WS-MYSQL-COMMAND\n             WITH POINTER WS-MYSQL-I end-string\n           STRING '\"' INTO WS-MYSQL-COMMAND\n           WITH POINTER WS-MYSQL-I end-string\n           STRING ', 'INTO WS-MYSQL-COMMAND\n           WITH POINTER WS-MYSQL-I end-string\n*>\n           STRING '`PAY-SORTCODE`=\"' INTO WS-MYSQL-COMMAND\n                   WITH POINTER WS-MYSQL-I end-string\n           MOVE HV-PAY-SORTCODE\n             TO WS-MYSQL-EDIT\n           STRING FUNCTION TRIM (WS-MYSQL-EDIT(11:10))\n             INTO WS-MYSQL-COMMAND\n             WITH POINTER WS-MYSQL-I end-string\n           STRING '\"' INTO WS-MYSQL-COMMAND\n           WITH POINTER WS-MYSQL-I end-string\n           STRING ', 'INTO WS-MYSQL-COMMAND\n           WITH POINTER WS-MYSQL-I end-string\n*>\n           STRING '`PAY-ACCOUNT`=\"' INTO WS-MYSQL-COMMAND\n                   WITH POINTER WS-MYSQL-I end-string\n           MOVE HV-PAY-ACCOUNT\n             TO WS-MYSQL-EDIT\n           STRING FUNCTION TRIM (WS-MYSQL-EDIT(11:10))\n             INTO WS-MYSQL-COMMAND\n             WITH POINTER WS-MYSQL-I end-string\n           STRING '\"' INTO WS-MYSQL-COMMAND\n           WITH POINTER WS-MYSQL-I end-string\n           STRING ', 'INTO WS-MYSQL-COMMAND\n           WITH POINTER WS-MYSQL-I end-string\n*>\n           STRING '`PAY-GROSS`=\"' INTO WS-MYSQL-COMMAND\n                   WITH POINTER WS-MYSQL-I end-string\n           MOVE HV-PAY-GROSS\n             TO WS-MYSQL-EDIT\n           STRING FUNCTION TRIM (WS-MYSQL-EDIT(13:08))\n             INTO WS-MYSQL-COMMAND\n             WITH POINTER WS-MYSQL-I end-string\n           STRING \".\" INTO WS-MYSQL-COMMAND\n             WITH POINTER WS-MYSQL-I end-string\n           STRING WS-MYSQL-EDIT(22:02)\n             INTO WS-MYSQL-COMMAND\n             WITH POINTER WS-MYSQL-I end-string\n           STRING '\"' INTO WS-MYSQL-COMMAND\n           WITH POINTER WS-MYSQL-I end-string\n           STRING \" WHERE \"\n              INTO WS-MYSQL-COMMAND\n              WITH POINTER WS-MYSQL-I end-string\n           STRING FUNCTION TRIM (WS-Where (1:J))\n              INTO WS-MYSQL-COMMAND\n              WITH POINTER WS-MYSQL-I end-string\n           STRING \";\" X\"00\" INTO WS-MYSQL-COMMAND\n             WITH POINTER WS-MYSQL-I end-string\n           PERFORM MYSQL-1210-COMMAND THRU MYSQL-1219-EXIT\n*>  /MYSQL-END\\\n       .     *> period here\n*>\n bb300-Exit.\n     exit section.\n*>\n bc000-RG-Process section.\n*>***********************\n*>\n*> This section contains mirror processes in ba000 section that act\n*> in support of paragraph based process to only deal with the\n*> RG ( Repeat Group ) segments of data.\n*>\n*>  Like ba000 processes they handle one action at a time and do not\n*>  do multiple commands or row at once.  This may come later but only\n*>   on a as needed basis.\n*>\n*>  So, bc050 processes the RG table for the held key obtained in\n*>  ba040 & ba050.  Same applies to Rewrite, Write & Delete.\n*>\n*>   This form will be used to process the invoice files tables for\n*>    both Sales & Purchase Ledgers.\n*>\n*>  Note that ws-No-Paragraph start at 51 for RG processing.\n*>  Each bc para must end with a bc0n0-Exit\n*>\n bc050-Process-Read-Indexed.    *> Dry chk complete.\n*>\n*>  This routine is called by for both Read-Next and Read-Indexed.\n*>\n*>    But first save the pointers [and we will restore at end].\n*>\n     move     WS-Mysql-Result     to WS-Mysql-Save-Result.     *> primary Tbl\n     move     WS-Mysql-Count-Rows to WS-Mysql-Save-Count-Rows.\n     move     zero to WS-Mysql-Count-Rows.\n*>\n*>  Use the Key for the primary table to get the RGs, up to 9.\n*>\n     set      KOR-x1 to 1.                    *> 1 = Primary\n     move     KOR-offset (KOR-x1) to K\n     move     KOR-length (KOR-x1) to L\n     move     spaces to WS-Where\n     move     1   to J\n     string   \"`\"                   delimited by size\n              KeyName (KOR-x1)      delimited by space\n              \"`\"                   delimited by size\n              '=\"'                  delimited by size\n              WS-Pay-Record (K:L)    delimited by size\n              '\"'                   delimited by size\n                      into WS-Where\n                        with pointer J\n     end-string.\n     move     WS-Where (1:J)   to WS-Log-Where.    *>  For test logging\n     if    Testing-2\n           display Display-Message-1 with erase eos\n     end-if\n     move     51 to ws-No-Paragraph.\n*>      /MYSQL SELECT\\\n*>\n*>    Select rows\n*>\n*>             TABLE=PLPAY-RECrg01\n           INITIALIZE WS-MYSQL-COMMAND\n           STRING \"SELECT * FROM \"\n             \"`PLPAY-RECrg01`\"\n             \" WHERE \"\n             WS-Where (1:J)\n            \";\"  X\"00\" INTO WS-MYSQL-COMMAND\n           PERFORM MYSQL-1210-COMMAND THRU MYSQL-1219-EXIT\n           PERFORM MYSQL-1220-STORE-RESULT THRU MYSQL-1239-EXIT\n           MOVE WS-MYSQL-RESULT TO TP-PLPAY-RECRG01\n*>      /MYSQL-END\\\n*>\n*> Test for no data but this should not happen - Bug in code somewhere\n*>  when inserting it. So we will do a log report for analysis.\n*>\n     if       WS-MYSQL-Count-Rows = zero    *> This should not happen as have to be > 0\n              call    \"MySQL_errno\" using WS-MYSQL-Error-Number\n              call    \"MySQL_sqlstate\" using WS-MYSQL-SQLstate\n              move    WS-MYSQL-SqlState   to SQL-State\n              if      WS-MYSQL-Error-Number  not = \"0  \"    *> set non '0' if no rows ?\n                      move WS-MYSQL-Error-Number to SQL-Err\n                      call \"MySQL_error\" using WS-MYSQL-Error-Message\n                      move WS-MYSQL-Error-Message to SQL-Msg\n              end-if\n              move    23  to fs-reply\n              move    890 to WE-Error\n              move    spaces to WS-File-Key\n              string  \"No RG1 Data for \"\n                      WS-Pay-Record (K:L)\n                        into WS-File-Key\n              end-string\n              go      to bc058-Restore-Pointers  *> do ba999-end at end\n     end-if\n*>\n     move     WS-MYSQL-Count-Rows to WS-Temp-Ed.\n     string   \"RG > 0 got cnt=\" delimited by size\n              WS-Temp-ED delimited by size\n                 \" recs, KEY=\"\n              WS-Pay-Record (K:L)\n                        into WS-File-Key\n     end-string.\n     perform ba999-End.                         *> log it & continue\n*>\n bc051-Fetch-RG1.\n*>\n*>  Now get the data from RG table/s.\n*>\n     move     52 to ws-No-Paragraph\n*>      /MYSQL FETCH\\\n*>\n*>    Fetch next record\n*>\n*>             TABLE=PLPAY-RECrg01\n           MOVE TP-PLPAY-RECRG01 TO WS-MYSQL-RESULT\n           CALL \"MySQL_fetch_record\" USING WS-MYSQL-RESULT\n                    HV1-PAY-FOLIO\n                    HV1-PAY-PERIOD\n                    HV1-PAY-VALUE\n                    HV1-PAY-DEDUCT\n                    HV1-PAY-INVOICE\n                    HV1-LEVEL-J\n                    HV1-PAY-KEY\n\n*>      /MYSQL-END\\\n     end-call\n*>\n     if       WS-MYSQL-Count-Rows  > zero\n              perform  bc100-UnloadHVs-rg1       *> transfer/move HV vars to ws-Record layout\n              go to bc051-Fetch-RG1\n     end-if\n*>\n*> No more rows for key\n*>\n     move     HV-PAY-KEY to WS-File-Key.\n     move     zero to FS-Reply WE-Error.\n     go       to bc058-Restore-Pointers.\n*>\n bc058-Restore-Pointers.\n*>\n*> Restore the Primary table pointer & row count.\n*>\n     move     WS-Mysql-Save-Result to WS-Mysql-Result.     *> primary Tbl\n     move     WS-Mysql-Save-Count-Rows to WS-Mysql-Count-Rows.\n     perform  ba999-End.\n*>\n bc059-Exit.  Exit.\n*>\n bc070-Process-Write.\n*>\n*> Used for both ba070-Process-Write and ba090-Process-Rewrite\n*>\n     perform  varying  M from 1 by 1 until M > 9\n              if       WS-Pay-Folio (M) = zeros\n                  and  WS-Pay-Value (M) = zeros\n                       exit perform cycle\n              end-if\n              perform  bc000-HV-Load-rg1               *>  move rg1 WS-Pay-Record (M) fields to HV fields\n              move     M to WS-Level-J\n              move     spaces to WS-File-Key\n              string   WS-PAY-KEY   delimited by size\n                       \" RG = \"       delimited by size\n                       WS-Level-J   delimited by size\n                             into WS-File-Key\n              end-string\n              move     zero to FS-Reply WE-Error\n              move     spaces to SQL-Msg SQL-State\n              move     zero to SQL-Err\n              move     53  to ws-No-Paragraph\n              if       fn-Write\n                       perform  bc200-Insert-rg1\n              else                                      *> fn-Re-write\n                       perform  bc300-Update-rg1\n              end-if\n              if       WS-MYSQL-COUNT-ROWS not = 1\n                       call  \"MySQL_sqlstate\" using WS-MYSQL-SQLstate\n                       move  WS-MYSQL-SqlState   to SQL-State\n                       if    Sql-State = \"23000\"\n                             perform bc300-Update-rg1\n                       end-if\n                       if      WS-MYSQL-COUNT-ROWS not = 1\n                               call  \"MySQL_errno\" using WS-MYSQL-Error-Number\n                               call  \"MySQL_sqlstate\" using WS-MYSQL-SQLstate\n                               move  WS-MYSQL-SqlState   to SQL-State\n                               move  99 to fs-reply                  *> this may need changing for val in WE-Error!!\n                               if    WS-MYSQL-Error-Number  not = \"0  \"\n                                  or Sql-State = \"23000\"      *> Dup key (rec already present)\n                                     call \"MySQL_error\" using Ws-Mysql-Error-Message\n                                     move WS-MYSQL-Error-Number  to SQL-Err\n                                     move WS-MYSQL-Error-Message to SQL-Msg\n                                     if   Sql-State = \"23000\"      *> Dup key (rec already present)\n                                       or SQL-Err (1:4) = \"1062\"\n                                       or               = \"1022\"\n                                          move 22 to fs-reply\n                                     else\n                                          move 99 to fs-reply                  *> this may need changing for val in WE-Error!!\n                                     end-if\n                               end-if\n                               move    spaces to WS-File-Key\n                               move    M to WS-Temp-Ed\n                               string  \"Cant Re|WriteRG1 Data on \"\n                                       WS-Pay-Record (K:L)\n                                       \" RG=\"\n                                       WS-Temp-Ed\n                                           into WS-File-Key\n                               end-string\n                               perform ba999-End\n                               exit perform cycle\n                      end-if\n              end-if\n              perform ba999-End\n     end-perform.\n*>\n bc070-Exit.  Exit.\n*>\n bc080-Process-Delete.\n*>\n     set      KOR-x1 to 1.\n     move     KOR-offset (KOR-x1) to K\n     move     KOR-length (KOR-x1) to L\n*>\n     move     spaces to WS-Where\n     move     1   to J\n     string   \"`\"                   delimited by size\n              KeyName (KOR-x1)      delimited by space\n              \"`\"                   delimited by size\n              '=\"'                  delimited by size\n              WS-Pay-Record (K:L)       delimited by size\n              '\"'                   delimited by size\n                      into WS-Where\n                        with pointer J\n     end-string\n     move     WS-Pay-Record (K:L)  to WS-File-Key.\n     move     WS-Where (1:J)   to WS-Log-Where.    *>  For test logging\n     if    Testing-2\n           display Display-Message-1 with erase eos\n     end-if\n     move     54 to ws-No-Paragraph.           *> Delete all rows (9<=) for key\n*>      /MYSQL DELETE\\\n*>\n*>    Delete a row\n*>\n*>             TABLE=PLPAY-RECrg01\n           INITIALIZE WS-MYSQL-COMMAND\n           STRING \"DELETE FROM \"\n             \"`PLPAY-RECrg01`\"\n             \" WHERE \"\n             WS-Where (1:J)\n             X\"00\" INTO WS-MYSQL-COMMAND\n           PERFORM MYSQL-1210-COMMAND THRU MYSQL-1219-EXIT\n*>      /MYSQL-END\\\n*>\n*>  We could have from 1 to 9 so this report is moot.\n*>\n     if       WS-MYSQL-COUNT-ROWS not > zero\n              call \"MySQL_errno\" using WS-MYSQL-Error-Number\n              call  \"MySQL_sqlstate\" using WS-MYSQL-SQLstate\n              move  WS-MYSQL-SqlState   to SQL-State\n              if    WS-MYSQL-Error-Number  not = \"0  \"\n                    call \"MySQL_error\" using Ws-Mysql-Error-Message\n                    move WS-MYSQL-Error-Number  to SQL-Err\n                    move WS-MYSQL-Error-Message to SQL-Msg\n              end-if\n              move spaces to WS-File-Key\n              move WS-MYSQL-COUNT-ROWS to WS-Temp-Ed\n              string \"Delete for \"\n                     WS-Pay-Record (K:L)\n                     \" only found (rg01) \"\n                     WS-Temp-ED (7:4)\n                     \" Rows\"\n                          into WS-File-Key\n              end-string\n              go to ba999-End\n     else\n              move spaces to SQL-Msg SQL-State\n              move zero   to SQL-Err\n     end-if.\n     move     zero to FS-Reply WE-Error.\n     perform  ba999-End.\n*>\n bc080-Exit.  Exit.\n*>\n bc085-Process-Delete-ALL.    *> THIS IS NON STANDARD\n*>\n*> Processes RG rows - Called by ba085-\n*>\n*> This is the equivalent of :\n*>           EXEC SQL\n*>              DELETE\n*>              FROM PLPAY-RECrg01\n*>           END-EXEC.\n*>\n*>  That creates the follwoing code from dbpre\n*>\n*>   MOVE LOW-VALUES TO SQLCA-STATEMENT\n*>   STRING\n*>     \"DELETE \" DELIMITED SIZE\n*>     \"FROM \" DELIMITED SIZE\n*>     \"PLPAY-RECrg01 \" DELIMITED SIZE\n*>   INTO SQLCA-STATEMENT\n*>   END-STRING\n*>     CALL \"MySQL_query\" USING SQLCA-STATEMENT\n*>   END-CALL\n*>\n*> So if this does not work it will be changed.\n*>\n     move     high-values  to WS-Pay-Supl-Key.\n     move     99           to WS-Pay-Nos.\n*>\n     set      KOR-x1 to 1\n     move     KOR-offset (KOR-x1) to K\n     move     KOR-length (KOR-x1) to L\n*>\n     move     spaces to WS-Where\n     move     1   to J\n     string   \"`\"                   delimited by size\n              KeyName (KOR-x1)      delimited by space\n              \"`\"                   delimited by size\n              '<\"'                  delimited by size\n              WS-Pay-Record (K:L)    delimited by size\n              '\"'                   delimited by size\n                      into WS-Where\n                        with pointer J\n     end-string\n     move     spaces to WS-File-Key\n     string   \"Deleting back from \" delimited by size\n               WS-Pay-Key             delimited by size\n                      into WS-File-Key\n     end-string                                   *> for logging\n     move     WS-Where (1:J)   to WS-Log-Where.   *>  For test logging\n     if    Testing-2\n           display Display-Message-1 with erase eos\n     end-if\n     move     55  to ws-No-Paragraph.\n*>      /MYSQL DELETE\\\n*>\n*>    Delete a row\n*>\n*>             TABLE=PLPAY-RECrg01\n           INITIALIZE WS-MYSQL-COMMAND\n           STRING \"DELETE FROM \"\n             \"`PLPAY-RECrg01`\"\n             \" WHERE \"\n             WS-Where (1:J)\n             X\"00\" INTO WS-MYSQL-COMMAND\n           PERFORM MYSQL-1210-COMMAND THRU MYSQL-1219-EXIT\n*>      /MYSQL-END\\\n     if       WS-MYSQL-COUNT-ROWS not > zero    *> Changed for delete-ALL\n              call  \"MySQL_errno\" using WS-MYSQL-Error-Number\n              call  \"MySQL_sqlstate\" using WS-MYSQL-SQLstate\n              move  WS-MYSQL-SqlState   to SQL-State\n              if    WS-MYSQL-Error-Number  not = \"0  \"\n                    call \"MySQL_error\" using Ws-Mysql-Error-Message\n                    move WS-MYSQL-Error-Number  to SQL-Err\n                    move WS-MYSQL-Error-Message to SQL-Msg\n                    move 99 to fs-reply\n                    move 995 to WE-Error\n              end-if\n              go to ba999-End\n     else      *> of course there could be no data in table\n              move spaces to SQL-Msg\n              move zero   to SQL-Err\n     end-if.\n     move     zero to FS-Reply WE-Error.\n     perform  ba999-End.\n*>\n bc085-Exit.  Exit.\n*>\n bc000-HV-Load-rg1 Section.\n*>**************************\n*>\n*>  Load the Host variables with data from the passed record\n*>\n*> Accommodate Repeating Groups...\n*> Now load the RG multi-rows into the 'OCCURS' fields of record.\n*>\n*> Loading RG table: PLPAY-RECrg01\n*>\n*> M MUST be set up by caller. where value is 1 thru 9.\n*>\n     move     WS-Pay-Key         to HV1-PAY-KEY.\n     move     M                  to HV1-LEVEL-J.\n     move     WS-Pay-Folio   (M) to HV1-PAY-FOLIO.\n     move     WS-Pay-Period  (M) to HV1-PAY-PERIOD.\n     move     WS-Pay-Value   (M) to HV1-PAY-VALUE.\n     move     WS-Pay-Deduct  (M) to HV1-PAY-DEDUCT.\n     move     WS-Pay-Invoice (M) to HV1-PAY-INVOICE.\n*>\n*> End of PLPAY-RECrg01 unload...\n*> End of Repeating Group processing...\n*>\n bc000-Exit.\n     exit section.\n*>\n bc100-UnloadHVs-rg1 Section.    *> Dry chk complete.\n*>**************************\n*>\n*>  Load the data buffer in the interface with data from the host variables.\n*>\n*> Accommodate Repeating Groups...\n*> Now unload the RG multi-rows into the 'OCCURS' fields of record.\n*>\n*> Unloading RG table: PLPAY-RECrg01\n*>\n     move     HV1-LEVEL-J      to  M.     *>  M = 1 thru 9.\n     if       M < 1 or > 9                *> JIC\n              move 880 to WE-Error\n              move 99  to FS-Reply\n              move spaces to SQL-Msg\n              move M to ws-temp-ed\n              string \"2nd key out of Range = \"\n                     WS-Temp-ED\n                        into SQL-Msg\n              end-string              *> if neg. we have a serious problem !!\n              perform ba999-End\n              go to bc100-Exit\n     end-if.\n*>\n     move     HV1-PAY-FOLIO    to  WS-Pay-FOLIO   (M).\n     move     HV1-PAY-PERIOD   to  WS-Pay-PERIOD  (M).\n     move     HV1-PAY-VALUE    to  WS-Pay-VALUE   (M).\n     move     HV1-PAY-DEDUCT   to  WS-Pay-DEDUCT  (M).\n     move     HV1-PAY-INVOICE  to  WS-Pay-INVOICE (M).\n*>\n*> End of PLPAY-RECrg01 unload...\n*> End of Repeating Group processing...\n*>\n bc100-Exit.\n     exit section.\n*>\n bc200-Insert-rg1 Section.\n*>***********************\n*>\n*>  /MYSQL INSERT\\\n*>\n*>    Insert a row\n*>\n*>         TABLE=PLPAY-RECrg01\n           INITIALIZE WS-MYSQL-COMMAND\n           MOVE 1 TO WS-MYSQL-I\n           STRING 'INSERT INTO '\n                    '`PLPAY-RECrg01` SET '\n              INTO WS-MYSQL-COMMAND\n              WITH POINTER WS-MYSQL-I end-string\n*>\n           STRING '`PAY-FOLIO`=\"' INTO WS-MYSQL-COMMAND\n                   WITH POINTER WS-MYSQL-I end-string\n           MOVE HV1-PAY-FOLIO\n             TO WS-MYSQL-EDIT\n           STRING FUNCTION TRIM (WS-MYSQL-EDIT(11:10))\n             INTO WS-MYSQL-COMMAND\n             WITH POINTER WS-MYSQL-I end-string\n           STRING '\"' INTO WS-MYSQL-COMMAND\n           WITH POINTER WS-MYSQL-I end-string\n           STRING ', 'INTO WS-MYSQL-COMMAND\n           WITH POINTER WS-MYSQL-I end-string\n*>\n           STRING '`PAY-PERIOD`=\"' INTO WS-MYSQL-COMMAND\n                   WITH POINTER WS-MYSQL-I end-string\n           MOVE HV1-PAY-PERIOD\n             TO WS-MYSQL-EDIT\n           STRING FUNCTION TRIM (WS-MYSQL-EDIT(18:03))\n             INTO WS-MYSQL-COMMAND\n             WITH POINTER WS-MYSQL-I end-string\n           STRING '\"' INTO WS-MYSQL-COMMAND\n           WITH POINTER WS-MYSQL-I end-string\n           STRING ', 'INTO WS-MYSQL-COMMAND\n           WITH POINTER WS-MYSQL-I end-string\n*>\n           STRING '`PAY-VALUE`=\"' INTO WS-MYSQL-COMMAND\n                   WITH POINTER WS-MYSQL-I end-string\n           MOVE HV1-PAY-VALUE\n             TO WS-MYSQL-EDIT\n           STRING FUNCTION TRIM (WS-MYSQL-EDIT(11:10))\n             INTO WS-MYSQL-COMMAND\n             WITH POINTER WS-MYSQL-I end-string\n           STRING \".\" INTO WS-MYSQL-COMMAND\n             WITH POINTER WS-MYSQL-I end-string\n           STRING WS-MYSQL-EDIT(22:04)\n             INTO WS-MYSQL-COMMAND\n             WITH POINTER WS-MYSQL-I end-string\n           STRING '\"' INTO WS-MYSQL-COMMAND\n           WITH POINTER WS-MYSQL-I end-string\n           STRING ', 'INTO WS-MYSQL-COMMAND\n           WITH POINTER WS-MYSQL-I end-string\n*>\n           STRING '`PAY-DEDUCT`=\"' INTO WS-MYSQL-COMMAND\n                   WITH POINTER WS-MYSQL-I end-string\n           MOVE HV1-PAY-DEDUCT\n             TO WS-MYSQL-EDIT\n           STRING FUNCTION TRIM (WS-MYSQL-EDIT(11:10))\n             INTO WS-MYSQL-COMMAND\n             WITH POINTER WS-MYSQL-I end-string\n           STRING \".\" INTO WS-MYSQL-COMMAND\n             WITH POINTER WS-MYSQL-I end-string\n           STRING WS-MYSQL-EDIT(22:04)\n             INTO WS-MYSQL-COMMAND\n             WITH POINTER WS-MYSQL-I end-string\n           STRING '\"' INTO WS-MYSQL-COMMAND\n           WITH POINTER WS-MYSQL-I end-string\n           STRING ', 'INTO WS-MYSQL-COMMAND\n           WITH POINTER WS-MYSQL-I end-string\n*>\n           STRING '`PAY-INVOICE`=\"' INTO WS-MYSQL-COMMAND\n                   WITH POINTER WS-MYSQL-I end-string\n           STRING FUNCTION TRIM (HV1-PAY-INVOICE,TRAILING)\n                  '\"'\n                   INTO WS-MYSQL-COMMAND\n                   WITH POINTER WS-MYSQL-I end-string\n           STRING ', 'INTO WS-MYSQL-COMMAND\n           WITH POINTER WS-MYSQL-I end-string\n*>\n           STRING '`LEVEL-J`=\"' INTO WS-MYSQL-COMMAND\n                   WITH POINTER WS-MYSQL-I end-string\n           MOVE HV1-LEVEL-J\n             TO WS-MYSQL-EDIT\n           STRING FUNCTION TRIM (WS-MYSQL-EDIT(18:03))\n             INTO WS-MYSQL-COMMAND\n             WITH POINTER WS-MYSQL-I end-string\n           STRING '\"' INTO WS-MYSQL-COMMAND\n           WITH POINTER WS-MYSQL-I end-string\n           STRING ', 'INTO WS-MYSQL-COMMAND\n           WITH POINTER WS-MYSQL-I end-string\n*>\n           STRING '`PAY-KEY`=\"' INTO WS-MYSQL-COMMAND\n                   WITH POINTER WS-MYSQL-I end-string\n           STRING FUNCTION TRIM (HV1-PAY-KEY,TRAILING)\n                  '\"'\n                   INTO WS-MYSQL-COMMAND\n                   WITH POINTER WS-MYSQL-I end-string\n           STRING \";\" INTO WS-MYSQL-COMMAND\n             WITH POINTER WS-MYSQL-I end-string\n           STRING X\"00\" INTO WS-MYSQL-COMMAND\n             WITH POINTER WS-MYSQL-I end-string\n       PERFORM MYSQL-1210-COMMAND THRU MYSQL-1219-EXIT\n*>  /MYSQL-END\\\n       .     *> period here\n*>\n bc200-Exit.\n     exit section.\n*>\n bc300-Update-rg1 Section.\n*>***********************\n*>\n     move     WS-PAY-KEY to WS-File-Key.\n     move     56   to ws-No-Paragraph.\n     set      KOR-x1 to 1            *> 1 = Primary\n     move     KOR-offset (KOR-x1) to K\n     move     KOR-length (KOR-x1) to L\n*>\n     move     spaces to WS-Where\n     move     1   to J\n     move     M   to WS-Level-J\n     string   \"`\"                   delimited by size\n              KeyName (KOR-x1)      delimited by space\n              \"`\"                   delimited by size\n              '=\"'                  delimited by size\n              WS-Pay-Record (K:L)       delimited by size\n              '\"'                   delimited by size\n              \" AND \"               delimited by size\n              \"`LEVEL-J`=\"          delimited by size\n              WS-Level-J            delimited by size\n                      into WS-Where\n                        with pointer J\n     end-string\n     move     WS-Where (1:J)   to WS-Log-Where.    *>  For test logging\n*>\n*>  /MYSQL UPDATE\\\n*>\n*>    Update a row\n*>\n*>      TABLE=PLPAY-RECrg01\n           INITIALIZE WS-MYSQL-COMMAND\n           MOVE 1 TO WS-MYSQL-I\n           STRING 'UPDATE '\n                    '`PLPAY-RECrg01` SET '\n              INTO WS-MYSQL-COMMAND\n              WITH POINTER WS-MYSQL-I end-string\n*>\n           STRING '`PAY-FOLIO`=\"' INTO WS-MYSQL-COMMAND\n                   WITH POINTER WS-MYSQL-I end-string\n           MOVE HV1-PAY-FOLIO\n             TO WS-MYSQL-EDIT\n           STRING FUNCTION TRIM (WS-MYSQL-EDIT(11:10))\n             INTO WS-MYSQL-COMMAND\n             WITH POINTER WS-MYSQL-I end-string\n           STRING '\"' INTO WS-MYSQL-COMMAND\n           WITH POINTER WS-MYSQL-I end-string\n           STRING ', 'INTO WS-MYSQL-COMMAND\n           WITH POINTER WS-MYSQL-I end-string\n*>\n           STRING '`PAY-PERIOD`=\"' INTO WS-MYSQL-COMMAND\n                   WITH POINTER WS-MYSQL-I end-string\n           MOVE HV1-PAY-PERIOD\n             TO WS-MYSQL-EDIT\n           STRING FUNCTION TRIM (WS-MYSQL-EDIT(18:03))\n             INTO WS-MYSQL-COMMAND\n             WITH POINTER WS-MYSQL-I end-string\n           STRING '\"' INTO WS-MYSQL-COMMAND\n           WITH POINTER WS-MYSQL-I end-string\n           STRING ', 'INTO WS-MYSQL-COMMAND\n           WITH POINTER WS-MYSQL-I end-string\n*>\n           STRING '`PAY-VALUE`=\"' INTO WS-MYSQL-COMMAND\n                   WITH POINTER WS-MYSQL-I end-string\n           MOVE HV1-PAY-VALUE\n             TO WS-MYSQL-EDIT\n           STRING FUNCTION TRIM (WS-MYSQL-EDIT(11:10))\n             INTO WS-MYSQL-COMMAND\n             WITH POINTER WS-MYSQL-I end-string\n           STRING \".\" INTO WS-MYSQL-COMMAND\n             WITH POINTER WS-MYSQL-I end-string\n           STRING WS-MYSQL-EDIT(22:04)\n             INTO WS-MYSQL-COMMAND\n             WITH POINTER WS-MYSQL-I end-string\n           STRING '\"' INTO WS-MYSQL-COMMAND\n           WITH POINTER WS-MYSQL-I end-string\n           STRING ', 'INTO WS-MYSQL-COMMAND\n           WITH POINTER WS-MYSQL-I end-string\n*>\n           STRING '`PAY-DEDUCT`=\"' INTO WS-MYSQL-COMMAND\n                   WITH POINTER WS-MYSQL-I end-string\n           MOVE HV1-PAY-DEDUCT\n             TO WS-MYSQL-EDIT\n           STRING FUNCTION TRIM (WS-MYSQL-EDIT(11:10))\n             INTO WS-MYSQL-COMMAND\n             WITH POINTER WS-MYSQL-I end-string\n           STRING \".\" INTO WS-MYSQL-COMMAND\n             WITH POINTER WS-MYSQL-I end-string\n           STRING WS-MYSQL-EDIT(22:04)\n             INTO WS-MYSQL-COMMAND\n             WITH POINTER WS-MYSQL-I end-string\n           STRING '\"' INTO WS-MYSQL-COMMAND\n           WITH POINTER WS-MYSQL-I end-string\n           STRING ', 'INTO WS-MYSQL-COMMAND\n           WITH POINTER WS-MYSQL-I end-string\n*>\n           STRING '`PAY-INVOICE`=\"' INTO WS-MYSQL-COMMAND\n                   WITH POINTER WS-MYSQL-I end-string\n           STRING FUNCTION TRIM (HV1-PAY-INVOICE,TRAILING)\n                  '\"'\n                   INTO WS-MYSQL-COMMAND\n                   WITH POINTER WS-MYSQL-I end-string\n           STRING ', 'INTO WS-MYSQL-COMMAND\n           WITH POINTER WS-MYSQL-I end-string\n*>\n           STRING '`LEVEL-J`=\"' INTO WS-MYSQL-COMMAND\n                   WITH POINTER WS-MYSQL-I end-string\n           MOVE HV1-LEVEL-J\n             TO WS-MYSQL-EDIT\n           STRING FUNCTION TRIM (WS-MYSQL-EDIT(18:03))\n             INTO WS-MYSQL-COMMAND\n             WITH POINTER WS-MYSQL-I end-string\n           STRING '\"' INTO WS-MYSQL-COMMAND\n           WITH POINTER WS-MYSQL-I end-string\n           STRING ', 'INTO WS-MYSQL-COMMAND\n           WITH POINTER WS-MYSQL-I end-string\n*>\n           STRING '`PAY-KEY`=\"' INTO WS-MYSQL-COMMAND\n                   WITH POINTER WS-MYSQL-I end-string\n           STRING FUNCTION TRIM (HV1-PAY-KEY,TRAILING)\n                  '\"'\n                   INTO WS-MYSQL-COMMAND\n                   WITH POINTER WS-MYSQL-I end-string\n           STRING \" WHERE \"\n              INTO WS-MYSQL-COMMAND\n              WITH POINTER WS-MYSQL-I end-string\n           STRING FUNCTION TRIM (WS-Where (1:J))\n              INTO WS-MYSQL-COMMAND\n              WITH POINTER WS-MYSQL-I end-string\n           STRING \";\" X\"00\" INTO WS-MYSQL-COMMAND\n             WITH POINTER WS-MYSQL-I end-string\n           PERFORM MYSQL-1210-COMMAND THRU MYSQL-1219-EXIT\n*>  /MYSQL-END\\\n       .     *> period here\n*>\n bc300-Exit.\n     exit section.\n*>\n Ca-Process-Logs.\n*>**************\n*>\n     call     \"fhlogger\" using File-Access\n                               ACAS-DAL-Common-data.\n*>\n ca-Exit.     exit.\n*>\nend program paymentsMT.",
        "line": 482
      }
    ],
    "evaluates": [
      {
        "content": "File-Function\n        when  1\n              go to ba020-Process-Open\n        when  2\n              g...",
        "line": 396,
        "whenCount": 10
      },
      {
        "content": "Access-Type\n              when  5                           *> fn-equal-to\n                    move ...",
        "line": 742,
        "whenCount": 5
      }
    ],
    "validations": []
  },
  "complexity": {
    "mccabe": 36,
    "cognitive": 33,
    "halstead": {
      "uniqueOperators": 1,
      "uniqueOperands": 110,
      "totalOperators": 98,
      "totalOperands": 196,
      "vocabulary": 111,
      "length": 294,
      "volume": 1997.5582647069311
    }
  },
  "quality": {
    "gotos": [],
    "deadCode": [],
    "missingErrorHandlers": []
  },
  "sql": {
    "hasSQL": false,
    "statements": []
  },
  "cics": {
    "hasCICS": false,
    "statements": []
  }
}
