{
  "filePath": "/Users/MartinGonella/Desktop/Demos/ACAS/common/acas000.cbl",
  "fileName": "acas000.cbl",
  "timestamp": "2025-09-15T16:25:35.434Z",
  "programId": "acas000",
  "parserUsed": "GnuCOBOL + Regex",
  "parseConfidence": 0,
  "validationStatus": "ERROR",
  "gnuCobolValidation": {
    "success": true,
    "errors": [],
    "warnings": []
  },
  "parseErrors": [
    "Cannot read properties of undefined (reading 'total')"
  ],
  "parseWarnings": [],
  "divisions": {
    "identification": true,
    "environment": true,
    "data": true,
    "procedure": true
  },
  "structure": {
    "sections": [
      {
        "name": "input-output",
        "line": 251
      },
      {
        "name": "file",
        "line": 257
      },
      {
        "name": "working-storage",
        "line": 261
      },
      {
        "name": "Linkage",
        "line": 281
      },
      {
        "name": "aa-Process-Flat-File",
        "line": 316
      },
      {
        "name": "ba-Process-RDBMS",
        "line": 504
      },
      {
        "name": "exit",
        "line": 598
      }
    ],
    "paragraphs": [
      {
        "name": "file-control",
        "line": 252
      },
      {
        "name": "ACAS-DAL-Common-data",
        "line": 313
      },
      {
        "name": "aa010-main",
        "line": 318
      },
      {
        "name": "end-evaluate",
        "line": 338
      },
      {
        "name": "end-evaluate",
        "line": 383
      },
      {
        "name": "aa020-Process-Open",
        "line": 388
      },
      {
        "name": "end-if",
        "line": 398
      },
      {
        "name": "end-if",
        "line": 428
      },
      {
        "name": "aa030-Process-Close",
        "line": 434
      },
      {
        "name": "aa050-Process-Read-Indexed",
        "line": 451
      },
      {
        "name": "aa100-Bad-Function",
        "line": 485
      },
      {
        "name": "aa999-main-exit",
        "line": 492
      },
      {
        "name": "end-if",
        "line": 495
      },
      {
        "name": "aa-main-exit",
        "line": 497
      },
      {
        "name": "aa-Exit",
        "line": 501
      },
      {
        "name": "ba010-Test-WS-Rec-Size",
        "line": 513
      },
      {
        "name": "ba012-Test-WS-Rec-Size-2",
        "line": 521
      },
      {
        "name": "end-if",
        "line": 561
      },
      {
        "name": "ba015-Test-Ends",
        "line": 563
      },
      {
        "name": "end-evaluate",
        "line": 593
      },
      {
        "name": "ba-rdbms-exit",
        "line": 597
      },
      {
        "name": "ACAS-DAL-Common-data",
        "line": 605
      }
    ],
    "entryPoints": []
  },
  "dependencies": {
    "calls": [
      {
        "target": "systemMT",
        "line": 575,
        "type": "DYNAMIC",
        "using": [
          "File-Access",
          "ACAS-DAL-Common-data",
          "WS-System-Record",
          "end-call",
          "when",
          "2",
          "call",
          "\"dfltMT\"",
          "using",
          "File-Access",
          "ACAS-DAL-Common-data",
          "WS-System-Record",
          "*>",
          "Default-Record",
          "end-call",
          "when",
          "3",
          "call",
          "\"finalMT\"",
          "using",
          "File-Access",
          "ACAS-DAL-Common-data",
          "WS-System-Record",
          "*>",
          "Final-Record",
          "end-call",
          "when",
          "4",
          "call",
          "\"sys4MT\"",
          "using",
          "File-Access",
          "ACAS-DAL-Common-data",
          "WS-System-Record",
          "*>",
          "System-Record-4",
          "end-call",
          "end-evaluate"
        ]
      },
      {
        "target": "fhlogger",
        "line": 605,
        "type": "DYNAMIC",
        "using": [
          "File-Access",
          "ACAS-DAL-Common-data"
        ]
      }
    ],
    "copies": [
      {
        "name": "*>",
        "line": 194,
        "replacing": null
      },
      {
        "name": "of",
        "line": 243,
        "replacing": null
      },
      {
        "name": "envdiv",
        "line": 250,
        "replacing": null
      },
      {
        "name": "selsys",
        "line": 255,
        "replacing": null
      },
      {
        "name": "fdsys",
        "line": 260,
        "replacing": null
      },
      {
        "name": "wssystem",
        "line": 287,
        "replacing": null
      },
      {
        "name": "wsdflt",
        "line": 298,
        "replacing": null
      },
      {
        "name": "wsfinal",
        "line": 299,
        "replacing": null
      },
      {
        "name": "wssys4",
        "line": 300,
        "replacing": null
      },
      {
        "name": "wsfnctn",
        "line": 302,
        "replacing": null
      },
      {
        "name": "wsnames",
        "line": 304,
        "replacing": null
      },
      {
        "name": "Test-Data-Flags",
        "line": 306,
        "replacing": null
      }
    ],
    "performs": [
      {
        "target": "ba-Process-RDBMS",
        "thru": null,
        "line": 157
      },
      {
        "target": "ba-Process-RDBMS",
        "thru": null,
        "line": 352
      },
      {
        "target": "ba012-Test-WS-Rec-Size-2",
        "thru": null,
        "line": 358
      },
      {
        "target": "aa999-main-exit",
        "thru": null,
        "line": 446
      },
      {
        "target": "Ca-Process-Logs",
        "thru": null,
        "line": 449
      },
      {
        "target": "Ca-Process-Logs",
        "thru": null,
        "line": 495
      },
      {
        "target": "Ca-Process-Logs",
        "thru": null,
        "line": 546
      }
    ]
  },
  "dataFlow": {
    "files": [],
    "moves": [
      {
        "from": "0",
        "to": "WS-Log-System",
        "line": 323
      },
      {
        "from": "10",
        "to": "WS-Log-File-No",
        "line": 324
      },
      {
        "from": "998",
        "to": "WE-Error       *> file seeks key type out of range        998\r\n                       move 99 to fs-reply\r\n                       go   to aa999-main-exit\r\n                end-if\r\n     end-evaluate",
        "line": 335
      },
      {
        "from": "spaces",
        "to": "SQL-Err SQL-Msg SQL-State",
        "line": 369
      },
      {
        "from": "201",
        "to": "WS-No-Paragraph",
        "line": 391
      },
      {
        "from": "zero",
        "to": "FS-Reply WE-Error",
        "line": 392
      },
      {
        "from": "941",
        "to": "WE-Error\r\n              move 41  to FS-Reply\r\n              go to aa999-Main-Exit\r\n     end-if",
        "line": 396
      },
      {
        "from": "35",
        "to": "fs-Reply   *> remove display for 908\r\n *>                  close System-File\r\n                   go to aa999-Main-Exit\r\n              end-if\r\n      else\r\n       if     fn-i-o\r\n              open i-o System-File\r\n              if       fs-reply not = zero                 *> this block was in st010 at ba000-Setup-Stock\r\n                       close       System-File\r\n                       open output System-File             *> Doesnt create in i-o or does it",
        "line": 404
      },
      {
        "from": "997",
        "to": "WE-Error\r\n              move 99 to fs-reply\r\n              go   to aa999-main-exit\r\n         end-if\r\n        end-if\r\n       end-if\r\n     end-if",
        "line": 423
      },
      {
        "from": "1",
        "to": "Cobol-File-Status",
        "line": 430
      },
      {
        "from": "999",
        "to": "we-error",
        "line": 432
      },
      {
        "from": "202",
        "to": "WS-No-Paragraph",
        "line": 436
      },
      {
        "from": "spaces",
        "to": "WS-File-Key",
        "line": 437
      },
      {
        "from": "zero",
        "to": "FS-Reply WE-Error",
        "line": 438
      },
      {
        "from": "zero",
        "to": "Cobol-File-Status",
        "line": 445
      },
      {
        "from": "zero",
        "to": "File-Function\r\n                       Access-Type",
        "line": 447
      },
      {
        "from": "204",
        "to": "WS-No-Paragraph",
        "line": 459
      },
      {
        "from": "File-Key-No",
        "to": "rrn",
        "line": 460
      },
      {
        "from": "spaces",
        "to": "WS-File-Key",
        "line": 461
      },
      {
        "from": "zero",
        "to": "FS-Reply WE-Error",
        "line": 463
      },
      {
        "from": "206",
        "to": "WS-No-Paragraph",
        "line": 468
      },
      {
        "from": "zeros",
        "to": "FS-Reply  WE-Error",
        "line": 469
      },
      {
        "from": "spaces",
        "to": "WS-File-Key",
        "line": 470
      },
      {
        "from": "File-Key-No",
        "to": "rrn",
        "line": 472
      },
      {
        "from": "208",
        "to": "WS-No-Paragraph",
        "line": 478
      },
      {
        "from": "zeros",
        "to": "FS-Reply  WE-Error",
        "line": 479
      },
      {
        "from": "File-Key-No",
        "to": "rrn",
        "line": 480
      },
      {
        "from": "spaces",
        "to": "WS-File-Key",
        "line": 481
      },
      {
        "from": "999",
        "to": "WE-Error",
        "line": 490
      },
      {
        "from": "99",
        "to": "fs-reply",
        "line": 491
      },
      {
        "from": "20",
        "to": "WS-Log-File-no",
        "line": 520
      },
      {
        "from": "901",
        "to": "WE-Error       *> 901 Programming error; temp rec length is wrong caller must stop\r\n                   move 99 to fs-reply        *> allow for last field ( FILLER) not being present in layout",
        "line": 532
      },
      {
        "from": "spaces",
        "to": "Display-Blk\r\n                       string AC902          delimited by size\r\n                              A              delimited by size\r\n                              \" < \"       delimited by size\r\n                              \"System-Rec = \" delimited by size\r\n                              B              delimited by size    into Display-Blk\r\n                       end-string\r\n                       display Display-Blk at 2301 with erase eol     *> BUT WILL REMIND ME TO SET IT UP correctly\r\n                       display AC901 at 2401 with erase eol\r\n                       if  Testing-1\r\n                           perform Ca-Process-Logs\r\n                       end-if\r\n                       accept Accept-Reply at 2433\r\n                       go to ba-rdbms-exit\r\n              end-if\r\n*>\r\n*>  Not a error comparing the length of records so - -\r\n*>  Load up the DB settings from the system record from COBOL file as its not passed on\r\n*>           hopefully once is enough  :)\r\n*>\r\n              move     RDBMS-DB-Name in System-Record  to DB-Schema\r\n              move     RDBMS-User    in System-Record  to DB-UName\r\n              move     RDBMS-Passwd  in System-Record  to DB-UPass\r\n              move     RDBMS-Port    in System-Record  to DB-Port\r\n              move     RDBMS-Host    in System-Record  to DB-Host\r\n              move     RDBMS-Socket  in System-Record  to DB-Socket\r\n     end-if",
        "line": 536
      }
    ],
    "computes": []
  },
  "businessLogic": {
    "conditions": [
      {
        "type": "IF",
        "condition": "Cobol Flat files are in use (via the system parameter file settings)\r\n*>                      which is passed via the wsfnctn (via copybook) / File-Access data block\r\n*>                      via the application module and each FH & DAL.\r\n*>                      It will read/write/delete/update/open/close as required and requested.\r\n*>                      NOTE the same fields are used for ALL of the FL and DAL modules so\r\n*>                      checking the error flags have to be done after each call before clearing.\r\n*>\r\n*>                      If RDBMS (Relational DataBase Management Systems) is in use it will call\r\n*>                      the specific module to handle similar processing passing the equivelent\r\n*>                      RDB (Relational DataBase) row as a Cobol file record (01 level) moving\r\n*>                      row by row to the correct Cobol flat file fields as required.\r\n*>                      These retrieve ALL columns and there fore the DAL modules cannot handle\r\n*>                      processing for selective columns, e.g., only updating one field/column\r\n*>                      as the whole record / row must be read or written to/from the RDB table.\r\n*>\r\n*>                      Module naming is based on the File ID variable name and for the System\r\n*>                      file which uses file-10  the FH is therefore acas000 1- the last two chars\r\n*>                      reflect the same number as last two chars the 'file-nn' name.\r\n*>\r\n*>                      Did it have to be this way ? no but it is easy to see in the original\r\n*>                      code the name in the select statement for the Cobol file.\r\n*>\r\n*>                      RDB DAL (Data Access Layer) modules are individually modified to handle:\r\n*>                      MS SQL server, Mysql, DB2, Postgres and Oracle as available and tested.\r\n*>                      These are contained in seperate directories for each RDB, eg\r\n*>                       'MSSQL' (MS SQL Server), 'Mysql', 'DB2', 'Postgres'. 'Oracle'.\r\n*>                       You need to compile from the correct directory for the specific\r\n*>                       RDB you will use and have installed along with all of the development\r\n*>                       libraries and include files etc using the correct pre-compiler tool\r\n*>                       to process the 'EXEC SQL' code converting to Cobol calls etc.\r\n*>\r\n*>                      For specific SQL servers supported the pre-compiler system is included\r\n*>                       where ever possible but for some, copyright reasons may prevent\r\n*>                       inclusion. In some cases for one specific RDB more than one precompiler\r\n*>                       is used as an experiment to help find the ideal one to use.\r\n*>\r\n*>                      In addition:\r\n*>                        If the system has been set up to (see the System File set up via the\r\n*>                        main menu module for each sub system), also process BOTH flat file\r\n*>                        AND the correct rdb table/s,\r\n*>                        it will write/delete/update etc to both but read from 1=Flat and be\r\n*>                        overwritten by the rdb access. This was set up more for testing the\r\n*>                        new code for both cobol files and the rdb accessing modules.\r\n*>                       This can help in transferring the Cobol flat files to rdb tables but\r\n*>                        see below regarding the Load programs/modules.\r\n*>\r\n*>                      If you wish to convert a running ACAS system over from Flat files\r\n*>                      to RDBMS see below. However it is strongly recommended to not to use\r\n*>                      the Duplicate processing of files/table as outlined above but:\r\n*>\r\n*>                      Included are LMs (Load Modules) to convert each ISAM\r\n*>                      (Indexed Sequential) file to the rdb database tables if you wish to\r\n*>                      convert the system in one hit, without using the Duplicate file/RDB\r\n*>                      processing procedures. These will also need to be compiled from the\r\n*>                      specific LM directory that contains the rdb DAL modules.\r\n*>\r\n*>                      A specific program or bash process will be created to use, that will run\r\n*>                      each LM process for all existing Cobol files. These are created during\r\n*>                      writing of the FH and DAL for each file/table if only to help in testing\r\n*>                      them.\r\n*>**\r\n*> Called Modules:\r\n*>                      systemMT,\r\n*>                      dfltMT,\r\n*>                      finalMT &\r\n*>                      sys4MT -\r\n*>                                DAL (RDB Data Access Layer) or a variation\r\n*>                      Selected via CDF etc [to be added sometime ].\r\n*>\r\n*>**\r\n*> Error Messages Used.\r\n*>\r\n*>                      AC901 Note error and hit return\r\n*>                      AC902\r\n*>**\r\n*> Version.             1.00 29/02/2012. Rewritten June 2016 after creating the DAL.\r\n*>\r\n*>                      This module is the first of the ACAS File Handlers and\r\n*>                      will act as the model for all the others which in turn\r\n*>                      is lightly modelled on the irsub modules for IRS.\r\n*>\r\n*>\r\n*> Changes.\r\n*> 29/02/12 vbc - Created for GnuCobol v2.0+. Code also to be tested with MF VC\r\n*>                ** UNDER TEST ** but there again every thing is!\r\n*> 17/05/16 vbc - Adding code for log file.\r\n*>                Notes about error messages.\r\n*> 24/06/16 vbc - Minor coding errors with a evaluate.\r\n*> 02/07/16 vbc - .01 Missing DB params in system rec not moved to DB-xx in wsfnctn.\r\n*> 04/08/16 vbc       Moved logging code into a new module to be called\r\n*>                    from here and the systemMT code.\r\n*> 04/08/16 vbc - .02 Test on read for read next at end bypass moves etc.\r\n*> 21/07/16 vbc - .03 Minor tidy up  of code & comments near the call to the DAL.\r\n*>                    Extra module comments and notes.\r\n*> 25/07/16 vbc -     Taken from acas011 with same versioning.\r\n*> 27/07/16 vbc - .04 Rem'd out some mv zero to fs-reply but don't think it is causing issues, may be\r\n*> 27/08/16 vbc -     Taken from acas010 with same versioning.\r\n*> 26/09/16 vbc - .05 Updated as a fair number of changes / differences to the modal !\r\n*> 24/10/16 vbc - .   ALL programs now using wsnames.cob in copybooks\r\n*> 09/12/16 vbc - .06 Re-added test for normal file-access configs in addition to '66'.\r\n*> 19/02/17 vbc - .07 For all calls to the DALs use system-record as the\r\n*>                    contents will be moved to the correct record by caller.\r\n*> 25/04/17 vbc - .08 Removed display for AC908 as not needed as produces err 35.\r\n*> 03/02/18 vbc - .09 Moved 'Open' msg to start for OPEN\r\n*>                    like wise msgs for the other operations for logging.\r\n*> 04/02/18 vbc - .10 Clear before string access msg for logging.\r\n*> 05/02/18 vbc - .11 Extra checks for file open & closewith new WE-Error msg (941).\r\n*> 28/02/18 vbc - .12 Added recs test for FH at ba012-Test-WS-Rec-Size-2\r\n*> 07/12/22 vbc - .13 Chgd Vars A & B to pic 999 toi keep GC v3.2 happy.\r\n*> 10/12/22 vbc - .14 chg to perform ba-Process-RDBMS + goto exit, 2 remove GC warning msg\r\n*>                    from latest v3.2 code WITH ba-Main-Exit chgd to exit section.\r\n*> 16/04/24 vbc       Copyright notice update superceding all previous notices.\r\n*>\r\n*>**\r\n*>  Module USAGE\r\n*>**************\r\n*>\r\n*>    On Entry:         Set up Linkage areas -\r\n*>    ********              1. File and table WS record : -\r\n*>    acas000                  System-Record = Contents of data record to be written/read\r\n*>                             from ws-System-Record, Default-Record, Final-Record & System-Record-4.\r\n*>                          2. File-Access = File-Function as needed.\r\n*>                                        Access-Type   as needed.\r\n*>                          3. File-Defs (File-Definitions) = Paths set up.\r\n*>\r\n*>    On Exit:          Linkage contains and apples to ALL FH and DAL modules:\r\n*>    *******               Record = containing a read data record or table row\r\n*>                          Fs-Reply = 0, 99 or other value where\r\n*>                                     0  = Operation completed successfully\r\n*>                                     10 = End of file\r\n*>                                     21 = Invalid key | key not found\r\n*>                                     99 = Indicates an error see WE-Error for more info\r\n*>                          WE-Error   0    = Operation completed successfully\r\n*>                                     999  = Undefined / unknown error\r\n*>                                     998* = File-Key-No Out Of Range not 1, 2 or 3 or 4.\r\n*>                                     997* = Access-Type wrong (< 5 or > 8)\r\n*>                                     996* = File Delete key out of range (not = 1 or 2)\r\n*>                                     995* = During Delete SQLSTATE not '00000' investigate using MSG-Err/Msg\r\n*>                                     994* = During Rewrite,                     ^^ see above ^^\r\n*>                                     990* = Unknown and unexpected error, again ^^ see above ^^\r\n*>                                     989* = Unexpected error on Read-Indexed, investigate as above.\r\n*>                                     941  = File already opened.  with fs-reply = 41. Should not happen!\r\n*>                                     911* = Rdb Error during initializing,\r\n*>                                            possibly can not connect to database\r\n*>                                             Check connect data and\r\n*>                                             see SQL-Err & SQL-MSG\r\n*>                                            Produced by Mysql-1100-Db-Error in copy\r\n*>                                            module mysql-procedure.\r\n*>                                     901  = File Def Record size not =< than ws record size\r\n*>                                            Module needs ws definition changing to correct size\r\n*>                                            FATAL, Stop using system, fix source code\r\n*>                                            and recompile before using system again.\r\n*>                                     Other = any other rdbms errors see specific\r\n*>                                             (Rdbms) manual\r\n*>                          SQL-Err  = Error code from RDBMS is set if above 2 are non zero\r\n*>                          SQL-Msg  = Non space providing more info if SQL-Err non '00000'\r\n*>                                     * = FS-Reply = 99.\r\n*>\r\n*>       During testing a log file will be created containing datetime stamp, task and return codes\r\n*>       for both FS-Reply and WE-Error and table used along with the RDB error number and message\r\n*>         In this case for the\r\n*>                System File.\r\n*>\r\n*>       WARNING - This file could get large so needs manually deleting after examination.\r\n*>\r\n*>  Programmer note : CONSIDER WRITING A reporting program for this with report selection criteria.\r\n*>\r\n*>******************************************************************************\r\n*>\r\n*>  From copyright.cob.\r\n*>\r\n*> Copyright Notice.\r\n*> ****************\r\n*>\r\n*> This notice supercedes all prior copyright notices & was updated 2024-04-16.\r\n*>\r\n*> These files and programs are part of the Applewood Computers Accounting\r\n*> System and is Copyright (c) Vincent B Coen. 1976-2025 and later.\r\n*>\r\n*> This program is now free software; you can redistribute it and/or modify it\r\n*> under the terms listed here and of the GNU General Public License as\r\n*> published by the Free Software Foundation; version 3 and later as revised\r\n*> for PERSONAL USAGE ONLY and that includes for use within a business but\r\n*> EXCLUDES repackaging or for Resale, Rental or Hire in ANY way.\r\n*>\r\n*> Persons interested in repackaging, redevelopment for the purpose of resale or\r\n*> distribution in a rental or hire mode must get in touch with the copyright\r\n*> holder with your commercial plans and proposals.\r\n*>\r\n*> ACAS is distributed in the hope that it will be useful, but WITHOUT\r\n*> ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\r\n*> FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\r\n*> for more details. If it breaks, you own both pieces but I will endeavour\r\n*> to fix it, providing you tell me about the problem.\r\n*>\r\n*> You should have received a copy of the GNU General Public License along\r\n*> with ACAS; see the file COPYING.  If not, write to the Free Software\r\n*> Foundation, 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA.\r\n*>\r\n*>**********************************************************************************\r\n*>\r\n environment division.\r\n copy \"envdiv.cob\".\r\n*>\r\n input-output section.\r\n file-control.\r\n*>\r\n copy \"selsys.cob\".\r\n*>\r\n data division.\r\n file section.\r\n*>***********\r\n copy \"fdsys.cob\".\r\n*>\r\n working-storage section.\r\n*>**********************\r\n*>\r\n 77  prog-name          pic x(17)    value \"acas000 (3.02.14)\".\r\n*>\r\n 77  ws-reply           pic x      value space.\r\n*>\r\n 77  A                  pic 9(4)              value zero.  *> A & B used in 1st test ONLY\r\n 77  B                  pic 9(4)              value zero.  *>  in ba-Process-RDBMS\r\n 77  Display-Blk        pic x(75)             value spaces.\r\n 77  Cobol-File-Status  pic 9                 value zero.\r\n     88  Cobol-File-Eof                       value 1.\r\n*>\r\n 01  Error-Messages.\r\n*> System Wide\r\n*> Module Specific\r\n     03  AC901          pic x(31) value \"AC901 Note error and hit return\".\r\n     03  AC902          pic x(32) value \"AC902 Program Error: Temp rec = \".\r\n*>                                        yyy < System-Rec = zzz\r\n*>\r\n Linkage Section.\r\n*>**************\r\n*>\r\n*> Fields renamed as wsssytem also in FD.\r\n*>\r\n copy \"wssystem.cob\" replacing System-Record by WS-System-Record\r\n                               File-System-Used        by WS-File-System-Used\r\n                               File-Duplicates-In-Use  by WS-File-Duplicates-In-Use\r\n                               FS-Cobol-Files-Used     by WS-FS-Cobol-Files-Used\r\n                               FS-RDBMS-Used           by WS-FS-RDBMS-Used\r\n                               FS-Duplicate-Processing by WS-FS-Duplicate-Processing\r\n                               RDBMS-Flat-Statuses     by WS-RDBMS-Flat-Statuses.\r\n*>\r\n*> Here are the other three records held as relative, in the system file\r\n*>   OOPS, not actually used here or by a call.\r\n*>\r\n*> copy \"wsdflt.cob\".\r\n*> copy \"wsfinal.cob\".\r\n*> copy \"wssys4.cob\".\r\n*>\r\n copy \"wsfnctn.cob\".\r\n*>\r\n copy \"wsnames.cob\".\r\n*>\r\n copy \"Test-Data-Flags.cob\".  *> set sw-testing to zero to stop logging.\r\n*>\r\n Procedure Division Using *>      System-Record\r\n\r\n                          WS-System-Record   *> with images for the other three record types as same size\r\n\r\n                          File-Access\r\n                          File-Defs\r\n                          ACAS-DAL-Common-data.\r\n*>********************************************\r\n*>\r\n aa-Process-Flat-File Section.\r\n*>***************************\r\n aa010-main.\r\n*>\r\n*>  For logging only.\r\n*>\r\n     move     0      to WS-Log-System.   *> 0 = Params, 1 = IRS, 2=GL, 3=SL, 4=PL, 5=Stock, 4 FH logging\r\n     move     10     to WS-Log-File-No.  *> RDB, File/Table\r\n*>\r\n*>   Now Test for valid key for read-indexed : -\r\n*>    1 = params rec, 2 = default rec,\r\n*>    3 = final rec & 4 = system totals rec.\r\n*>\r\n     evaluate File-Function\r\n              when  4   *> fn-read-indexed\r\n              when  5   *> fn-write\r\n              when  7   *> fn-re-write\r\n                if     File-Key-No < 1 or > 4\r\n                       move 998 to WE-Error       *> file seeks key type out of range        998\r\n                       move 99 to fs-reply\r\n                       go   to aa999-main-exit\r\n                end-if\r\n     end-evaluate.\r\n*>\r\n*> Check if data files or RDBMS processing or are we doing both !!\r\n*>\r\n*>   All programming must be directly requested, ONLY.\r\n*>\r\n*>  Unique for acas000 ONLY we check for FA-RDBMS status in wsfnctn as the ones in system-record\r\n*>   can be altered to direct acas000 to process the other processing mode (cobol / RDB)\r\n*>    as well as the system-record being temporarily over-written by the other record types being\r\n*>     read or written out\r\n*>      so a value of 66 in FA-RDBMS means take that value for mode (rdb) instead otherwise it is 00.\r\n*>\r\n     if       FA-RDBMS-Flat-Statuses = \"66\"     *> same as Cobol-File-Used = 1 = RDB (wsfnctn)\r\n              perform ba-Process-RDBMS            *>   MUST CHANGE ALL OTHER MODULES\r\n              go to AA-Main-Exit\r\n     end-if\r\n*>\r\n*> Test  Rec lengths first.\r\n*>\r\n     perform  ba012-Test-WS-Rec-Size-2.\r\n*>\r\n*>\r\n *>    if       not WS-FS-Cobol-Files-Used              *> in system-record [ not = zero ]\r\n *>             move WS-RDBMS-Flat-Statuses             *> move WS S-R data to FD S-R\r\n *>                        to FA-RDBMS-Flat-Statuses    *> needed for DAL? not JC/dbpre versions\r\n *>             go to ba-Process-RDBMS                  *> Do NOT overwrite as poss. non header rec\r\n *>   end-if.\r\n*>  ????\r\n*>  File paths for Cobol File has already done in main menu module\r\n*>\r\n     move     spaces to SQL-Err SQL-Msg SQL-State.\r\n*>\r\n     evaluate File-Function\r\n        when  1\r\n              go to aa020-Process-Open\r\n        when  2\r\n              go to aa030-Process-Close\r\n        when  4\r\n              go to aa050-Process-Read-Indexed       *> Read relative, keys are 1 thru 4\r\n        when  5\r\n              go to aa070-Process-Write\r\n        when  7\r\n              go to aa090-Process-ReWrite\r\n        when  other                          *> 6 is spare / unused, no delete (8) or start (9)\r\n              go to aa100-Bad-Function\r\n     end-evaluate.\r\n*>\r\n*>  Should never get here but in case :(\r\n     go       to aa100-Bad-Function.\r\n*>\r\n aa020-Process-Open.\r\n     move    \"OPEN SYSTEM File\" to WS-File-Key\r\n     move     201 to WS-No-Paragraph.\r\n     move     zero to FS-Reply WE-Error.  *> 03/02/18\r\n*>\r\n     if       Cobol-File-Status = 1\r\n              move \"Already OPENed SYSTEM File\" to WS-File-Key\r\n              move 941 to WE-Error\r\n              move 41  to FS-Reply\r\n              go to aa999-Main-Exit\r\n     end-if.\r\n*>\r\n     if       fn-input\r\n              open input System-File\r\n              if   Fs-Reply not = zero\r\n                   move 35 to fs-Reply   *> remove display for 908\r\n *>                  close System-File\r\n                   go to aa999-Main-Exit\r\n              end-if\r\n      else\r\n       if     fn-i-o\r\n              open i-o System-File\r\n              if       fs-reply not = zero                 *> this block was in st010 at ba000-Setup-Stock\r\n                       close       System-File\r\n                       open output System-File             *> Doesnt create in i-o or does it.\r\n                       close       System-File             *> if not, code for it\r\n                       open i-o    System-File\r\n              end-if                                       *> file-status will NOT be updated   ????\r\n       else\r\n        if    fn-output                                    *> should not need to be used\r\n              open output System-File                      *> caller should check fs-reply\r\n        else\r\n         if   fn-extend                                    *> Must not be used for ISAM files - IT ISNT\r\n*>              open extend System-File\r\n              move 997 to WE-Error\r\n              move 99 to fs-reply\r\n              go   to aa999-main-exit\r\n         end-if\r\n        end-if\r\n       end-if\r\n     end-if.\r\n     move     1 to Cobol-File-Status.                      *> file open.\r\n     if       fs-reply not = zero\r\n              move 999 to we-error.\r\n     go       to aa999-main-exit.            *> with test for dup processing\r\n*>\r\n aa030-Process-Close.\r\n     move     202 to WS-No-Paragraph.\r\n     move     spaces to WS-File-Key.         *> for logging\r\n     move     zero to FS-Reply WE-Error.  *> 03/02/18\r\n     if       Cobol-File-Status = 1\r\n              close    System-File\r\n              move    \"CLOSE SYSTEM File\" to WS-File-Key\r\n     else\r\n              move     \"Already CLOSED: SYSTEM File\" to WS-File-Key\r\n     end-if\r\n     move     zero to Cobol-File-Status.                   *> File closed.\r\n     perform  aa999-main-exit.\r\n     move     zero to  File-Function\r\n                       Access-Type.              *> close log file\r\n     perform  Ca-Process-Logs.\r\n     go       to aa-main-exit.\r\n*>\r\n aa050-Process-Read-Indexed.\r\n*>\r\n*> Process according to key number (1 thru 4) caller must issue MOVE\r\n*>\r\n*> Could put in test for file open,  and likewise for write & rewrite ?\r\n*>    BUT SHOULD NOT BE NEEDED.\r\n*>\r\n     move     204 to WS-No-Paragraph.\r\n     move     File-Key-No to rrn.\r\n     move     spaces to WS-File-Key.\r\n     string   \"Read Indexed \" File-Key-No into WS-File-Key.  *> 03/02/18\r\n     move     zero to FS-Reply WE-Error.  *> 03/02/18\r\n     read     System-File record into WS-System-Record.\r\n     go       to aa999-main-exit.\r\n*>\r\n aa070-Process-Write.   *> write to the relative record subject to File-Key-No  caller must issue MOVE\r\n     move     206   to WS-No-Paragraph.\r\n     move     zeros to FS-Reply  WE-Error.\r\n     move     spaces to WS-File-Key.\r\n     string   \"Write \" File-Key-No into WS-File-Key.  *> 03/02/18\r\n     move     File-Key-No  to rrn.\r\n     write    System-Record from WS-System-Record.\r\n     go       to aa999-main-exit.\r\n*>\r\n aa090-Process-Rewrite.   *> rewrite to the relative record subject to File-Key-No  caller must issue MOVE\r\n*>\r\n     move     208 to WS-No-Paragraph.\r\n     move     zeros to FS-Reply  WE-Error.\r\n     move     File-Key-No  to rrn.\r\n     move     spaces to WS-File-Key.\r\n     string   \"Rewrite \" File-Key-No into WS-File-Key.  *> 03/02/18\r\n     rewrite  System-Record from WS-System-Record.\r\n     go       to aa999-main-exit.\r\n*>\r\n aa100-Bad-Function.\r\n*>\r\n*> Houston; We have a problem\r\n*>\r\n     move     999 to WE-Error.                         *> 999\r\n     move     99  to fs-reply.\r\n*>\r\n aa999-main-exit.\r\n     if       Testing-1\r\n              perform Ca-Process-Logs\r\n     end-if.\r\n*>\r\n aa-main-exit.\r\n*>\r\n*> Now have processed cobol flat file .\r\n*>\r\n aa-Exit.\r\n     exit program.\r\n*>\r\n ba-Process-RDBMS section.\r\n*>***********************\r\n*>\r\n*>********************************************************************\r\n*>  Here we call the relevent RDBMS module for each of the tables    *\r\n*>   which will include processing any other joined tables as needed *\r\n*>   internally.                                                     *\r\n*>********************************************************************\r\n*>\r\n ba010-Test-WS-Rec-Size.\r\n*>\r\n*>     Test on very first call only  (So do NOT use var A & B again)\r\n*>       Lets test that Data-record size is = or > than declared Rec in DAL\r\n*>          as we cant adjust at compile/run time due to ALL Cobol compilers ?\r\n*>\r\n     move     20 to WS-Log-File-no.        *> for FHlogger\r\n*>\r\n ba012-Test-WS-Rec-Size-2.\r\n*>\r\n     if       A = zero                        *> so it is being called first time\r\n              move     function Length (\r\n                                        WS-System-Record\r\n                                                 ) to A\r\n              move     function length (\r\n                                        System-Record\r\n                                                 ) to B\r\n              if   A < B                      *> COULD LET caller module deal with these errors !!!!!!!\r\n                   move 901 to WE-Error       *> 901 Programming error; temp rec length is wrong caller must stop\r\n                   move 99 to fs-reply        *> allow for last field ( FILLER) not being present in layout.\r\n              end-if\r\n              if       WE-Error = 901                  *> record length wrong so display error, accept and",
        "line": 48
      },
      {
        "type": "IF",
        "condition": "Testing-1\r\n                           perform Ca-Process-Logs\r\n                       end-if\r\n                       accept Accept-Reply at 2433\r\n                       go to ba-rdbms-exit\r\n              end-if\r\n*>\r\n*>  Not a error comparing the length of records so - -\r\n*>  Load up the DB settings from the system record from COBOL file as its not passed on\r\n*>           hopefully once is enough  :)\r\n*>\r\n              move     RDBMS-DB-Name in System-Record  to DB-Schema\r\n              move     RDBMS-User    in System-Record  to DB-UName\r\n              move     RDBMS-Passwd  in System-Record  to DB-UPass\r\n              move     RDBMS-Port    in System-Record  to DB-Port\r\n              move     RDBMS-Host    in System-Record  to DB-Host\r\n              move     RDBMS-Socket  in System-Record  to DB-Socket\r\n     end-if.\r\n*>\r\n ba015-Test-Ends.\r\n*>\r\n*>   HERE we need a CDF [Compiler Directive] to select the correct DAL based\r\n*>     on the pre SQL compiler e.g., JCs or dbpre or Prima conversions <<<<  ? >>>>>\r\n*>        Do this after system testing and pre code release.\r\n*>\r\n*>  NOW SET UP FOR JC pre-sql compiler system.\r\n*>   DAL-Datablock not needed unless using RDBMS DAL from Prima & MS Sql\r\n*>\r\n     evaluate File-Key-No\r\n        when  1\r\n              call     \"systemMT\" using File-Access\r\n                                        ACAS-DAL-Common-data\r\n                                        WS-System-Record\r\n              end-call\r\n        when  2\r\n              call     \"dfltMT\" using   File-Access\r\n                                        ACAS-DAL-Common-data\r\n                                        WS-System-Record *> Default-Record\r\n              end-call\r\n        when  3\r\n              call     \"finalMT\" using  File-Access\r\n                                        ACAS-DAL-Common-data\r\n                                        WS-System-Record *> Final-Record\r\n              end-call\r\n        when  4\r\n              call     \"sys4MT\" using   File-Access\r\n                                        ACAS-DAL-Common-data\r\n                                        WS-System-Record *> System-Record-4\r\n              end-call\r\n     end-evaluate.\r\n*>\r\n*>   Any errors leave it to caller to recover from\r\n*>\r\n ba-rdbms-exit.\r\n     exit     section.\r\n*>   ****     *******\r\n*>\r\n Ca-Process-Logs.     *> Not called on DAL access as it does it already\r\n*>**************\r\n*>\r\n     call     \"fhlogger\" using File-Access\r\n                               ACAS-DAL-Common-data.\r\n*>\r\n ca-Exit.     exit.\r\n*>\r\n end program acas000.",
        "line": 545
      }
    ],
    "evaluates": [
      {
        "content": "File-Function\r\n              when  4   *> fn-read-indexed\r\n              when  5   *> fn-write\r\n    ...",
        "line": 330,
        "whenCount": 3
      },
      {
        "content": "File-Function\r\n        when  1\r\n              go to aa020-Process-Open\r\n        when  2\r\n           ...",
        "line": 371,
        "whenCount": 6
      },
      {
        "content": "File-Key-No\r\n        when  1\r\n              call     \"systemMT\" using File-Access\r\n                 ...",
        "line": 573,
        "whenCount": 4
      }
    ],
    "validations": []
  },
  "complexity": {
    "mccabe": 18,
    "cognitive": 28,
    "halstead": {
      "uniqueOperators": 1,
      "uniqueOperands": 40,
      "totalOperators": 33,
      "totalOperands": 66,
      "vocabulary": 41,
      "length": 99,
      "volume": 530.3976484571903
    }
  },
  "quality": {
    "gotos": [],
    "deadCode": [],
    "missingErrorHandlers": []
  },
  "sql": {
    "hasSQL": false,
    "statements": []
  },
  "cics": {
    "hasCICS": false,
    "statements": []
  }
}
