{
  "filePath": "/Users/MartinGonella/Desktop/Demos/ACAS/sales/sl950.cbl",
  "fileName": "sl950.cbl",
  "timestamp": "2025-09-15T16:25:31.877Z",
  "programId": "sl950",
  "parserUsed": "GnuCOBOL + Regex",
  "parseConfidence": 0,
  "validationStatus": "ERROR",
  "gnuCobolValidation": {
    "success": true,
    "errors": [],
    "warnings": []
  },
  "parseErrors": [
    "Cannot read properties of undefined (reading 'total')"
  ],
  "parseWarnings": [],
  "divisions": {
    "identification": true,
    "environment": true,
    "data": true,
    "procedure": true
  },
  "structure": {
    "sections": [
      {
        "name": "input-output",
        "line": 188
      },
      {
        "name": "file",
        "line": 203
      },
      {
        "name": "working-storage",
        "line": 215
      },
      {
        "name": "linkage",
        "line": 468
      },
      {
        "name": "init01",
        "line": 483
      },
      {
        "name": "print-routine",
        "line": 657
      },
      {
        "name": "headings-1",
        "line": 844
      },
      {
        "name": "zz060-Convert-Date",
        "line": 898
      },
      {
        "name": "exit",
        "line": 931
      },
      {
        "name": "zz070-Convert-Date",
        "line": 933
      },
      {
        "name": "exit",
        "line": 961
      },
      {
        "name": "zz090-Setup-Company-Details",
        "line": 963
      },
      {
        "name": "exit",
        "line": 969
      },
      {
        "name": "maps04",
        "line": 1065
      },
      {
        "name": "exit",
        "line": 1071
      }
    ],
    "paragraphs": [
      {
        "name": "file-control",
        "line": 191
      },
      {
        "name": "file-defs",
        "line": 480
      },
      {
        "name": "menu-return",
        "line": 495
      },
      {
        "name": "All-Print-start",
        "line": 540
      },
      {
        "name": "amend-request",
        "line": 551
      },
      {
        "name": "All-Print-go",
        "line": 567
      },
      {
        "name": "All-Print",
        "line": 575
      },
      {
        "name": "All-Print-more",
        "line": 622
      },
      {
        "name": "All-Print-get-inv",
        "line": 635
      },
      {
        "name": "main-end",
        "line": 643
      },
      {
        "name": "get-customer",
        "line": 696
      },
      {
        "name": "heading-details",
        "line": 733
      },
      {
        "name": "loop",
        "line": 754
      },
      {
        "name": "end-if",
        "line": 791
      },
      {
        "name": "print-bypass",
        "line": 793
      },
      {
        "name": "total-print-2",
        "line": 816
      },
      {
        "name": "zz060-Exit",
        "line": 930
      },
      {
        "name": "zz070-Exit",
        "line": 960
      },
      {
        "name": "maps04-exit",
        "line": 1070
      }
    ],
    "entryPoints": []
  },
  "dependencies": {
    "calls": [
      {
        "target": "SYSTEM",
        "line": 651,
        "type": "DYNAMIC",
        "using": [
          "print-report"
        ]
      },
      {
        "target": "C$JUSTIFY",
        "line": 1041,
        "type": "DYNAMIC",
        "using": [
          "Line-Company-Details1",
          "\"C\""
        ]
      },
      {
        "target": "C$JUSTIFY",
        "line": 1042,
        "type": "DYNAMIC",
        "using": [
          "Line-Company-Details2",
          "\"C\""
        ]
      },
      {
        "target": "C$JUSTIFY",
        "line": 1043,
        "type": "DYNAMIC",
        "using": [
          "Line-Company-Details3",
          "\"C\""
        ]
      },
      {
        "target": "C$JUSTIFY",
        "line": 1044,
        "type": "DYNAMIC",
        "using": [
          "Line-Company-Details4",
          "\"C\""
        ]
      },
      {
        "target": "C$JUSTIFY",
        "line": 1045,
        "type": "DYNAMIC",
        "using": [
          "Line-Company-Details5",
          "\"C\""
        ]
      },
      {
        "target": "C$JUSTIFY",
        "line": 1047,
        "type": "DYNAMIC",
        "using": [
          "Line-Company-Details6",
          "\"C\""
        ]
      },
      {
        "target": "C$JUSTIFY",
        "line": 1049,
        "type": "DYNAMIC",
        "using": [
          "Line-Company-Details7",
          "\"C\""
        ]
      },
      {
        "target": "C$JUSTIFY",
        "line": 1060,
        "type": "DYNAMIC",
        "using": [
          "line-Company-Details8,",
          "\"C\""
        ]
      },
      {
        "target": "maps04",
        "line": 1068,
        "type": "DYNAMIC",
        "using": [
          "maps03-ws"
        ]
      }
    ],
    "copies": [
      {
        "name": "of",
        "line": 178,
        "replacing": null
      },
      {
        "name": "envdiv",
        "line": 187,
        "replacing": null
      },
      {
        "name": "selinv",
        "line": 194,
        "replacing": null
      },
      {
        "name": "selstock",
        "line": 195,
        "replacing": null
      },
      {
        "name": "selsl",
        "line": 196,
        "replacing": null
      },
      {
        "name": "seldel",
        "line": 197,
        "replacing": null
      },
      {
        "name": "selprint-2",
        "line": 198,
        "replacing": null
      },
      {
        "name": "fdinv",
        "line": 206,
        "replacing": null
      },
      {
        "name": "fdstock",
        "line": 207,
        "replacing": null
      },
      {
        "name": "fdsl",
        "line": 208,
        "replacing": null
      },
      {
        "name": "fddel",
        "line": 209,
        "replacing": null
      },
      {
        "name": "print-spool-command-invoice",
        "line": 228,
        "replacing": null
      },
      {
        "name": "print-spool-command-p-dispatch",
        "line": 233,
        "replacing": null
      },
      {
        "name": "print-spool-command-p-dispatch-2",
        "line": 234,
        "replacing": null
      },
      {
        "name": "print-spool-command-p-dispatch-3",
        "line": 236,
        "replacing": null
      },
      {
        "name": "wsmaps03",
        "line": 239,
        "replacing": null
      },
      {
        "name": "wsfnctn",
        "line": 240,
        "replacing": null
      },
      {
        "name": "wsinv",
        "line": 241,
        "replacing": null
      },
      {
        "name": "slwsinv",
        "line": 242,
        "replacing": null
      },
      {
        "name": "slwsinv2",
        "line": 243,
        "replacing": null
      },
      {
        "name": "wssl",
        "line": 246,
        "replacing": null
      },
      {
        "name": "wsdel",
        "line": 247,
        "replacing": null
      },
      {
        "name": "wsstock",
        "line": 248,
        "replacing": null
      },
      {
        "name": "Test-Data-Flags",
        "line": 330,
        "replacing": null
      },
      {
        "name": "wscall",
        "line": 471,
        "replacing": null
      },
      {
        "name": "wssystem",
        "line": 472,
        "replacing": null
      },
      {
        "name": "wsnames",
        "line": 473,
        "replacing": null
      },
      {
        "name": "Proc-ACAS-FH-Calls",
        "line": 1073,
        "replacing": null
      }
    ],
    "performs": [
      {
        "target": "zz070-Convert-Date",
        "thru": null,
        "line": 492
      },
      {
        "target": "zz090-Setup-Company-Details",
        "thru": null,
        "line": 493
      },
      {
        "target": "Invoice-Open",
        "thru": null,
        "line": 502
      },
      {
        "target": "Stock-Open-Input",
        "thru": null,
        "line": 503
      },
      {
        "target": "Sales-Open-Input",
        "thru": null,
        "line": 504
      },
      {
        "target": "Delivery-Open-Input",
        "thru": null,
        "line": 505
      },
      {
        "target": "Invoice-Read-Indexed",
        "thru": null,
        "line": 514
      },
      {
        "target": "print-routine",
        "thru": null,
        "line": 521
      },
      {
        "target": "print-routine",
        "thru": null,
        "line": 533
      },
      {
        "target": "Invoice-Start",
        "thru": null,
        "line": 573
      },
      {
        "target": "Invoice-Read-Next-Header",
        "thru": null,
        "line": 578
      },
      {
        "target": "print-routine",
        "thru": null,
        "line": 594
      },
      {
        "target": "print-routine",
        "thru": null,
        "line": 617
      },
      {
        "target": "Invoice-Close",
        "thru": null,
        "line": 646
      },
      {
        "target": "Stock-Close",
        "thru": null,
        "line": 647
      },
      {
        "target": "Sales-Close",
        "thru": null,
        "line": 648
      },
      {
        "target": "Delivery-Close",
        "thru": null,
        "line": 649
      },
      {
        "target": "sih-lines",
        "thru": null,
        "line": 662
      },
      {
        "target": "Invoice-Read-Next",
        "thru": null,
        "line": 663
      },
      {
        "target": "end-if",
        "thru": null,
        "line": 665
      },
      {
        "target": "end-if",
        "thru": null,
        "line": 668
      },
      {
        "target": "end-if",
        "thru": null,
        "line": 672
      },
      {
        "target": "*>",
        "thru": null,
        "line": 675
      },
      {
        "target": "Sales-Read-Indexed",
        "thru": null,
        "line": 701
      },
      {
        "target": "Delivery-Read-Indexed",
        "thru": null,
        "line": 706
      },
      {
        "target": "zz060-Convert-Date",
        "thru": null,
        "line": 739
      },
      {
        "target": "headings-1",
        "thru": null,
        "line": 746
      },
      {
        "target": "Stock-Read-Indexed",
        "thru": null,
        "line": 775
      },
      {
        "target": "Stock-Read-Indexed",
        "thru": null,
        "line": 779
      },
      {
        "target": "headings-1",
        "thru": null,
        "line": 812
      },
      {
        "target": "Invoice-Rewrite",
        "thru": null,
        "line": 839
      },
      {
        "target": "maps04",
        "thru": null,
        "line": 907
      },
      {
        "target": "varying",
        "thru": null,
        "line": 972
      },
      {
        "target": "*>",
        "thru": null,
        "line": 974
      },
      {
        "target": "varying",
        "thru": null,
        "line": 975
      },
      {
        "target": "*>",
        "thru": null,
        "line": 977
      },
      {
        "target": "varying",
        "thru": null,
        "line": 978
      },
      {
        "target": "*>",
        "thru": null,
        "line": 980
      },
      {
        "target": "varying",
        "thru": null,
        "line": 981
      },
      {
        "target": "*>",
        "thru": null,
        "line": 983
      },
      {
        "target": "varying",
        "thru": null,
        "line": 984
      },
      {
        "target": "*>",
        "thru": null,
        "line": 986
      },
      {
        "target": "varying",
        "thru": null,
        "line": 987
      },
      {
        "target": "*>",
        "thru": null,
        "line": 989
      },
      {
        "target": "varying",
        "thru": null,
        "line": 990
      },
      {
        "target": "*>",
        "thru": null,
        "line": 992
      }
    ]
  },
  "dataFlow": {
    "files": [],
    "moves": [
      {
        "from": "Print-Spool-Name3",
        "to": "PSN",
        "line": 490
      },
      {
        "from": "1",
        "to": "File-Key-No",
        "line": 491
      },
      {
        "from": "zero",
        "to": "item-nos",
        "line": 512
      },
      {
        "from": "WS-Invoice-Record",
        "to": "sinvoice-header",
        "line": 518
      },
      {
        "from": "\"Y\"",
        "to": "ws-reply",
        "line": 528
      },
      {
        "from": "\"P\"",
        "to": "print-path\n     accept   print-path at 0744 with foreground-color 6 update",
        "line": 544
      },
      {
        "from": "\"N\"",
        "to": "ws-reply",
        "line": 553
      },
      {
        "from": "zeros",
        "to": "first-sl-inv item-nos\n              go to All-Print",
        "line": 557
      },
      {
        "from": "first-sl-inv",
        "to": "invoice-nos",
        "line": 565
      },
      {
        "from": "zero",
        "to": "first-sl-inv  item-nos",
        "line": 569
      },
      {
        "from": "1",
        "to": "File-Key-No",
        "line": 571
      },
      {
        "from": "WS-Invoice-Record",
        "to": "sinvoice-header",
        "line": 585
      },
      {
        "from": "\"Y\"",
        "to": "ws-reply",
        "line": 612
      },
      {
        "from": "\"Y\"",
        "to": "ws-reply",
        "line": 625
      },
      {
        "from": "zero",
        "to": "invoice-nos",
        "line": 638
      },
      {
        "from": "1",
        "to": "s-flag-i",
        "line": 654
      },
      {
        "from": "zero",
        "to": "ws-Item-Count",
        "line": 660
      },
      {
        "from": "1",
        "to": "i",
        "line": 661
      },
      {
        "from": "WS-Invoice-Record",
        "to": "Invoice-Lines (i)\n              if   sil-type (i) = \"D\"\n                   exit perform\n              end-if\n              add  1  to  i\n     end-perform\n*>\n     subtract 1  from  i",
        "line": 670
      },
      {
        "from": "spaces",
        "to": "line-0-a line-0-c",
        "line": 678
      },
      {
        "from": "1",
        "to": "ii",
        "line": 682
      },
      {
        "from": "1",
        "to": "l7-count-1",
        "line": 685
      },
      {
        "from": "1",
        "to": "File-Key-No",
        "line": 699
      },
      {
        "from": "sih-customer",
        "to": "WS-Sales-Key",
        "line": 700
      },
      {
        "from": "\"D\"",
        "to": "WS-Deliv-Key-Type\n              move  WS-Sales-Key to WS-Deliv-Sales-Key\n              perform  Delivery-Read-Indexed",
        "line": 704
      },
      {
        "from": "spaces",
        "to": "l1-i-name l1-d-name l2-i-line  l2-d-line\n                        l3-i-line  l3-d-line l4-i-line  l4-d-line\n                        l5-i-line  l5-d-line l6-i-line  l6-d-line",
        "line": 708
      },
      {
        "from": "sales-name",
        "to": "l1-i-name",
        "line": 712
      },
      {
        "from": "1",
        "to": "a",
        "line": 714
      },
      {
        "from": "deliv-name",
        "to": "l1-d-name",
        "line": 724
      },
      {
        "from": "1",
        "to": "a",
        "line": 726
      },
      {
        "from": "sih-invoice",
        "to": "l3-invoice",
        "line": 736
      },
      {
        "from": "sih-date",
        "to": "u-bin",
        "line": 738
      },
      {
        "from": "ws-date",
        "to": "l3-date",
        "line": 740
      },
      {
        "from": "sih-customer",
        "to": "l6-account",
        "line": 742
      },
      {
        "from": "sih-ref",
        "to": "l4-ref",
        "line": 743
      },
      {
        "from": "sih-order",
        "to": "l6-order",
        "line": 744
      },
      {
        "from": "1",
        "to": "k",
        "line": 748
      },
      {
        "from": "SL-Invoice-Lines",
        "to": "j",
        "line": 749
      },
      {
        "from": "25",
        "to": "j",
        "line": 751
      },
      {
        "from": "spaces",
        "to": "line-8",
        "line": 759
      },
      {
        "from": "1",
        "to": "File-Key-No\n                    perform Stock-Read-Indexed\n                    if      FS-Reply = 21\n                            move sil-product (k) to WS-Stock-Abrev-Key\n                            move 2 to File-Key-No\n                            perform Stock-Read-Indexed   *> read Stock-File key WS-Stock-Abrev-Key invalid key\n                            if      FS-Reply = 21\n                                    move spaces to WS-Stock-Key\n                            end-if    *> end-read\n                    end-if       *> end-read\n                    if   WS-Stock-Key not = spaces\t\t   *> Stock in use and rec found\n                         move WS-Stock-Key       to l8-Product\n                         move WS-Stock-Abrev-Key to l8-Abrev\n                         move WS-Stock-Location  to l8-Loc\n                         move WS-Stock-Desc      to l8-Desc\n                    end-if\n              end-if\n     end-if",
        "line": 774
      },
      {
        "from": "k",
        "to": "kk\n              move  2  to  k\n*>              add  25 to j\t\t\t\t\t*> 15  to  j\n              add  SL-Invoice-Lines to j                        *> 15 then 25 to  j\n              add  1   to  l7-count-1\n              move kk  to  k\n*>              move  spaces  to  print-record         *> THESE 2 NOT NEED FOR NON MATRIX\n*>              write  print-record  after 13  lines   *> & PRE-PRINTED STATIONERY\n              perform  headings-1",
        "line": 804
      },
      {
        "from": "spaces",
        "to": "print-record",
        "line": 821
      },
      {
        "from": "spaces",
        "to": "Line-8",
        "line": 825
      },
      {
        "from": "ws-Item-Count",
        "to": "l8-Qty",
        "line": 826
      },
      {
        "from": "spaces",
        "to": "Line-8",
        "line": 832
      },
      {
        "from": "\"P\"",
        "to": "sih-status-P\t\t\t\t*> we have printed pick list\n              move sinvoice-header to WS-Invoice-Record\n              perform Invoice-Rewrite",
        "line": 837
      },
      {
        "from": "spaces",
        "to": "print-record\n              write print-record after page\n              write print-record from line-0-a after 4\n      end-if\n     end-if\n*>\n     write    print-record  from  line-0-c after 2",
        "line": 877
      },
      {
        "from": "\"N\"",
        "to": "first-time",
        "line": 894
      },
      {
        "from": "spaces",
        "to": "ws-Date\n              go to zz060-Exit",
        "line": 909
      },
      {
        "from": "u-date",
        "to": "ws-date",
        "line": 911
      },
      {
        "from": "1",
        "to": "Date-Form",
        "line": 914
      },
      {
        "from": "ws-days",
        "to": "ws-swap\n              move ws-month to ws-days\n              move ws-swap to ws-month\n              go to zz060-Exit",
        "line": 918
      },
      {
        "from": "\"ccyy/mm/dd\"",
        "to": "ws-date",
        "line": 925
      },
      {
        "from": "to-day",
        "to": "ws-date",
        "line": 941
      },
      {
        "from": "1",
        "to": "Date-Form",
        "line": 944
      },
      {
        "from": "ws-days",
        "to": "ws-swap\n              move ws-month to ws-days\n              move ws-swap to ws-month\n              go to zz070-Exit",
        "line": 948
      },
      {
        "from": "\"ccyy/mm/dd\"",
        "to": "ws-date",
        "line": 955
      },
      {
        "from": "spaces",
        "to": "Line-Company-Details",
        "line": 971
      },
      {
        "from": "Usera",
        "to": "Line-Company-Details1",
        "line": 1020
      },
      {
        "from": "Address-1",
        "to": "line-Company-Details2",
        "line": 1021
      },
      {
        "from": "Address-2",
        "to": "line-Company-Details3",
        "line": 1022
      },
      {
        "from": "Address-3",
        "to": "line-Company-Details4",
        "line": 1023
      },
      {
        "from": "Address-4",
        "to": "line-Company-Details5",
        "line": 1024
      },
      {
        "from": "Post-Code",
        "to": "line-Company-Details6",
        "line": 1025
      },
      {
        "from": "Country",
        "to": "line-Company-Details7",
        "line": 1026
      },
      {
        "from": "Line-Company-Details5",
        "to": "Line-Company-Details4\n              move Line-Company-Details6 to Line-Company-Details5\n              move Line-Company-Details7 to Line-Company-Details6\n              move spaces to Line-Company-Details7",
        "line": 1029
      },
      {
        "from": "Line-Company-Details6",
        "to": "Line-Company-Details5\n              move Line-Company-Details7 to Line-Company-Details6\n              move spaces to Line-Company-Details7",
        "line": 1034
      },
      {
        "from": "Line-Company-Details7",
        "to": "Line-Company-Details6\n              move spaces to Line-Company-Details7",
        "line": 1038
      }
    ],
    "computes": [
      {
        "target": "k",
        "expression": "((l7-count-2 * 25)  -  i) + 2\t*> was 15\n              compute  k = ((l7-count-2 * SL-Invoice-Lines) - i) + 2        *> was 15 then 25\n              go to  total-print-2",
        "line": 799
      }
    ]
  },
  "businessLogic": {
    "conditions": [
      {
        "type": "IF",
        "condition": "you have the same printer defined as double.\n*>  while the other is set as duplex (double sided) printing.\n*>\n*> THE Above said, this program should not need any changes as it would notmally\n*>  use plain paper only HOW EVER you may want to produce TWO copies of each\n*>   document as it is currently set for only one.\n*>\n*>*****************************************************************\n*>                                                                *\n*>            DELIVERY NOTES and PICKING LIST PRINT               *\n*>                                                                *\n*>       SUPPLIED IN SOURCE FOR MODIFICATION BY CUSTOMER          *\n*>                                                                *\n*>  Print includes stock item storage locations.                  *\n*>                                                                *\n*> Applewood Computers offers a service to change this module     *\n*>   along with the Invoicing, Statement print modules            *\n*>   to meet your invoicing requirements.                         *\n*>  currently set to spool to secondary (lpt3) printer & assumes  *\n*>  a matrix printer using preprinted stationery or a laser using *\n*>        a preloaded template                                    *\n*>                                                                *\n*>  This printer would normally be in the Dispatch/packing room   *\n*>     as printer lpt-3.                                          *\n*>*****************************************************************\n*> This module does NOT print amounts only products, quantities   *\n*>  and Locations.\t                                               *\n*>*****************************************************************\n*>  WARNING:  THIS MODULE MUST BE RUN BEFORE INVOICE PRINTING     *\n*>            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^     *\n*>         as the invoice print updates the invoice records       *\n*>         and hence this program will NOT find records           *\n*>  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^  *\n*>*****************************************************************\n*>  Adobe Reader API Code and the Invoicing                       *\n*>  modules has been removed as they are non-free code and users  *\n*>  have to purchase it and the reader/Forms programs from Adobe. *\n*>  I will try and relook at this as well as links to LibreOffice *\n*>  that do a similar job in producing stylised documents instead *\n*>  based on template forms etc when time is available.           *\n*>*****************************************************************\n*>\n identification          division.\n*>===============================\n*>\n      program-id.         sl950.\n*>**\n*>    Author.             V B Coen, FBCS, FIDM, FIDPM, 28/10/83 but taken from\n*>                                                     Invoice print.\n*>                        For Applewood Computers.\n*>*\n*>    Security.           Copyright (C) 1976-2025 & later, Vincent Bryan Coen.\n*>                        Distributed under the GNU General Public License.\n*>                        See the file COPYING for details.\n*>**\n*>    Remarks.            Delivery and Packing list print.\n*>**\n*>    Version.            See Prog-Name In Ws.\n*>\n*>    Called Modules.     Maps04.\n*>                        acas011  ->\n*>                         stockMT.\n*>                        acas012  ->       (Sales)\n*>                         salesMT.\n*>                        acas014  ->       (Delivery)\n*>                         deliveryMT.\n*>                        acas016  ->\n*>                         invoiceMT.\n*>**\n*>    Error messages used.  These messages are remarked out, as page align is off.\n*>                          You will need them if using continuous stationary.\n*>                        SL003 hit return ...\n*>                        SL200 Form alignment msg.\n*>**\n*> Changes\n*> 24/03/12 vbc - .01 Migration to Open Cobol v3.01.nn and code added to match sl930.\n*> 15/05/13 vbc - .02 Changed printer to prt-2 from prt-1 and removed double sided spooling.\n*> 19/05/13 vbc - .03 Removed analysis file process and amounts etc as picking dont need them\n*>                    Inserted company headings if needed (set by flag in parameter file, well\n*>                    it will be when sys002 is changed).Update invoice record after running by\n*>                    setting sih-status-P true.\n*> 20/05/13 vbc - .04 Tidied up headings & added time to headings.\n*> 30/05/13 vbc - .05 More tidying to match sl930 invoicing along with an total Item count.\n*>                    Checked that all non-free API code from Adobe Reader is removed.\n*> 24/10/16 vbc - .06 ALL programs now using wsnames.cob in copybooks\n*> 30/10/16 vbc - .07 Support for RDB on  Stock tables\n*>                    instead of cobol files\n*>                    using acas011. Update version to v3.02\n*>                      more to do, have renamed the calls for acas011\n*>                      Stock to reduce any coding errors\n*>                      as there will be a lot of them in this module.\n*>                    Replace usage of File-Status/es to use call to\n*>                    CBL_CHECK_FILE_EXIST - Now removed (08).\n*> 15/01/17 vbc - .   All programs upgraded to v3.02 for RDB processing.\n*> 19/01/17 vbc - .08 Added remaining FH processing but excluding invoice.\n*>                    Removed usage of maps99 - was for unused anal file.\n*> 20/01/17 vbc -     Removed test for 'p' in sih-status-P & replace\n*>                    literal Invoice for Picking etc. Remove references\n*>                    to invoice-let as redundant.\n*> 25/01/17 vbc       Dry testing completed.\n*> 11/02/17 vbc - .09 Updated FD/WS for 016,019 and replaced cobol verbs\n*>                    for access to FH/DALs.\n*> 18/04/17 vbc - .10 Updated to use Invoice-Read-Next-Header where only the\n*>                    Header is wanted (if test = zero",
        "line": 19
      },
      {
        "type": "IF",
        "condition": "SL-Comp-Pick = Y.\n*> 19/02/23 vbc - .13 Change printline to 84 for mex size. sstop blank lines on\n*>                    HP 7305.\n*> 06/03/23 vbc - .14 In zz080-Setup-Company-Details if not spaces added VAT data to\n*>                    Line-Company-Details8 and in headings-1 print it out as\n*>                    last line in company name address details - hopefully centered.\n*>                    Also done in sl930.\n*> 07/03/23 vbc - .15 lpr copybook print-spool-command-p-dispatch.cob changed\n*>                    as single-sided  Also applies to sl930 by using\n*>                    print-spool-command-p-dispatch-2.cob for 2 copies, or -3\n*>                    print-spool-command-p-dispatch-3.cob\n*>                    Adjust size for printer FD to actual requirements.\n*> 27/06/23 vbc - .16 Company heading changed to use C$JUSTIFY in ZZ090\n*>                    same for sl930.\n*> 07/08/23 vbc - .17 fix in zz090-Setup-Company-Details bland addr lines\n*>                    within address. for both sl930 & sl950.\n*>                    Adjust line-0-d less 1 char on 1st field.\n*> 27/01/24 vbc - .18 Now using selprint-2.cpy and prt-3 and printing to\n*>                    fit-to-page - JIC, added packed by line, replaced PSN3\n*>                    by PSN. \"Packed by \" previously added.\n*> 16/04/24 vbc       Copyright notice update superseding all previous notices.\n*> 04/02/25 vbc - .19 Added WS-  to Stock-Location.\n*>*************************************************************************\n*>\n*>  From copyright.cob.\n*>\n*> Copyright Notice.\n*> ****************\n*>\n*> This notice supersedes all prior copyright notices & was updated 2024-04-16.\n*>\n*> These files and programs are part of the Applewood Computers Accounting\n*> System and is Copyright (c) Vincent B Coen. 1976-2025 and later.\n*>\n*> This program is now free software; you can redistribute it and/or modify it\n*> under the terms listed here and of the GNU General Public License as\n*> published by the Free Software Foundation; version 3 and later as revised\n*> for PERSONAL USAGE ONLY and that includes for use within a business but\n*> EXCLUDES repackaging or for Resale, Rental or Hire in ANY way.\n*>\n*> Persons interested in repackaging, redevelopment for the purpose of resale or\n*> distribution in a rental or hire mode must get in touch with the copyright\n*> holder with your commercial plans and proposals.\n*>\n*> ACAS is distributed in the hope that it will be useful, but WITHOUT\n*> ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n*> FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n*> for more details. If it breaks, you own both pieces but I will endeavour\n*> to fix it, providing you tell me about the problem.\n*>\n*> You should have received a copy of the GNU General Public License along\n*> with ACAS; see the file COPYING.  If not, write to the Free Software\n*> Foundation, 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA.\n*>\n*>*************************************************************************\n*>\n environment             division.\n*>===============================\n*>\n copy \"envdiv.cob\".\n input-output            section.\n*>------------------------------\n*>\n file-control.\n*>-----------\n*>\n*> copy \"selinv.cob\".\n*> copy \"selstock.cob\".\n*> copy \"selsl.cob\".\n*> copy \"seldel.cob\".\n copy \"selprint-2.cpy\" replacing \"prt-1\" by \"prt-3\".\t*> Dispatch printer\n*>\n data                    division.\n*>===============================\n*>\n file section.\n*>-----------\n*>\n*> copy \"fdinv.cob\".\n*> copy \"fdstock.cob\".\n*> copy \"fdsl.cob\".\n*> copy \"fddel.cob\".\n*>\n fd  print-file.\n*>\n 01  print-record            pic x(84).   *> was 102).\n*>\n working-storage section.\n*>----------------------\n 77  prog-name               pic x(15) value \"SL950 (3.02.19)\".\n*>\n*> Change this to suite your requirements. This is set portrait, going to a\n*>  different printer than normal\n*>   and single sided within copybook\n*>   see CUPS help on 'lpr' but change it within program not the copybook\n*>\n*>    WARNING print delivery/packing slips FIRST (sl950) before printing invoices.\n*>       as you cannot do so after printing invoices.\n*>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n*>\n copy \"print-spool-command-invoice.cob\" replacing     *>  ==PSN2== by ==PSN3==\n                                                  \"prt-1\" by \"prt-3\".\n*>\n*> Also change for two (or more) copies per packing note or invoice,  if needed\n*> I.e., one for customer, filing, sales deptartment etc, by using instead of\n*> copy \"print-spool-command-p-dispatch.cob\" above, use\n*>   copy \"print-spool-command-p-dispatch-2.cob\"  for two copies\n*> or for three copies use\n*>  copy \"print-spool-command-p-dispatch-3.cob\" instead of the above name.\n*>\n\n copy \"wsmaps03.cob\".\n copy \"wsfnctn.cob\".\n                           *> was copy \"wsinv.cob\".\n copy \"slwsinv.cob\"  replacing Invoice-Line by Invoice-Lines. *> original with occ 40 for lines\n copy \"slwsinv2.cob\".\n 01  WS-Invoice-Record  redefines Invoice-Record\n                                pic x(137).\n copy \"wssl.cob\".\n copy \"wsdel.cob\".\n copy \"wsstock.cob\".\n*>\n *> 77  WS-Temp-Invoice-Record     pic x(140).  *> actual is 137.  NOT USED - YET.\n*>\n*> REMARK OUT ANY IN USE\n*>\n 01  Dummies-4-Unused-ACAS-FH-Calls.      *> Call blk at zz080-ACAS-Calls\n     03  Default-Record         pic x.\n     03  Final-Record           pic x.\n     03  System-Record-4        pic x.\n     03  WS-Ledger-Record       pic x.\n     03  WS-Posting-Record      pic x.\n     03  WS-Batch-Record        pic x.\n     03  WS-IRS-Posting-Record  pic x.\n     03  WS-Stock-Audit-Record  pic x.\n*>     03  WS-Stock-Record        pic x.\n*>     03  WS-Sales-Record        pic x.\n     03  WS-Value-Record        pic x.\n*>     03  WS-Delivery-Record     pic x.\n     03  WS-Analysis-Record     pic x.\n     03  WS-Del-Inv-Nos-Record  pic x.\n     03  WS-Purch-Record        pic x.\n     03  WS-Pay-Record          pic x.\n*>     03  WS-Invoice-Record      pic x.\n     03  WS-OTM3-Record         pic x.\n     03  WS-PInvoice-Record     pic x.\n     03  WS-OTM5-Record         pic x.\n*>\n 01  ws-data.\n     03  test-product.\n         05  filler      pic x.\n             88  il-comment              value \"/\".\n         05  filler      pic x(6).\n     03  ws-reply        pic x.\n     03  print-path      pic x.\n     03  a               pic 99.\n     03  c-check         pic 9.\n         88  c-exists                    value 1.\n     03  address-line    pic x(36).\n     03  ws-Item-Count   pic 9(4)        value zero.\n     03  i               pic 99.\n     03  ii              pic 99.\n     03  j               pic 99.\n     03  k               pic 99.\n     03  kk              pic 99.\n     03  first-time      pic x           value \"Y\".\n     03  ws-Time         pic 9(8)        value zero.\n     03  h1              pic 99.  *> Co name  max 32\n     03  h2              pic 99.  *> Addr 1   max 24\n     03  h3              pic 99.  *> Addr 2   max 24\n     03  h4              pic 99.  *> Addr 3   max 24\n     03  h5              pic 99.  *> Addr 4   max 24\n     03  h6              pic 99.  *> Postcode max 12\n     03  h7              pic 99.  *> Country  max 24\n     03  h97             binary-char.\n     03  h98             binary-char.\n     03  h99             binary-char.\n*>\n 01  ws-Test-Date            pic x(10).\n 01  ws-date-formats.\n     03  ws-swap             pic xx.\n     03  ws-Conv-Date        pic x(10).\n     03  ws-date             pic x(10).\n     03  ws-UK redefines ws-date.\n         05  ws-days         pic xx.\n         05  filler          pic x.\n         05  ws-month        pic xx.\n         05  filler          pic x.\n         05  ws-year         pic x(4).\n     03  ws-USA redefines ws-date.\n         05  ws-usa-month    pic xx.\n         05  filler          pic x.\n         05  ws-usa-days     pic xx.\n         05  filler          pic x.\n         05  filler          pic x(4).\n     03  ws-Intl redefines ws-date.\n         05  ws-intl-year    pic x(4).\n         05  filler          pic x.\n         05  ws-intl-month   pic xx.\n         05  filler          pic x.\n         05  ws-intl-days    pic xx.\n*>\n copy \"Test-Data-Flags.cob\".  *> set sw-testing to zero to stop logging.\n*>\n 01  File-Info                          value zero.\n     05 File-Size-Bytes  pic 9(18) comp.\n     05 Mod-DD           pic 9(2)  comp.\n     05 Mod-MO           pic 9(2)  comp.\n     05 Mod-YYYY         pic 9(4)  comp.\n     05 Mod-HH           pic 9(2)  comp.\n     05 Mod-MM           pic 9(2)  comp.\n     05 Mod-SS           pic 9(2)  comp.\n     05 filler           pic 9(2)  comp. *> Always 00\n*>\n*> 01  Error-Messages.\n*> System Wide\n*>     03  SL003          pic x(28) value \"SL003 Hit Return To Continue\".\n*> Module specific\n*>     03  SL200          pic x(43) value \"SL200 Re-Align Picking lists to Top of Form\".\n*>\n 01  error-code          pic 999.\n*>\n 01  Line-Company-Details           value spaces.\n     03  line-Company-Details1 pic x(91).\n     03  line-Company-Details2 pic x(91).\n     03  line-Company-Details3 pic x(91).\n     03  line-Company-Details4 pic x(91).\n     03  line-Company-Details5 pic x(91).\n     03  line-Company-Details6 pic x(91).\n     03  line-Company-Details7 pic x(91).\n     03  line-Company-Details8 pic x(91).  *> VAT # line\n*>\n 01  line-0-a.\n*> line 1\n     03  l0-type         pic x(12).\n*>\n*> 01  line-0-b. NOT NEEDED\n*> line 2\n*>     03  l0-xs           pic x(12).\n*>\n 01  line-0-c.\n*> line 3 - 62\n     03  filler          pic x(37)       value spaces.\n     03  l0-desc         pic x(25).\n*>\n 01  line-0-d.\n*> line 5 - 84\n     03  filler          pic x(17)       value spaces.\n     03  l3-title        pic x(21)       value \"Picking/Delivery Note\".\n     03  filler          pic x(18)       value spaces.\n     03  filler          pic x(5)        value \"Page \".\n     03  l7-count-1      pic 9.\n     03  filler          pic x(4)        value \" of \".\n     03  l7-count-2      pic 9.\n     03  filler          pic x           value space.\n     03  l3-date         pic x(10).\n     03  filler          pic x           value space.\n     03  l3-HH           pic 99.\n     03  filler          pic x           value \":\".\n     03  l3-MM           pic 99.\n*>\n 01  line-0-e.\n*> line 9  - 84\n     03  filler          pic x(71)       value spaces.\n     03  filler          pic x(5)        value \"Inv: \".\n     03  l3-invoice      pic z(7)9.\n*>\n 01  line-1.\n*> line 10 - 65\n*>     03  filler          pic x(05)       value spaces.\n     03  l1-i-name       pic x(31).\n     03  filler          pic x(4)        value spaces.\n     03  l1-d-name       pic x(30).\n*>\n 01  line-2.\n*> line 11 - 72\n*>     03  filler          pic x(05)       value spaces.\n     03  l2-i-line       pic x(31).\n     03  filler          pic xxxx        value spaces.\n     03  l2-d-line       pic x(30).\n     03  filler          pic x(7)        value spaces.\n*>\n 01  line-3.\n*> line 12 - 88 (max size)\n*>     03  filler          pic x(05)       value spaces.\n     03  l3-i-line       pic x(31).\n     03  filler          pic xxxx        value spaces.\n     03  l3-d-line       pic x(30).\n     03  filler          pic x(5)        value spaces.\n     03  filler          pic x(7)        value \"Order:\".\n     03  l6-order        pic x(11).\n*>\n 01  line-4.\n*> line 13 - 88\n*>     03  filler          pic x(05)       value spaces.\n     03  l4-i-line       pic x(31).\n     03  filler          pic xxxx        value spaces.\n     03  l4-d-line       pic x(30).\n     03  filler          pic x(5)        value spaces.\n     03  filler          pic x(7)        value \" Ref :\".\n     03  l4-ref          pic x(11).\n*>\n 01  line-5.\n*> line 14 - 84\n*>     03  filler          pic x(05)       value spaces.\n     03  l5-i-line       pic x(31).\n     03  filler          pic xxxx        value spaces.\n     03  l5-d-line       pic x(30).\n     03  filler          pic x(5)        value spaces.\n     03  filler          pic x(7)        value \" A/C :\".\n     03  l6-account      pic x(7).\n*>\n 01  line-6.\n*> line 15 - 65\n*>     03  filler          pic x(05)       value spaces.\n     03  l6-i-line       pic x(31).\n     03  filler          pic xxxx        value spaces.\n     03  l6-d-line       pic x(30).\n*>\n 01  line-7.\n*> line 16-18 (3)\n     03  filler          pic x(72)       value spaces.\n*>\n 01  line-7B.\t\t\t*> plain invoice line heads - 82\n     03  filler          pic x(11)       value \"  Abrev #\".\n     03  filler          pic x(15)       value \"Product Code\".\n     03  filler          pic x(34)       value \"Item Description\".\n     03  filler          pic x(12)       value \"   Qty\".\n     03  filler          pic x(10)       value \"Location\".\n*>\n 01  line-8    value spaces.\n*> line 19-33 (15)  -  84\n     03  filler          pic x(2)        value spaces.\n     03  l8-Abrev        pic x(7)BB.\n     03  l8-Product      pic x(13)BB.\n     03  l8-Desc         pic x(32)BB.\n     03  l8-qty          pic z(5)9       blank when zero.\n     03  filler          pic x(6).\n     03  l8-Loc          pic x(10)BB.\n*>\n linkage section.\n*>**************\n*>\n copy \"wscall.cob\".\n copy \"wssystem.cob\".\n copy \"wsnames.cob\".\n*>\n 01  to-day              pic x(10).\n*>\n procedure division using ws-calling-data\n                          system-record\n                          to-day\n                          file-defs.\n*>=======================================\n*>\n init01 section.\n     if       full-invoicing = zero     *> Hmm, not sure about this for this program\n              exit program.             *> but if no invoicing cant be using stock linked:)\n*>\n*> Force Esc, PgUp, PgDown, PrtSC to be detected\n     set      ENVIRONMENT \"COB_SCREEN_EXCEPTIONS\" to \"Y\".\n     set      ENVIRONMENT \"COB_SCREEN_ESC\" to \"Y\".\n     move     Print-Spool-Name3 to PSN.  *> was PSN3\n     move     1 to File-Key-No.\n     perform  zz070-Convert-Date.\n     perform  zz090-Setup-Company-Details.\n*>\n menu-return.\n*>**********\n*>\n     display  prog-name at 0101 with foreground-color 2 erase eos.\n     display  \"Delivery / Picking Note Print\" at 0126 with foreground-color 2.\n     display  ws-date at 0171 with foreground-color 2.\n*>\n     perform  Invoice-Open.          *> open     i-o    invoice-file.\n     perform  Stock-Open-Input.      *> open     input Stock-File.\n     perform  Sales-Open-Input.      *> open     input  sales-file delivery-file.\n     perform  Delivery-Open-Input.\n     open     output print-file.\n*>\n     if       pass-value not = 3\n              go to  All-Print-start.\n*>\n     subtract 1  from  next-invoice  giving  invoice-nos.\n     move     zero  to  item-nos.\n*>\n     perform  Invoice-Read-Indexed.   *> read invoice-file  record invalid key\n     if       fs-reply not = zero     *> chk if last inv. created is present.\n              go to  main-end.\n*>\n     move     WS-Invoice-Record  to  sinvoice-header.\n*>\n     if       pending in sih-status\n              perform  print-routine\n              go to    main-end.\n*>\n     display  \"Invoice Number - \" at 0501 with foreground-color 2.\n     display  sih-invoice at 0518 with foreground-color 3.\n     display  \"Already Produced!.....Re-Print  (Y/N) ? - [Y]\" at 0601 with foreground-color 2.\n*>\n     move     \"Y\"  to  ws-reply.\n     accept   ws-reply at 0644 with foreground-color 6 update.\n     move     function upper-case (ws-reply) to ws-reply.\n*>\n     if       ws-reply = \"Y\"\n              perform   print-routine.\n*>\n     display  \" \" at 0501 with erase eol.\n     display  \" \" at 0601 with erase eol.\n*>\n     go       to main-end.\n*>\n All-Print-start.\n*>**************\n*>\n     display  \"Print Or Re-Print.............  (P/R) ? - [P]\" at 0701 with foreground-color 2.\n     move     \"P\"  to  print-path\n     accept   print-path at 0744 with foreground-color 6 update.\n     move     function upper-case (ws-reply) to ws-reply.\n*>\n     if       print-path = \"R\"\n              go to  All-Print-get-inv.\n*>\n amend-request.\n*>\n     move     \"N\" to ws-reply.\n     display  \"Any Amended Invoices In This Batch? [N]\" at 0901 with foreground-color 2.\n     accept   ws-reply at 0938 with foreground-color 6 update UPPER.\n     if       ws-reply = \"Y\"\n              move zeros to first-sl-inv item-nos\n              go to All-Print.\n     if       ws-reply not = \"N\"\n              go to amend-request.\n*>\n     if       first-sl-inv = zero\n              go to  All-Print.\n*>\n     move     first-sl-inv  to  invoice-nos.\n*>\n All-Print-go.\n*>\n     move     zero  to  first-sl-inv  item-nos.\n*>\n     move     1 to File-Key-No.\n     set      fn-Not-Less-Than to true.\n     perform  Invoice-Start.   *> start invoice-file key not < invoice-key.\n*>\n All-Print.\n*>********\n*>\n     perform  Invoice-Read-Next-Header.    *> read invoice-file next record at end\n     if       fs-reply = 10\n              go to  main-end.\n*>\n     if       item-nos not = zero\t*> find headers\n              go to  All-Print.\n*>\n     move     WS-Invoice-Record  to  sinvoice-header.\n*>\n     if       sih-lines = zero and\n              sapplied\n              go to All-Print.\n*>\n     if       sih-status-P = \"P\"\t\t*> Pick list printed\n              go to All-Print.\n     if       pending in sih-status\t\t*> Invoices not yet printed but pick lists could have been !!!!\n              perform  print-routine\n              go to    All-Print.\n*>\n     if       print-path = \"P\"\n              go to  All-Print.\n*>\n     if       sih-type > 2      *> ONLY print for invoices and receipts (prepaids)\n              go to All-Print.\n*>\n*> Also the tests below really should be skipped\n*>  as inv. printing is not relevant to pick lists BUT a reprint\n*>          might be needed for amended invoices.\n*>  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n*>\n     display  \"Invoice Number - \" at 1101 with foreground-color 2.\n     display  sih-invoice at 1118 with foreground-color 3.\n     display  \"Already Produced!.....Re-Print  (Y/N) ? - [Y]\" at 1201 with foreground-color 2.\n*>\n     move     \"Y\"  to  ws-reply.\n     accept   ws-reply at 1244 with foreground-color 6.\n     move     function upper-case (ws-reply) to ws-reply.\n*>\n     if       ws-reply = \"Y\"\n              perform   print-routine.\n*>\n     display  \" \" at 1101 with erase eol.\n     display  \" \" at 1201 with erase eol.\n*>\n All-Print-more.\n*>\n     display  \"More To Print? [Y]\" at 1101 with foreground-color 2.\n     move     \"Y\" to ws-reply.\n     accept   ws-reply at 1117 with foreground-color 6 update.\n     move     function upper-case (ws-reply) to ws-reply.\n     if       ws-reply = \"N\"\n              go to main-end.\n     if       ws-reply = \"Y\"\n              go to All-Print-get-inv.\n*>\n     go       to All-Print-more.\n*>\n All-Print-get-inv.\n*>\n     display  \" \" at 1301 with erase eol.\n     move     zero to invoice-nos.\n     display  \"Give Lowest Invoice No. [        ]\" at 1301 with foreground-color 2.\n     accept   invoice-nos at 1326 with foreground-color 3 update.\n     go       to All-Print-go.\n*>\n main-end.\n*>*******\n*>\n     perform  Invoice-Close.    *> close invoice-file\n     perform  Stock-Close.      *>     sales-file delivery-file Stock-File.\n     perform  Sales-Close.\n     perform  Delivery-Close.\n     close    print-file.\n     call     \"SYSTEM\" using print-report.\n*>\n*>     if       pass-value = 3\n*>              move 1 to s-flag-i.\n     exit     program.\n*>\n print-routine           section.\n*>==============================\n*>\n     move     zero to ws-Item-Count.\n     move     1  to  i.\n     perform  sih-lines times\n              perform  Invoice-Read-Next     *> read invoice-file next record at end\n              if       fs-reply = 10\n                       exit perform\n              end-if                         *> end-read\n              if   item-nos = zero\n                   exit perform\n              end-if\n              move WS-Invoice-Record to Invoice-Lines (i)\n              if   sil-type (i) = \"D\"\n                   exit perform\n              end-if\n              add  1  to  i\n     end-perform\n*>\n     subtract 1  from  i.\n     move     spaces  to  line-0-a line-0-c.\n*>\n     subtract 1 from i giving ii.\n     if       ii = 0\n              move 1 to ii.\n     divide   ii by  SL-Invoice-Lines   giving  l7-count-2.  *> was 15\n     add      1  to  l7-count-2.\n     move     1  to  l7-count-1.\n*>\n*>     if       sih-type = 2\t\t*> Do not know why this here as it bypasses other if tests\n*>              go to  get-customer.\n*>\n     if       sih-type = 1\n              move  \"Receipt Pick\"  to l0-type\n     else\n      if      sih-type = 2\n              move  \"Invoice Pick\"  to l0-type.\n*>\n get-customer.\n*>***********\n*>\n     move     1 to File-Key-No.\n     move     sih-customer  to  WS-Sales-Key.\n     perform  Sales-Read-Indexed.           *> read     sales-file  record.\n*>\n     if       delivery-tag  >  zero\n              move  \"D\"          to WS-Deliv-Key-Type\n              move  WS-Sales-Key to WS-Deliv-Sales-Key\n              perform  Delivery-Read-Indexed.        *> read delivery-file record.\n*>\n     move     spaces to l1-i-name l1-d-name l2-i-line  l2-d-line\n                        l3-i-line  l3-d-line l4-i-line  l4-d-line\n                        l5-i-line  l5-d-line l6-i-line  l6-d-line.\n*>\n     move     sales-name  to  l1-i-name.\n*>\n     move     1  to  a.\n     unstring sales-address delimited by sl-delim into  l2-i-line count a  pointer a.\n     unstring sales-address delimited by sl-delim into  l3-i-line count a  pointer a.\n     unstring sales-address delimited by sl-delim into  l4-i-line count a  pointer a.\n     unstring sales-address delimited by sl-delim into  l5-i-line count a  pointer a.\n     unstring sales-address delimited by sl-delim into  l6-i-line          pointer a.\n*>\n     if       delivery-tag = zero\n              go to  heading-details.\n*>\n     move     deliv-name  to  l1-d-name.\n*>\n     move     1  to  a.\n     unstring deliv-address  delimited by sl-delim into  l2-d-line  count a  pointer a.\n     unstring deliv-address  delimited by sl-delim into  l3-d-line  count a  pointer a.\n     unstring deliv-address  delimited by sl-delim into  l4-d-line  count a  pointer a.\n     unstring deliv-address  delimited by sl-delim into  l5-d-line  count a  pointer a.\n     unstring deliv-address  delimited by sl-delim into  l6-d-line           pointer a.\n*>\n heading-details.\n*>**************\n*>\n     move     sih-invoice  to  l3-invoice.\n*>\n     move     sih-date  to  u-bin.\n     perform  zz060-Convert-Date.\n     move     ws-date  to  l3-date.\n*>\n     move     sih-customer  to l6-account.\n     move     sih-ref       to l4-ref.\n     move     sih-order     to l6-order.\n*>\n     perform  headings-1.\n*>\n     move     1  to k.\n     move     SL-Invoice-Lines to j.   *> was 15",
        "line": 128
      },
      {
        "type": "IF",
        "condition": "il-comment\n              move spaces to line-8.\n*>\n     if       i-level-2\n              move  sil-description (k) to l8-desc.\t*> updated by stock data if linked\n*>\n     if       il-comment\n              go to print-bypass.\n*>\n     if       i-level-2\t\t\t                                    *> Do basics\n              move  sil-qty (k)         to l8-qty\n              add   sil-qty (k)         to ws-Item-Count\t\t    *> track no. of items\n              move  sil-product (k)     to l8-product\n                                           WS-Stock-Key\n              if    SL-Stock-Link = \"Y\"\n*>                    read  Stock-File record key WS-Stock-Key invalid key  *> now for the bonus ball !\n                    move 1 to File-Key-No\n                    perform Stock-Read-Indexed\n                    if      FS-Reply = 21\n                            move sil-product (k) to WS-Stock-Abrev-Key\n                            move 2 to File-Key-No\n                            perform Stock-Read-Indexed   *> read Stock-File key WS-Stock-Abrev-Key invalid key\n                            if      FS-Reply = 21\n                                    move spaces to WS-Stock-Key\n                            end-if    *> end-read\n                    end-if       *> end-read\n                    if   WS-Stock-Key not = spaces\t\t   *> Stock in use and rec found\n                         move WS-Stock-Key       to l8-Product\n                         move WS-Stock-Abrev-Key to l8-Abrev\n                         move WS-Stock-Location  to l8-Loc\n                         move WS-Stock-Desc      to l8-Desc\n                    end-if\n              end-if\n     end-if.\n*>\n print-bypass.\n*>\n     write    print-record  from  line-8 after 1.\n     add      1  to  k.\n*>\n     if       k  >  i\t\t                            *> End of invoice\n*>              compute  k = ((l7-count-2 * 25)  -  i) + 2\t*> was 15\n              compute  k = ((l7-count-2 * SL-Invoice-Lines) - i) + 2        *> was 15",
        "line": 758
      },
      {
        "type": "IF",
        "condition": "k  >  j\n              move  k  to  kk\n              move  2  to  k\n*>              add  25 to j\t\t\t\t\t*> 15  to  j\n              add  SL-Invoice-Lines to j                        *> 15",
        "line": 803
      },
      {
        "type": "IF",
        "condition": "sih-status-P not = \"P\"\n              move \"P\" to sih-status-P\t\t\t\t*> we have printed pick list\n              move sinvoice-header to WS-Invoice-Record\n              perform Invoice-Rewrite.        *>  rewrite invoice-record.\n*>\n main-exit.   exit section.\n*>********    ****\n*>\n headings-1                section.\n*>================================\n*>\n*> May need to change this first block depending on page layout/size etc.\n*>  with the first-time test\n*>\n     accept   ws-Time from time.\n     move     ws-Time (1:2) to l3-HH.\n     move     ws-Time (3:2) to l3-MM.\n*>\n     if       SL-Comp-Pick\t\t\t\t*> print Co. address details\n      if      first-time = \"Y\"           \t\t*> Dont print a blank page\n              write Print-Record from line-Company-Details1 after 1\n      else\n              write Print-Record from line-Company-Details1 after page\n      end-if\n     end-if\n     if       SL-Comp-Pick\n              write Print-Record from line-Company-Details2 after 1\n              write Print-Record from line-Company-Details3 after 1\n              write Print-Record from line-Company-Details4 after 1\n              write Print-Record from line-Company-Details5 after 1\n              write Print-Record from line-Company-Details6 after 1\n              write Print-Record from line-Company-Details7 after 1\n              if    VAT-Reg-Number (1:4) not = spaces\n                    write Print-Record from line-Company-Details8 after 1\n              end-if\n              write print-record from line-0-a after 1\n     end-if\n     if       not SL-Comp-Pick\n      if      first-time = \"Y\"\n              write    print-record  from  line-0-a after 4\n      else\n              move spaces to print-record\n              write print-record after page\n              write print-record from line-0-a after 4\n      end-if\n     end-if\n*>\n     write    print-record  from  line-0-c after 2.\n     write    print-record  from  line-0-d after 1.\n     write    print-record  from  line-0-e after 2.\n     write    print-record  from  line-1 after 1.\n     write    print-record  from  line-2 after 1.\n     write    print-record  from  line-3 after 1.\n     write    print-record  from  line-4 after 1.\n     write    print-record  from  line-5 after 1.\n     write    print-record  from  line-6 after 1.\n     write    print-record  from  line-7 after 2.\n     write    print-record  from  line-7B after 1.\n     move     \"N\"  to  first-time.\n*>\n main-exit.   exit section.\n*>\n zz060-Convert-Date        section.\n*>********************************\n*>\n*>  Converts date in binary to UK/USA/Intl date format\n*>****************************************************\n*> Input:   u-bin\n*> output:  ws-date as uk/US/Inlt date format\n*>          u-date & ws-Date = spaces if invalid date\n*>\n     perform  maps04.\n     if       u-date = spaces\n              move spaces to ws-Date\n              go to zz060-Exit.\n     move     u-date to ws-date.\n*>\n     if       Date-Form = zero\n              move 1 to Date-Form.\n     if       Date-UK\n              go to zz060-Exit.\n     if       Date-USA                *> swap month and days\n              move ws-days to ws-swap\n              move ws-month to ws-days\n              move ws-swap to ws-month\n              go to zz060-Exit.\n*>\n*> So its International date format\n*>\n     move     \"ccyy/mm/dd\" to ws-date.  *> swap Intl to UK form\n     move     u-date (7:4) to ws-Intl-Year.\n     move     u-date (4:2) to ws-Intl-Month.\n     move     u-date (1:2) to ws-Intl-Days.\n*>\n zz060-Exit.\n     exit     section.\n*>\n zz070-Convert-Date        section.\n*>********************************\n*>\n*>  Converts date in to-day to UK/USA/Intl date format\n*>****************************************************\n*> Input:   to-day\n*> output:  ws-date as uk/US/Inlt date format\n*>\n     move     to-day to ws-date.\n*>\n     if       Date-Form = zero\n              move 1 to Date-Form.\n     if       Date-UK\n              go to zz070-Exit.\n     if       Date-USA                *> swap month and days\n              move ws-days to ws-swap\n              move ws-month to ws-days\n              move ws-swap to ws-month\n              go to zz070-Exit.\n*>\n*> So its International date format\n*>\n     move     \"ccyy/mm/dd\" to ws-date.  *> swap Intl to UK form\n     move     to-day (7:4) to ws-Intl-Year.\n     move     to-day (4:2) to ws-Intl-Month.\n     move     to-day (1:2) to ws-Intl-Days.\n*>\n zz070-Exit.\n     exit     section.\n*>\n zz090-Setup-Company-Details section.\n*>**********************************\n*>\n*>  First get no. of chars in each field\n*>\n     if       not SL-Comp-Pick\t\t\t*> test if company heads are wanted\n              exit section.\n*>\n     move     spaces to Line-Company-Details.\n *>    perform  varying h1 from 32 by -1 until h1 = 1 or     usera (h1:1) not = space\n *>             continue\n *>    end-perform\n *>    perform  varying h2 from 24 by -1 until h2 = 1 or Address-1 (h2:1) not = space\n *>             continue\n *>    end-perform\n *>    perform  varying h3 from 24 by -1 until h3 = 1 or Address-2 (h3:1) not = space\n *>             continue\n *>    end-perform\n *>    perform  varying h4 from 24 by -1 until h4 = 1 or Address-3 (h4:1) not = space\n *>             continue\n *>    end-perform\n *>    perform  varying h5 from 24 by -1 until h5 = 1 or Address-4 (h5:1) not = space\n *>             continue\n *>    end-perform\n *>    perform  varying h6 from 12 by -1 until h6 = 1 or Post-Code (h6:1) not = space\n *>             continue\n *>    end-perform\n *>    perform  varying h7 from 24 by -1 until h7 = 1 or Country   (h7:1) not = space\n *>             continue\n *>    end-perform\n*>\n *>    divide   91 by 2 giving h98.      *> size of print lines here = 45, yes I know its rounded down\n*>\n *>    divide   h1 by 2 giving h99.\n *>    add      1  to h99.\n *>    move     usera     (1:h1) to line-Company-Details1 (h98 - h99:h1).\n *>    divide   h2 by 2 giving h99.\n *>    add      1  to h99.\n *>    move     Address-1 (1:h2) to line-Company-Details2 (h98 - h99:h2).\n *>    divide   h3 by 2 giving h99.\n *>    add      1  to h99.\n *>    move     Address-2 (1:h3) to line-Company-Details3 (h98 - h99:h3).\n *>    divide   h4 by 2 giving h99.\n *>    add      1  to h99.\n *>    move     Address-3 (1:h4) to line-Company-Details4 (h98 - h99:h4).\n *>    divide   h5 by 2 giving h99.\n *>    add      1  to h99.\n *>    move     Address-4 (1:h5) to line-Company-Details5 (h98 - h99:h5).\n *>    divide   h6 by 2 giving h99.\n *>    add      1  to h99.\n *>    move     Post-Code (1:h6) to line-Company-Details6 (h98 - h99:h6).\n *>    divide   h7 by 2 giving h99.\n *>    add      1  to h99.\n *>    move     Country   (1:h7) to line-Company-Details7 (h98 - h99:h7).\n*>\n*>  Use C$JUSTIFY instead of all this coding.\n*>\n     move     Usera     to Line-Company-Details1.\n     move     Address-1 to line-Company-Details2.\n     move     Address-2 to line-Company-Details3.\n     move     Address-3 to line-Company-Details4.\n     move     Address-4 to line-Company-Details5.\n     move     Post-Code to line-Company-Details6.\n     move     Country   to line-Company-Details7.\n*> Backflow - simple !\n     if       Line-Company-Details4 (1:20) = spaces\n              move Line-Company-Details5 to Line-Company-Details4\n              move Line-Company-Details6 to Line-Company-Details5\n              move Line-Company-Details7 to Line-Company-Details6\n              move spaces to Line-Company-Details7.\n     if       Line-Company-Details5 (1:20) = spaces\n              move Line-Company-Details6 to Line-Company-Details5\n              move Line-Company-Details7 to Line-Company-Details6\n              move spaces to Line-Company-Details7.\n     if       Line-Company-Details6 (1:20) = spaces\n              move Line-Company-Details7 to Line-Company-Details6\n              move spaces to Line-Company-Details7.\n*>\n     call     \"C$JUSTIFY\" using Line-Company-Details1 \"C\".\n     call     \"C$JUSTIFY\" using Line-Company-Details2 \"C\".\n     call     \"C$JUSTIFY\" using Line-Company-Details3 \"C\".\n     call     \"C$JUSTIFY\" using Line-Company-Details4 \"C\".\n     call     \"C$JUSTIFY\" using Line-Company-Details5 \"C\".\n     if       Line-Company-Details6 (1:10) not = spaces\n              call     \"C$JUSTIFY\" using Line-Company-Details6 \"C\".\n     if       Line-Company-Details7 (1:10) not = spaces\n              call     \"C$JUSTIFY\" using Line-Company-Details7 \"C\".\n*>\n*> Vat detail line - Legally this does not need to be produced for packing notes\n*>  so you could comment this out by using \"*>\" at start of each of these 6 lines\n*> CHANGE  chars \"GB\" to match your country if needed.\n*>\n     if       VAT-Reg-Number (1:4) not = spaces\n              string   \"VAT Number: GB\"   delimited by size   *> Chg 'GB' for your country code if needed\n                       VAT-Reg-Number     delimited by size\n                        into line-Company-Details8\n              end-string\n              CALL \"C$JUSTIFY\" using line-Company-Details8, \"C\".\n*>\n zz090-Exit.  Exit Section.\n*>*********\n*>\n maps04       section.\n*>*******************\n*>\n     call     \"maps04\"  using  maps03-ws.\n*>\n maps04-exit.\n     exit     section.\n*>\n copy \"Proc-ACAS-FH-Calls.cob\".\n*>",
        "line": 836
      }
    ],
    "evaluates": [],
    "validations": []
  },
  "complexity": {
    "mccabe": 17,
    "cognitive": 5,
    "halstead": {
      "uniqueOperators": 2,
      "uniqueOperands": 89,
      "totalOperators": 70,
      "totalOperands": 138,
      "vocabulary": 91,
      "length": 208,
      "volume": 1353.6212851613288
    }
  },
  "quality": {
    "gotos": [],
    "deadCode": [],
    "missingErrorHandlers": []
  },
  "sql": {
    "hasSQL": false,
    "statements": []
  },
  "cics": {
    "hasCICS": false,
    "statements": []
  }
}
