{
  "filePath": "/Users/MartinGonella/Desktop/Demos/ACAS/purchase/pl940.cbl",
  "fileName": "pl940.cbl",
  "timestamp": "2025-09-15T16:25:47.634Z",
  "programId": "pl940",
  "parserUsed": "GnuCOBOL + Regex",
  "parseConfidence": 0,
  "validationStatus": "ERROR",
  "gnuCobolValidation": {
    "success": true,
    "errors": [],
    "warnings": []
  },
  "parseErrors": [
    "Cannot read properties of undefined (reading 'total')"
  ],
  "parseWarnings": [],
  "divisions": {
    "identification": true,
    "environment": true,
    "data": true,
    "procedure": true
  },
  "structure": {
    "sections": [
      {
        "name": "input-output",
        "line": 120
      },
      {
        "name": "file",
        "line": 134
      },
      {
        "name": "working-storage",
        "line": 143
      },
      {
        "name": "linkage",
        "line": 366
      },
      {
        "name": "init",
        "line": 381
      },
      {
        "name": "zz050-Validate-Date",
        "line": 544
      },
      {
        "name": "exit",
        "line": 577
      },
      {
        "name": "zz060-Convert-Date",
        "line": 579
      },
      {
        "name": "exit",
        "line": 612
      },
      {
        "name": "zz070-Convert-Date",
        "line": 614
      },
      {
        "name": "exit",
        "line": 642
      },
      {
        "name": "maps04",
        "line": 644
      },
      {
        "name": "exit",
        "line": 650
      }
    ],
    "paragraphs": [
      {
        "name": "file-control",
        "line": 123
      },
      {
        "name": "file-defs",
        "line": 378
      },
      {
        "name": "goback",
        "line": 395
      },
      {
        "name": "get-date",
        "line": 409
      },
      {
        "name": "read-purchase",
        "line": 418
      },
      {
        "name": "main-end",
        "line": 536
      },
      {
        "name": "zz050-test-date",
        "line": 571
      },
      {
        "name": "zz050-exit",
        "line": 576
      },
      {
        "name": "zz060-Exit",
        "line": 611
      },
      {
        "name": "zz070-Exit",
        "line": 641
      },
      {
        "name": "maps04-exit",
        "line": 649
      }
    ],
    "entryPoints": []
  },
  "dependencies": {
    "calls": [
      {
        "target": "maps04",
        "line": 647,
        "type": "DYNAMIC",
        "using": [
          "maps03-ws"
        ]
      }
    ],
    "copies": [
      {
        "name": "of",
        "line": 110,
        "replacing": null
      },
      {
        "name": "envdiv",
        "line": 119,
        "replacing": null
      },
      {
        "name": "selpl",
        "line": 129,
        "replacing": null
      },
      {
        "name": "selpay",
        "line": 130,
        "replacing": null
      },
      {
        "name": "fdpl",
        "line": 141,
        "replacing": null
      },
      {
        "name": "fdpay",
        "line": 142,
        "replacing": null
      },
      {
        "name": "wsfnctn",
        "line": 156,
        "replacing": null
      },
      {
        "name": "wsoi",
        "line": 157,
        "replacing": null
      },
      {
        "name": "plwsoi",
        "line": 158,
        "replacing": null
      },
      {
        "name": "wspl",
        "line": 162,
        "replacing": null
      },
      {
        "name": "plwspay",
        "line": 163,
        "replacing": null
      },
      {
        "name": "Test-Data-Flags",
        "line": 191,
        "replacing": null
      },
      {
        "name": "wsmaps03",
        "line": 222,
        "replacing": null
      },
      {
        "name": "wscall",
        "line": 369,
        "replacing": null
      },
      {
        "name": "wssystem",
        "line": 370,
        "replacing": null
      },
      {
        "name": "wsnames",
        "line": 371,
        "replacing": null
      },
      {
        "name": "Proc-ACAS-FH-Calls",
        "line": 652,
        "replacing": null
      }
    ],
    "performs": [
      {
        "target": "zz070-Convert-Date",
        "thru": null,
        "line": 384
      },
      {
        "target": "Purch-Open-Input",
        "thru": null,
        "line": 388
      },
      {
        "target": "Payments-Open",
        "thru": null,
        "line": 389
      },
      {
        "target": "Purch-Close",
        "thru": null,
        "line": 393
      },
      {
        "target": "Payments-Close",
        "thru": null,
        "line": 394
      },
      {
        "target": "varying",
        "thru": null,
        "line": 397
      },
      {
        "target": "*>",
        "thru": null,
        "line": 402
      },
      {
        "target": "zz050-Validate-Date",
        "thru": null,
        "line": 413
      },
      {
        "target": "Payments-Read-Next",
        "thru": null,
        "line": 419
      },
      {
        "target": "Purch-Read-Indexed",
        "thru": null,
        "line": 427
      },
      {
        "target": "varying",
        "thru": null,
        "line": 435
      },
      {
        "target": "*>",
        "thru": null,
        "line": 438
      },
      {
        "target": "varying",
        "thru": null,
        "line": 509
      },
      {
        "target": "*>",
        "thru": null,
        "line": 518
      },
      {
        "target": "Payments-Rewrite",
        "thru": null,
        "line": 530
      },
      {
        "target": "Purch-Close",
        "thru": null,
        "line": 540
      },
      {
        "target": "Payments-Close",
        "thru": null,
        "line": 541
      },
      {
        "target": "maps04",
        "thru": null,
        "line": 574
      },
      {
        "target": "maps04",
        "thru": null,
        "line": 588
      }
    ]
  },
  "dataFlow": {
    "files": [],
    "moves": [
      {
        "from": "1",
        "to": "File-Key-No",
        "line": 386
      },
      {
        "from": "\",\"",
        "to": "c-inv-filler (z) c-folio-fil (z)\n              if  z < 6\n                  move \",\" to c-adr-filler (z)\n              end-if\n     end-perform\n*>\n     display  \"First Cheque number - [        ]\" at 0611   with foreground-color 2",
        "line": 398
      },
      {
        "from": "ws-date",
        "to": "ws-test-date",
        "line": 407
      },
      {
        "from": "zero",
        "to": "u-bin",
        "line": 412
      },
      {
        "from": "ws-test-date",
        "to": "c-date",
        "line": 416
      },
      {
        "from": "pay-supl-key",
        "to": "WS-Purch-Key  c-account",
        "line": 426
      },
      {
        "from": "PL902",
        "to": "purch-name purch-address",
        "line": 429
      },
      {
        "from": "purch-name",
        "to": "c-name",
        "line": 431
      },
      {
        "from": "spaces",
        "to": "c-address (1) c-address (2)\n                        c-address (3) c-address (4) c-address (5)",
        "line": 432
      },
      {
        "from": "1",
        "to": "z",
        "line": 434
      },
      {
        "from": "pay-gross",
        "to": "c-gross  test-amount",
        "line": 442
      },
      {
        "from": "spaces",
        "to": "c-words-1  c-words-2",
        "line": 443
      },
      {
        "from": "1",
        "to": "z",
        "line": 444
      },
      {
        "from": "zero",
        "to": "pound-flag",
        "line": 445
      },
      {
        "from": "1",
        "to": "pound-flag",
        "line": 471
      },
      {
        "from": "1",
        "to": "z",
        "line": 477
      },
      {
        "from": "1",
        "to": "pound-flag",
        "line": 490
      },
      {
        "from": "\",\"",
        "to": "c-last (z)\n              else\n                   move  \" \" to c-last (z)\n              end-if\n     end-perform\n*>\n     if       pay-sortcode = zero\n              move cheque-nos to c-cheque pay-cheque\n              add 1 to cheque-nos\n     else\n              move zero     to pay-cheque\n              move \"BACS\"   to c-cheque-x\n     end-if\n     write cheque-record from cheque",
        "line": 514
      },
      {
        "from": "u-bin",
        "to": "pay-date",
        "line": 529
      },
      {
        "from": "ws-test-date",
        "to": "ws-date",
        "line": 553
      },
      {
        "from": "1",
        "to": "Date-Form",
        "line": 555
      },
      {
        "from": "ws-days",
        "to": "ws-swap\n              move ws-month to ws-days\n              move ws-swap to ws-month\n              go to zz050-test-date",
        "line": 559
      },
      {
        "from": "\"dd/mm/ccyy\"",
        "to": "ws-date",
        "line": 566
      },
      {
        "from": "ws-date",
        "to": "u-date",
        "line": 572
      },
      {
        "from": "zero",
        "to": "u-bin",
        "line": 573
      },
      {
        "from": "spaces",
        "to": "ws-Date\n              go to zz060-Exit",
        "line": 590
      },
      {
        "from": "u-date",
        "to": "ws-date",
        "line": 592
      },
      {
        "from": "1",
        "to": "Date-Form",
        "line": 595
      },
      {
        "from": "ws-days",
        "to": "ws-swap\n              move ws-month to ws-days\n              move ws-swap to ws-month\n              go to zz060-Exit",
        "line": 599
      },
      {
        "from": "\"ccyy/mm/dd\"",
        "to": "ws-date",
        "line": 606
      },
      {
        "from": "to-day",
        "to": "ws-date",
        "line": 622
      },
      {
        "from": "1",
        "to": "Date-Form",
        "line": 625
      },
      {
        "from": "ws-days",
        "to": "ws-swap\n              move ws-month to ws-days\n              move ws-swap to ws-month\n              go to zz070-Exit",
        "line": 629
      },
      {
        "from": "\"ccyy/mm/dd\"",
        "to": "ws-date",
        "line": 636
      }
    ],
    "computes": [
      {
        "target": "test-amount",
        "expression": "test-amount - (1000000 * y)",
        "line": 448
      },
      {
        "target": "test-amount",
        "expression": "test-amount - (100000 * y)",
        "line": 456
      },
      {
        "target": "test-amount",
        "expression": "test-amount - (1000 * y)",
        "line": 464
      },
      {
        "target": "test-amount",
        "expression": "test-amount - (100 * y)",
        "line": 476
      },
      {
        "target": "test-amount",
        "expression": "test-amount - y",
        "line": 485
      }
    ]
  },
  "businessLogic": {
    "conditions": [
      {
        "type": "IF",
        "condition": "not ' Pounds ' and ' Pence '                    *\n*>                                                      *\n*> Because of the wide range of possiblities no module  *\n*>    is supplied, however we can help in creating one  *\n*> for your specific requirements.                      *\n*> As most users no longer use cheques, they use a      *\n*> modified version to produce only payment data for    *\n*> their bankers to a given bank format.                *\n*>                                                      *\n*> The system holds suppliers bank information for this *\n*> purpose.   SEE pl960 and pl950.                      *\n*>                                                      *\n*> See manual for additional information                *\n*>                                                      *\n*>  Program updates pay-rec pay-dat with payment date   *\n*>   obtained at SOJ.(Start of Job)                     *\n*>                                                      *\n*>*******************************************************\n*>\n identification          division.\n*>===============================\n*>\n*>**\n      program-id.         pl940.\n*>**\n*>    Author.             V B Coen FBCS, FIDM, FIDPM, 18/04/84\n*>                        For Applewood Computers.\n*>**\n*>    Security.           Copyright (C) 1976-2025 & later, Vincent Bryan Coen.\n*>                        Distributed under the GNU General Public License.\n*>                        See the file COPYING for details.\n*>**\n*>    Remarks.            Cheque File Writer.\n*>**\n*>    Version.            See Prog-Name In Ws.\n*>**\n*>    Error messages used.\n*>                        PL902\n*>                        PL903\n*>**\n*>    Called Modules.     Maps04.\n*>                        acas022\n*>                         purchMT\n*>                        acas032\n*>                         paymentsMT\n*>**\n*> Changes:\n*> 22/03/09 vbc - 3.0.00 Migration to Open Cobol v3.00.00\n*> 15/09/10 vbc -        Changed to free src format.\n*> 16/12/11 vbc -    .04 Error msgs to SLnnn.Support for dates other than UK\n*>                       Support for path+filenames.\n*>                       Updated version to 3.01.nn\n*> 24/10/16 vbc - .      ALL programs now using wsnames.cob in copybooks.\n*> 07/01/17 vbc -    .05 Support for different names for currency held as\n*>                       literals in working-storage with the names\n*>                       WS-Currency-Major & WS-Currency-Minor.\n*>                       Yes, this can be obtained from the Locale settings\n*>                       but not every one has LC_MONETARY set up correctly\n*>                       so THIS source needs to be changed if not using Pounds.\n*>                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n*> 11/01/18 vbc - 3.2.06 Updated to v3.02 using RDB.\n*> 16/04/24 vbc          Copyright notice update superseding all previous notices.\n*> 29/08/25 vbc      .07 Add test for FS-Reply =  21 to include = 23 as well.\n*>\n*>*************************************************************************\n*>\n*>  From copyright.cob.\n*>\n*> Copyright Notice.\n*> ****************\n*>\n*> This notice supersedes all prior copyright notices & was updated 2024-04-16.\n*>\n*> These files and programs are part of the Applewood Computers Accounting\n*> System and is Copyright (c) Vincent B Coen. 1976-2025 and later.\n*>\n*> This program is now free software; you can redistribute it and/or modify it\n*> under the terms listed here and of the GNU General Public License as\n*> published by the Free Software Foundation; version 3 and later as revised\n*> for PERSONAL USAGE ONLY and that includes for use within a business but\n*> EXCLUDES repackaging or for Resale, Rental or Hire in ANY way.\n*>\n*> Persons interested in repackaging, redevelopment for the purpose of resale or\n*> distribution in a rental or hire mode must get in touch with the copyright\n*> holder with your commercial plans and proposals.\n*>\n*> ACAS is distributed in the hope that it will be useful, but WITHOUT\n*> ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n*> FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n*> for more details. If it breaks, you own both pieces but I will endeavour\n*> to fix it, providing you tell me about the problem.\n*>\n*> You should have received a copy of the GNU General Public License along\n*> with ACAS; see the file COPYING.  If not, write to the Free Software\n*> Foundation, 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA.\n*>\n*>*************************************************************************\n*>\n environment             division.\n*>===============================\n*>\n copy \"envdiv.cob\".\n input-output            section.\n*>------------------------------\n*>\n file-control.\n*>-----------\n*>\n     select  cheque-file   assign file-33\n                           organization  line sequential.\n*>\n*> copy \"selpl.cob\".\n*> copy \"selpay.cob\".\n data                    division.\n*>===============================\n*>\n file section.\n*>-----------\n*>\n fd  cheque-file.\n*>\n 01  cheque-record       pic x(645).\n*>\n*> copy \"fdpl.cob\".\n*> copy \"fdpay.cob\".\n working-storage section.\n*>----------------------\n 77  prog-name           pic x(15)       value \"PL940 (3.02.07)\".\n 77  test-amount         pic 9(7)v99.\n 77  asterix-fill        pic x(64)       value all \"*\".\n*>\n*>  Change next 2 line to your currency names, i.e., pounds, dollars, Euros etc.\n*>                                and for fractions Pence, Cents etc.\n*>     NOTE that there is a space before and after the word.\n*>\n 77  WS-Currency-Major   pic x(8)        value \" Pounds \".\n 77  WS-Currency-Minor   pic x(7)        value \" Pence \".\n*>\n copy \"wsfnctn.cob\".\n*> copy \"wsoi.cob\".\n copy \"plwsoi.cob\".\n*>\n*> Ex FDs\n*>\n copy \"wspl.cob\".     *> WS-Purch-Record.\n copy \"plwspay.cob\".  *> Pay-Record.\n 01  WS-Pay-Record  redefines Pay-Record.\n     03  filler     pic x(238).\n*>\n*> REMARK OUT ANY IN USE\n*>\n 01  Dummies-4-Unused-ACAS-FH-Calls.      *> Call blk at zz080-ACAS-Calls\n     03  Default-Record         pic x.\n     03  Final-Record           pic x.\n     03  System-Record-4        pic x.\n     03  WS-Ledger-Record       pic x.\n     03  WS-Posting-Record      pic x.\n     03  WS-Batch-Record        pic x.\n     03  WS-IRS-Posting-Record  pic x.\n     03  WS-Stock-Audit-Record  pic x.\n     03  WS-Stock-Record        pic x.\n     03  WS-Sales-Record        pic x.\n     03  WS-Value-Record        pic x.\n     03  WS-Delivery-Record     pic x.\n     03  WS-Analysis-Record     pic x.\n     03  WS-Del-Inv-Nos-Record  pic x.\n*>     03  WS-Purch-Record        pic x.\n*>     03  WS-Pay-Record          pic x.\n     03  WS-Invoice-Record      pic x.\n     03  WS-OTM3-Record         pic x.\n     03  WS-PInvoice-Record     pic x.\n     03  WS-OTM5-Record         pic x.\n*>\n copy \"Test-Data-Flags.cob\".  *> set sw-testing to zero to stop logging.\n*>\n 01  ws-data.\n     03  y               pic 99.\n     03  z               pic 99.\n     03  cheque-nos      pic 9(8).\n     03  pound-flag      pic 9           value zero.\n*>\n 01  ws-Test-Date            pic x(10).\n 01  ws-date-formats.\n     03  ws-swap             pic xx.\n     03  ws-Conv-Date        pic x(10).\n     03  ws-date             pic x(10).\n     03  ws-UK redefines ws-date.\n         05  ws-days         pic xx.\n         05  filler          pic x.\n         05  ws-month        pic xx.\n         05  filler          pic x.\n         05  ws-year         pic x(4).\n     03  ws-USA redefines ws-date.\n         05  ws-usa-month    pic xx.\n         05  filler          pic x.\n         05  ws-usa-days     pic xx.\n         05  filler          pic x.\n         05  filler          pic x(4).\n     03  ws-Intl redefines ws-date.\n         05  ws-intl-year    pic x(4).\n         05  filler          pic x.\n         05  ws-intl-month   pic xx.\n         05  filler          pic x.\n         05  ws-intl-days    pic xx.\n copy \"wsmaps03.cob\".\n*>\n 01  Error-Messages.\n*> System Wide\n*> Module specific\n     03  PL902          pic x(18) value \"PL902 Missing data\".\n     03  PL903          pic x(36) value \"PL903 No data to process. Hit return\".\n*>\n 01  cheque.    *> This is the cheque/pay file that can be passed to a word/writer program to\n *>                print the cheques to preformatted forms or as a BACS type document that\n *>                is passed to your bankers and if used the file layout below will\n *>                require modification for payees sort and account info\n*>\n*>  rec size 645 bytes\n*>\n     03  c-account        pic x(7).\n     03  filler           pic x           value \",\".\n     03  c-name           pic x(30).\n     03  filler           pic x           value \",\".\n     03  filler                          occurs 5.\n         05  c-address    pic x(32).\n         05  c-adr-filler pic x.\n     03  c-words-1        pic x(64).\n     03  filler           pic x           value \",\".\n     03  c-words-2        pic x(64).\n     03  filler           pic x           value \",\".\n     03  c-gross          pic z(6)9.99.\n     03  filler           pic x           value \",\".\n     03  c-cheque-x.\n         05  c-cheque     pic z(8)9.\n     03  filler           pic x           value \",\".\n     03  c-date           pic x(10).\n     03  filler           pic x           value \",\".\n     03  filler                          occurs 9.\n         05  c-inv        pic x(10).\n         05  c-inv-filler pic x.\n         05  c-folio      pic z(7)9       blank when zero.\n         05  c-folio-fil  pic x.\n         05  c-value      pic z(6)9.99    blank when zero.\n         05  c-last       pic x.\n*>\n 01  word-filler.\n     03  filler          pic x(15) value \"One*\".\n     03  filler          pic x(15) value \"Two*\".\n     03  filler          pic x(15) value \"Three*\".\n     03  filler          pic x(15) value \"Four*\".\n     03  filler          pic x(15) value \"Five*\".\n     03  filler          pic x(15) value \"Six*\".\n     03  filler          pic x(15) value \"Seven*\".\n     03  filler          pic x(15) value \"Eight*\".\n     03  filler          pic x(15) value \"Nine*\".\n     03  filler          pic x(15) value \"Ten*\".\n     03  filler          pic x(15) value \"Eleven*\".\n     03  filler          pic x(15) value \"Twelve*\".\n     03  filler          pic x(15) value \"Thirteen*\".\n     03  filler          pic x(15) value \"Fourteen*\".\n     03  filler          pic x(15) value \"Fifteen*\".\n     03  filler          pic x(15) value \"Sixteen*\".\n     03  filler          pic x(15) value \"Seventeen*\".\n     03  filler          pic x(15) value \"Eighteen*\".\n     03  filler          pic x(15) value \"Nineteen*\".\n     03  filler          pic x(15) value \"Twenty*\".\n     03  filler          pic x(15) value \"Twenty-One*\".\n     03  filler          pic x(15) value \"Twenty-Two*\".\n     03  filler          pic x(15) value \"Twenty-Three*\".\n     03  filler          pic x(15) value \"Twenty-Four*\".\n     03  filler          pic x(15) value \"Twenty-Five*\".\n     03  filler          pic x(15) value \"Twenty-Six*\".\n     03  filler          pic x(15) value \"Twenty-Seven*\".\n     03  filler          pic x(15) value \"Twenty-Eight*\".\n     03  filler          pic x(15) value \"Twenty-Nine*\".\n     03  filler          pic x(15) value \"Thirty*\".\n     03  filler          pic x(15) value \"Thirty-One*\".\n     03  filler          pic x(15) value \"Thirty-Two*\".\n     03  filler          pic x(15) value \"Thirty-Three*\".\n     03  filler          pic x(15) value \"Thirty-Four*\".\n     03  filler          pic x(15) value \"Thirty-Five*\".\n     03  filler          pic x(15) value \"Thirty-Six*\".\n     03  filler          pic x(15) value \"Thirty-Seven*\".\n     03  filler          pic x(15) value \"Thirty-Eight*\".\n     03  filler          pic x(15) value \"Thirty-Nine*\".\n     03  filler          pic x(15) value \"Forty*\".\n     03  filler          pic x(15) value \"Forty-One*\".\n     03  filler          pic x(15) value \"Forty-Two*\".\n     03  filler          pic x(15) value \"Forty-Three*\".\n     03  filler          pic x(15) value \"Forty-Four*\".\n     03  filler          pic x(15) value \"Forty-Five*\".\n     03  filler          pic x(15) value \"Forty-Six*\".\n     03  filler          pic x(15) value \"Forty-Seven*\".\n     03  filler          pic x(15) value \"Forty-Eight*\".\n     03  filler          pic x(15) value \"Forty-Nine*\".\n     03  filler          pic x(15) value \"Fifty*\".\n     03  filler          pic x(15) value \"Fifty-One*\".\n     03  filler          pic x(15) value \"Fifty-Two*\".\n     03  filler          pic x(15) value \"Fifty-Three*\".\n     03  filler          pic x(15) value \"Fifty-Four*\".\n     03  filler          pic x(15) value \"Fifty-Five*\".\n     03  filler          pic x(15) value \"Fifty-Six*\".\n     03  filler          pic x(15) value \"Fifty-Seven*\".\n     03  filler          pic x(15) value \"Fifty-Eight*\".\n     03  filler          pic x(15) value \"Fifty-Nine*\".\n     03  filler          pic x(15) value \"Sixty*\".\n     03  filler          pic x(15) value \"Sixty-One*\".\n     03  filler          pic x(15) value \"Sixty-Two*\".\n     03  filler          pic x(15) value \"Sixty-Three*\".\n     03  filler          pic x(15) value \"Sixty-Four*\".\n     03  filler          pic x(15) value \"Sixty-Five*\".\n     03  filler          pic x(15) value \"Sixty-Six*\".\n     03  filler          pic x(15) value \"Sixty-Seven*\".\n     03  filler          pic x(15) value \"Sixty-Eight*\".\n     03  filler          pic x(15) value \"Sixty-Nine*\".\n     03  filler          pic x(15) value \"Seventy*\".\n     03  filler          pic x(15) value \"Seventy-One*\".\n     03  filler          pic x(15) value \"Seventy-Two*\".\n     03  filler          pic x(15) value \"Seventy-Three*\".\n     03  filler          pic x(15) value \"Seventy-Four*\".\n     03  filler          pic x(15) value \"Seventy-Five*\".\n     03  filler          pic x(15) value \"Seventy-Six*\".\n     03  filler          pic x(15) value \"Seventy-Seven*\".\n     03  filler          pic x(15) value \"Seventy-Eight*\".\n     03  filler          pic x(15) value \"Seventy-Nine*\".\n     03  filler          pic x(15) value \"Eighty*\".\n     03  filler          pic x(15) value \"Eighty-One*\".\n     03  filler          pic x(15) value \"Eighty-Two*\".\n     03  filler          pic x(15) value \"Eighty-Three*\".\n     03  filler          pic x(15) value \"Eighty-Four*\".\n     03  filler          pic x(15) value \"Eighty-Five*\".\n     03  filler          pic x(15) value \"Eighty-Six*\".\n     03  filler          pic x(15) value \"Eighty-Seven*\".\n     03  filler          pic x(15) value \"Eighty-Eight*\".\n     03  filler          pic x(15) value \"Eighty-Nine*\".\n     03  filler          pic x(15) value \"Ninety*\".\n     03  filler          pic x(15) value \"Ninety-One*\".\n     03  filler          pic x(15) value \"Ninety-Two*\".\n     03  filler          pic x(15) value \"Ninety-Three*\".\n     03  filler          pic x(15) value \"Ninety-Four*\".\n     03  filler          pic x(15) value \"Ninety-Five*\".\n     03  filler          pic x(15) value \"Ninety-Six*\".\n     03  filler          pic x(15) value \"Ninety-Seven*\".\n     03  filler          pic x(15) value \"Ninety-Eight*\".\n     03  filler          pic x(15) value \"Ninety-Nine*\".\n 01  filler  redefines  word-filler.\n     03  wordn           pic x(15)       occurs  99.\n*>\n linkage section.\n*>==============\n*>\n copy \"wscall.cob\".\n copy \"wssystem.cob\".\n copy \"wsnames.cob\".\n*>\n 01  to-day              pic x(10).\n*>\n procedure  division using ws-calling-data\n                           system-record\n                           to-day\n                           file-defs.\n*>========================================\n*>\n init section.\n     display  prog-name at 0101 with erase eos foreground-color 2.\n     display  \"Cheque Print File Generation\" at 0128 with foreground-color 2.\n     perform  zz070-Convert-Date.\n     display  ws-date at 0171 with foreground-color 2.\n     move     1 to File-Key-No.  *> Good for all files/tables used here.\n*>\n     perform  Purch-Open-Input.    *>  open input purchase-file.\n     perform  Payments-Open.       *>  open i-o   pay-file.\n     if       fs-reply not = zero\n              display PL903 at 0401 with foreground-color 2\n              accept s1 at 0438\n              perform  Purch-Close *> close purchase-file pay-file\n              perform  Payments-Close\n              goback.\n     open     output cheque-file.\n     perform  varying z from 1 by 1 until z > 9\n              move \",\" to c-inv-filler (z) c-folio-fil (z)\n              if  z < 6\n                  move \",\" to c-adr-filler (z)\n              end-if\n     end-perform\n*>\n     display  \"First Cheque number - [        ]\" at 0611   with foreground-color 2.\n     accept   cheque-nos at 0634 with foreground-color 3.\n     display  \"Payment date        - [          ]\" at 0811 with foreground-color 2.\n     move     ws-date to ws-test-date.\n*>\n get-date.\n     display  ws-test-date at 0834 with foreground-color 3.\n     accept   ws-test-date at 0834 with foreground-color 3 update.\n     move     zero  to  u-bin.\n     perform  zz050-Validate-Date.\n     if       u-bin = zero\n              go to  get-date.\n     move     ws-test-date to c-date.\n*>\n read-purchase.\n     perform  Payments-Read-Next.  *> read pay-file  next  record at end\n     if       fs-reply = 10\n              go to  main-end.\n*>\n     if       pay-gross  <  .01\n              go to  read-purchase.\n*>\n     move     pay-supl-key  to  WS-Purch-Key  c-account.\n     perform  Purch-Read-Indexed.  *> read purchase-file invalid key\n     if       fs-reply = 21 or = 23\n              move PL902 to purch-name purch-address.\n*>\n     move     purch-name to  c-name.\n     move     spaces to c-address (1) c-address (2)\n                        c-address (3) c-address (4) c-address (5).\n     move     1  to  z.\n     perform  varying y from 1 by 1 until y > 5\n              unstring purch-address delimited by pl-delim into c-address (y)  pointer  z\n              end-unstring\n     end-perform\n*>\n*> get words.\n*>\n     move     pay-gross  to  c-gross  test-amount.\n     move     spaces  to  c-words-1  c-words-2.\n     move     1  to  z.\n     move     zero to pound-flag.\n*>\n     divide   test-amount  by  1000000  giving  y.\n     compute  test-amount  =  test-amount - (1000000 * y).\n*>\n     if       y  >  0\n              string  wordn (y)  delimited  by  \"*\"   into  c-words-1  with  pointer  z.\n     if       y  >  0\n              string  \" Million \"  delimited  by  \"*\" into  c-words-1  with  pointer  z.\n*>\n     divide   test-amount  by  100000  giving  y.\n     compute  test-amount  =  test-amount - (100000 * y).\n*>\n     if       y  >  0\n              string  wordn (y)  delimited  by  \"*\"   into  c-words-1 with  pointer  z.\n     if       y  >  0\n              string  \" Hundred and \" delimited by \"*\" into c-words-1 with  pointer  z.\n*>\n     divide   test-amount  by  1000  giving  y.\n     compute  test-amount  =  test-amount - (1000 * y).\n*>\n     if       y  >  0\n              string  wordn (y)  delimited  by  \"*\"   into  c-words-1 with  pointer  z.\n     if       y  >  0\n              string  \" Thousand \" delimited by \"*\"   into  c-words-1 with  pointer  z.\n     if       z > 1\n              move 1 to pound-flag.\n*>\n     string   asterix-fill  delimited  by  size into  c-words-1 with  pointer  z.\n*>\n     divide   test-amount  by  100  giving  y.\n     compute  test-amount  =  test-amount - (100 * y).\n     move     1  to  z.\n*>\n     if       y  >  0\n              string  wordn (y)  delimited  by  \"*\" into  c-words-2  with  pointer  z.\n     if       y  >  0\n              string  \" Hundred and \"  delimited  by  \"*\" into  c-words-2  with  pointer  z.\n*>\n     divide   test-amount  by  1  giving  y.\n     compute  test-amount  =  test-amount - y.\n*>\n     if       y  >  0\n              string  wordn (y)  delimited  by  \"*\" into  c-words-2  with  pointer  z.\n     if       z > 1\n              move 1 to pound-flag.\n     if       y  >  0\n       or     pound-flag = 1\n *>                   string  \" Pounds \"  delimited  by  \"*\"\n              string  WS-Currency-Major  delimited  by  \"*\"\n                            into  c-words-2  with  pointer  z.\n*>\n     multiply 100  by  test-amount  giving  y.\n*>\n     if       y  >  0\n              string  wordn (y)  delimited  by  \"*\"  into  c-words-2 with  pointer  z.\n     if       y  >  0\n *>                    string  \" Pence \"  delimited  by  \"*\"\n              string  WS-Currency-Minor  delimited  by  \"*\"\n                             into  c-words-2 with  pointer  z.\n*>\n     if       y  =  0\n              string  \"ONLY\"   delimited  by  size   into  c-words-2  with  pointer  z.\n*>\n     perform  varying z from 1 by 1 until z > 9\n              move pay-folio (z)   to  c-folio (z)\n              move pay-invoice (z) to  c-inv (z)\n              move pay-value (z)   to  c-value (z)\n              if   z  <  9\n                   move  \",\" to c-last (z)\n              else\n                   move  \" \" to c-last (z)\n              end-if\n     end-perform\n*>\n     if       pay-sortcode = zero\n              move cheque-nos to c-cheque pay-cheque\n              add 1 to cheque-nos\n     else\n              move zero     to pay-cheque\n              move \"BACS\"   to c-cheque-x\n     end-if\n     write cheque-record from cheque.\n*>\n     move     u-bin  to  pay-date.\n     perform  Payments-Rewrite.  *> rewrite  pay-record.\n*>\n*> now loop back for next item....\n*>\n     go       to read-purchase.\n*>\n main-end.\n*>********\n*>\n     close    cheque-file.    *> purchase-file pay-file.\n     perform  Purch-Close.\n     perform  Payments-Close.\n     exit     program.\n*>\n zz050-Validate-Date        section.\n*>*********************************\n*>\n*>  Converts USA/Intl to UK date format for processing.\n*>*******************************\n*> Input:   ws-test-date\n*> output:  u-date/ws-date as uk date format\n*>          u-bin not zero if valid date\n*>\n     move     ws-test-date to ws-date.\n     if       Date-Form = zero\n              move 1 to Date-Form.\n     if       Date-UK\n              go to zz050-test-date.\n     if       Date-USA                *> swap month and days\n              move ws-days to ws-swap\n              move ws-month to ws-days\n              move ws-swap to ws-month\n              go to zz050-test-date.\n*>\n*> So its International date format\n*>\n     move     \"dd/mm/ccyy\" to ws-date.  *> swap Intl to UK form\n     move     ws-test-date (1:4) to ws-Year.\n     move     ws-test-date (6:2) to ws-Month.\n     move     ws-test-date (9:2) to ws-Days.\n*>\n zz050-test-date.\n     move     ws-date to u-date.\n     move     zero to u-bin.\n     perform  maps04.\n*>\n zz050-exit.\n     exit     section.\n*>\n zz060-Convert-Date        section.\n*>********************************\n*>\n*>  Converts date in binary to UK/USA/Intl date format\n*>****************************************************\n*> Input:   u-bin\n*> output:  ws-date as uk/US/Inlt date format\n*>          u-date & ws-Date = spaces if invalid date\n*>\n     perform  maps04.\n     if       u-date = spaces\n              move spaces to ws-Date\n              go to zz060-Exit.\n     move     u-date to ws-date.\n*>\n     if       Date-Form = zero\n              move 1 to Date-Form.\n     if       Date-UK\n              go to zz060-Exit.\n     if       Date-USA                *> swap month and days\n              move ws-days to ws-swap\n              move ws-month to ws-days\n              move ws-swap to ws-month\n              go to zz060-Exit.\n*>\n*> So its International date format\n*>\n     move     \"ccyy/mm/dd\" to ws-date.  *> swap Intl to UK form\n     move     u-date (7:4) to ws-Intl-Year.\n     move     u-date (4:2) to ws-Intl-Month.\n     move     u-date (1:2) to ws-Intl-Days.\n*>\n zz060-Exit.\n     exit     section.\n*>\n zz070-Convert-Date        section.\n*>********************************\n*>\n*>  Converts date in to-day to UK/USA/Intl date format\n*>****************************************************\n*> Input:   to-day\n*> output:  ws-date as uk/US/Inlt date format\n*>\n     move     to-day to ws-date.\n*>\n     if       Date-Form = zero\n              move 1 to Date-Form.\n     if       Date-UK\n              go to zz070-Exit.\n     if       Date-USA                *> swap month and days\n              move ws-days to ws-swap\n              move ws-month to ws-days\n              move ws-swap to ws-month\n              go to zz070-Exit.\n*>\n*> So its International date format\n*>\n     move     \"ccyy/mm/dd\" to ws-date.  *> swap Intl to UK form\n     move     to-day (7:4) to ws-Intl-Year.\n     move     to-day (4:2) to ws-Intl-Month.\n     move     to-day (1:2) to ws-Intl-Days.\n*>\n zz070-Exit.\n     exit     section.\n*>\n maps04       section.\n*>*******************\n*>\n     call     \"maps04\"  using  maps03-ws.\n*>\n maps04-exit.\n     exit     section.\n*>\n copy \"Proc-ACAS-FH-Calls.cob\".\n*>",
        "line": 18
      }
    ],
    "evaluates": [],
    "validations": []
  },
  "complexity": {
    "mccabe": 8,
    "cognitive": 1,
    "halstead": {
      "uniqueOperators": 2,
      "uniqueOperands": 34,
      "totalOperators": 39,
      "totalOperands": 68,
      "vocabulary": 36,
      "length": 107,
      "volume": 553.1819751543273
    }
  },
  "quality": {
    "gotos": [],
    "deadCode": [],
    "missingErrorHandlers": []
  },
  "sql": {
    "hasSQL": false,
    "statements": []
  },
  "cics": {
    "hasCICS": false,
    "statements": []
  }
}
