{
  "filePath": "/Users/MartinGonella/Desktop/Demos/ACAS/common/acas011.cbl",
  "fileName": "acas011.cbl",
  "timestamp": "2025-09-15T16:25:37.330Z",
  "programId": "acas011",
  "parserUsed": "GnuCOBOL + Regex",
  "parseConfidence": 0,
  "validationStatus": "ERROR",
  "gnuCobolValidation": {
    "success": true,
    "errors": [],
    "warnings": []
  },
  "parseErrors": [
    "Cannot read properties of undefined (reading 'total')"
  ],
  "parseWarnings": [],
  "divisions": {
    "identification": true,
    "environment": true,
    "data": true,
    "procedure": true
  },
  "structure": {
    "sections": [
      {
        "name": "input-output",
        "line": 238
      },
      {
        "name": "file",
        "line": 244
      },
      {
        "name": "working-storage",
        "line": 248
      },
      {
        "name": "Linkage",
        "line": 269
      },
      {
        "name": "aa-Process-Flat-File",
        "line": 290
      },
      {
        "name": "ba-Process-RDBMS",
        "line": 758
      },
      {
        "name": "exit",
        "line": 835
      }
    ],
    "paragraphs": [
      {
        "name": "file-control",
        "line": 239
      },
      {
        "name": "ACAS-DAL-Common-data",
        "line": 287
      },
      {
        "name": "aa010-main",
        "line": 292
      },
      {
        "name": "end-evaluate",
        "line": 315
      },
      {
        "name": "end-if",
        "line": 323
      },
      {
        "name": "end-evaluate",
        "line": 360
      },
      {
        "name": "aa020-Process-Open",
        "line": 365
      },
      {
        "name": "end-if",
        "line": 397
      },
      {
        "name": "aa030-Process-Close",
        "line": 404
      },
      {
        "name": "aa040-Process-Read-Next",
        "line": 417
      },
      {
        "name": "end-read",
        "line": 440
      },
      {
        "name": "aa045-Eval-Keys",
        "line": 450
      },
      {
        "name": "end-evaluate",
        "line": 475
      },
      {
        "name": "aa050-Process-Read-Indexed",
        "line": 477
      },
      {
        "name": "end-if",
        "line": 495
      },
      {
        "name": "end-if",
        "line": 507
      },
      {
        "name": "end-if",
        "line": 519
      },
      {
        "name": "end-if",
        "line": 531
      },
      {
        "name": "aa060-Process-Start",
        "line": 536
      },
      {
        "name": "WE-Error",
        "line": 543
      },
      {
        "name": "end-if",
        "line": 603
      },
      {
        "name": "end-if",
        "line": 610
      },
      {
        "name": "end-if",
        "line": 617
      },
      {
        "name": "end-if",
        "line": 624
      },
      {
        "name": "end-if",
        "line": 640
      },
      {
        "name": "end-if",
        "line": 647
      },
      {
        "name": "end-if",
        "line": 654
      },
      {
        "name": "end-if",
        "line": 661
      },
      {
        "name": "end-if",
        "line": 666
      },
      {
        "name": "end-if",
        "line": 676
      },
      {
        "name": "end-if",
        "line": 683
      },
      {
        "name": "end-if",
        "line": 690
      },
      {
        "name": "end-if",
        "line": 697
      },
      {
        "name": "end-if",
        "line": 702
      },
      {
        "name": "aa070-Process-Write",
        "line": 705
      },
      {
        "name": "end-write",
        "line": 712
      },
      {
        "name": "aa080-Process-Delete",
        "line": 716
      },
      {
        "name": "end-delete",
        "line": 723
      },
      {
        "name": "aa090-Process-Rewrite",
        "line": 727
      },
      {
        "name": "aa100-Bad-Function",
        "line": 739
      },
      {
        "name": "aa999-main-exit",
        "line": 746
      },
      {
        "name": "end-if",
        "line": 749
      },
      {
        "name": "aa-main-exit",
        "line": 751
      },
      {
        "name": "aa-Exit",
        "line": 755
      },
      {
        "name": "ba010-Test-WS-Rec-Size",
        "line": 766
      },
      {
        "name": "ba012-Test-WS-Rec-Size-2",
        "line": 774
      },
      {
        "name": "end-if",
        "line": 814
      },
      {
        "name": "ba015-Test-Ends",
        "line": 816
      },
      {
        "name": "end-call",
        "line": 830
      },
      {
        "name": "ba-rdbms-exit",
        "line": 834
      },
      {
        "name": "ACAS-DAL-Common-data",
        "line": 842
      }
    ],
    "entryPoints": []
  },
  "dependencies": {
    "calls": [
      {
        "target": "stockMT",
        "line": 827,
        "type": "DYNAMIC",
        "using": [
          "File-Access",
          "ACAS-DAL-Common-data",
          "WS-Stock-Record",
          "end-call"
        ]
      },
      {
        "target": "fhlogger",
        "line": 842,
        "type": "DYNAMIC",
        "using": [
          "File-Access",
          "ACAS-DAL-Common-data"
        ]
      }
    ],
    "copies": [
      {
        "name": "*>",
        "line": 181,
        "replacing": null
      },
      {
        "name": "of",
        "line": 230,
        "replacing": null
      },
      {
        "name": "envdiv",
        "line": 237,
        "replacing": null
      },
      {
        "name": "selstock",
        "line": 242,
        "replacing": null
      },
      {
        "name": "fdstock",
        "line": 247,
        "replacing": null
      },
      {
        "name": "wsstock",
        "line": 272,
        "replacing": null
      },
      {
        "name": "wssystem",
        "line": 274,
        "replacing": null
      },
      {
        "name": "wsfnctn",
        "line": 276,
        "replacing": null
      },
      {
        "name": "wsnames",
        "line": 278,
        "replacing": null
      },
      {
        "name": "Test-Data-Flags",
        "line": 280,
        "replacing": null
      },
      {
        "name": "the",
        "line": 480,
        "replacing": null
      }
    ],
    "performs": [
      {
        "target": "ba-Process-RDBMS",
        "thru": null,
        "line": 142
      },
      {
        "target": "ba-Process-RDBMS",
        "thru": null,
        "line": 322
      },
      {
        "target": "ba012-Test-WS-Rec-Size-2",
        "thru": null,
        "line": 328
      },
      {
        "target": "aa999-main-exit",
        "thru": null,
        "line": 412
      },
      {
        "target": "Ca-Process-Logs",
        "thru": null,
        "line": 415
      },
      {
        "target": "aa045-Eval-keys",
        "thru": null,
        "line": 483
      },
      {
        "target": "aa045-Eval-keys",
        "thru": null,
        "line": 542
      },
      {
        "target": "Ca-Process-Logs",
        "thru": null,
        "line": 749
      },
      {
        "target": "Ca-Process-Logs",
        "thru": null,
        "line": 799
      }
    ]
  },
  "dataFlow": {
    "files": [],
    "moves": [
      {
        "from": "5",
        "to": "WS-Log-System",
        "line": 297
      },
      {
        "from": "12",
        "to": "WS-Log-File-No",
        "line": 298
      },
      {
        "from": "998",
        "to": "WE-Error       *> file seeks key type out of range        998\r\n                       move 99 to fs-reply\r\n                       go   to aa999-main-exit\r\n                end-if\r\n              when     8  *> fn-delete\r\n                if     File-Key-No < 1 or > 2     *> 1 or 2 is only for RDB as Cobol does it on primary key\r\n                       move 996 to WE-Error       *> file seeks key type out of range        996\r\n                       move 99 to fs-reply\r\n                       go   to aa999-main-exit\r\n                end-if\r\n     end-evaluate",
        "line": 306
      },
      {
        "from": "RDBMS-Flat-Statuses",
        "to": "FA-RDBMS-Flat-Statuses    *> needed for DAL? not JC/dbpre versions\r\n              perform ba-Process-RDBMS                                *>  Can't hurt\r\n              go to AA-Main-Exit\r\n     end-if",
        "line": 321
      },
      {
        "from": "zero",
        "to": "WE-Error\r\n *>  ?                      FS-Reply",
        "line": 338
      },
      {
        "from": "spaces",
        "to": "SQL-Err SQL-Msg SQL-State",
        "line": 340
      },
      {
        "from": "spaces",
        "to": "WS-File-Key",
        "line": 367
      },
      {
        "from": "201",
        "to": "WS-No-Paragraph",
        "line": 369
      },
      {
        "from": "35",
        "to": "fs-Reply\r\n                   close Stock-File\r\n                   go to aa999-Main-Exit\r\n              end-if\r\n      else\r\n       if     fn-i-o\r\n              open i-o Stock-File\r\n              if       fs-reply not = zero              *> this block was in st010 at ba000-Setup-Stock\r\n                       close       Stock-File\r\n                       open output Stock-File           *> Doesnt create in i-o\r\n                       close       Stock-File\r\n                       open i-o    Stock-File\r\n              end-if                                      *> file-status will NOT be updated   ????\r\n       else\r\n        if    fn-output                      *> should not need to be used\r\n              open output Stock-File         *> caller should check fs-reply\r\n        else\r\n         if   fn-extend                      *> Must not be used for ISAM files\r\n*>              open extend Stock-File\r\n              move 997 to WE-Error\r\n              move 99  to FS-Reply\r\n              go to aa999-main-exit\r\n         end-if\r\n        end-if\r\n       end-if\r\n     end-if",
        "line": 373
      },
      {
        "from": "zeros",
        "to": "FS-Reply WE-Error",
        "line": 399
      },
      {
        "from": "zero",
        "to": "Cobol-File-Status",
        "line": 400
      },
      {
        "from": "999",
        "to": "WE-Error",
        "line": 402
      },
      {
        "from": "202",
        "to": "WS-No-Paragraph",
        "line": 406
      },
      {
        "from": "spaces",
        "to": "WS-File-Key",
        "line": 407
      },
      {
        "from": "zeros",
        "to": "FS-Reply WE-Error",
        "line": 409
      },
      {
        "from": "zero",
        "to": "Cobol-File-Status",
        "line": 410
      },
      {
        "from": "zero",
        "to": "File-Function\r\n                       Access-Type",
        "line": 413
      },
      {
        "from": "203",
        "to": "WS-No-Paragraph",
        "line": 423
      },
      {
        "from": "10",
        "to": "FS-Reply\r\n                         WE-Error\r\n              move spaces to Stock-Key\r\n                             SQL-Err\r\n                             SQL-Msg\r\n              stop \"Cobol File EOF\"               *> for testing\r\n              go to aa999-main-exit\r\n     end-if\r\n*>\r\n     read     Stock-File next record at end\r\n              move 10 to we-error fs-reply        *> EOF\r\n              set Cobol-File-EoF to true\r\n              move 1 to Cobol-File-Status         *> JIC above dont work :)\r\n              initialize Stock-Record\r\n              move \"EOF\" to WS-File-Key           *> for logging\r\n              go to aa999-main-exit\r\n     end-read",
        "line": 425
      },
      {
        "from": "Stock-Record",
        "to": "WS-Stock-Record",
        "line": 444
      },
      {
        "from": "WS-Stock-Key",
        "to": "WS-File-Key",
        "line": 445
      },
      {
        "from": "zeros",
        "to": "WE-Error",
        "line": 446
      },
      {
        "from": "WS-Stock-Key",
        "to": "WS-File-Key\r\n                                                                  Stock-Key\r\n                              when   2\r\n                                     move   WS-Stock-Abrev-Key to WS-File-Key\r\n                                                                  Stock-Abrev-Key\r\n                              when   3\r\n                                     move   WS-Stock-Desc      to WS-File-Key\r\n                                                                  Stock-Desc\r\n                              when   4             *> NEW 29/01/25  v ",
        "line": 460
      },
      {
        "from": "WS-Stock-Location",
        "to": "WS-File-Key\r\n                                                                  Stock-Location\r\n                              when   other\r\n                                     move   \"ERROR : File-Key is BLANK\" to WS-File-Key\r\n                    end-evaluate\r\n              when  other\r\n                    move   \"ERROR : File-Function is BLANK\"    to WS-File-Key\r\n     end-evaluate",
        "line": 469
      },
      {
        "from": "204",
        "to": "WS-No-Paragraph",
        "line": 482
      },
      {
        "from": "zero",
        "to": "Cobol-File-Status",
        "line": 484
      },
      {
        "from": "21",
        "to": "we-error fs-reply\r\n              end-read\r\n              if       fs-Reply = zero\r\n                       move     Stock-Record to WS-Stock-Record\r\n                       move     WS-Stock-Key to WS-File-Key\r\n              else\r\n                       move     spaces     to WS-Stock-Record\r\n              end-if\r\n              go       to aa999-main-exit\r\n     end-if",
        "line": 487
      },
      {
        "from": "21",
        "to": "we-error fs-reply\r\n              end-read\r\n              if       fs-Reply = zero\r\n                       move     Stock-Record to WS-Stock-Record\r\n                       move     WS-Stock-Abrev-Key to WS-File-Key\r\n              else\r\n                       move     spaces to WS-Stock-Record\r\n              end-if\r\n              go       to aa999-main-exit\r\n     end-if",
        "line": 499
      },
      {
        "from": "21",
        "to": "we-error fs-reply\r\n              end-read\r\n              if       fs-Reply = zero\r\n                       move     Stock-Record to WS-Stock-Record\r\n                       move     WS-Stock-Desc to WS-File-Key\r\n              else\r\n                       move     spaces to WS-Stock-Record\r\n              end-if\r\n              go       to aa999-main-exit\r\n     end-if",
        "line": 511
      },
      {
        "from": "21",
        "to": "we-error fs-reply\r\n              end-read\r\n              if       fs-Reply = zero\r\n                       move     Stock-Record     to WS-Stock-Record\r\n                       move     WS-Stock-Location to WS-File-Key\r\n              else\r\n                       move     spaces to WS-Stock-Record\r\n              end-if\r\n              go       to aa999-main-exit\r\n     end-if",
        "line": 523
      },
      {
        "from": "998",
        "to": "WE-Error       *> file seeks key type out of range but should never get here       998\r\n     move     99 to fs-reply\r\n     go       to aa999-main-exit",
        "line": 533
      },
      {
        "from": "205",
        "to": "WS-No-Paragraph",
        "line": 541
      },
      {
        "from": "zeros",
        "to": "fs-reply\r\n                       WE-Error",
        "line": 543
      },
      {
        "from": "zero",
        "to": "Cobol-File-Status",
        "line": 545
      },
      {
        "from": "998",
        "to": "WE-Error                     *> 998 Invalid calling parameter settings\r\n              go to aa999-main-exit\r\n     end-if\r\n*>\r\n*>  Now do Start primary key before read-next\r\n*>\r\n     if       File-Key-No = 1\r\n        and   fn-equal-to\r\n              start Stock-File key = Stock-Key invalid key\r\n                    move 21 to Fs-Reply\r\n                    go to aa999-main-exit\r\n              end-start\r\n     end-if\r\n     if       File-Key-No = 1\r\n        and   fn-less-than\r\n              start Stock-File key < Stock-Key invalid key\r\n                    move 21 to Fs-Reply\r\n                    go to aa999-main-exit\r\n              end-start\r\n     end-if\r\n     if       File-Key-No = 1\r\n        and   fn-greater-than\r\n              start Stock-File key > Stock-Key invalid key\r\n                    move 21 to Fs-Reply\r\n                    go to aa999-main-exit\r\n              end-start\r\n     end-if\r\n     if       File-Key-No = 1\r\n        and   fn-not-less-than\r\n              start Stock-File key not < Stock-Key invalid key\r\n                    move 21 to Fs-Reply\r\n                    go to aa999-main-exit\r\n              end-start\r\n     end-if\r\n     if       File-Key-No = 1\r\n       and    fn-not-greater-than\r\n              start Stock-File key not > Stock-Key invalid key\r\n                    move 21 to Fs-Reply\r\n                    go to aa999-main-exit\r\n              end-start\r\n     end-if\r\n     if       File-Key-No = 1\r\n              move     WS-Stock-Key to WS-File-Key\r\n              if       WS-Stock-Key (1:4) = spaces\r\n                       move     ST904 to WS-File-Key\r\n              end-if\r\n              go       to aa999-main-exit",
        "line": 548
      },
      {
        "from": "21",
        "to": "Fs-Reply\r\n                    go to aa999-main-exit\r\n              end-start\r\n     end-if",
        "line": 601
      },
      {
        "from": "21",
        "to": "Fs-Reply\r\n                    go to aa999-main-exit\r\n              end-start\r\n     end-if",
        "line": 608
      },
      {
        "from": "21",
        "to": "Fs-Reply\r\n                    go to aa999-main-exit\r\n              end-start\r\n     end-if",
        "line": 615
      },
      {
        "from": "21",
        "to": "Fs-Reply\r\n                    go to aa999-main-exit\r\n              end-start\r\n     end-if",
        "line": 622
      },
      {
        "from": "WS-Stock-Abrev-Key",
        "to": "WS-File-Key\r\n              if       WS-Stock-Key (1:4) = spaces\r\n                       move     ST904 to WS-File-Key\r\n              end-if\r\n              go to aa999-main-exit",
        "line": 627
      },
      {
        "from": "21",
        "to": "Fs-Reply\r\n                    go to aa999-main-exit\r\n              end-start\r\n     end-if",
        "line": 638
      },
      {
        "from": "21",
        "to": "Fs-Reply\r\n                    go to aa999-main-exit\r\n              end-start\r\n     end-if",
        "line": 645
      },
      {
        "from": "21",
        "to": "Fs-Reply\r\n                    go to aa999-main-exit\r\n              end-start\r\n     end-if",
        "line": 652
      },
      {
        "from": "21",
        "to": "Fs-Reply\r\n                    go to aa999-main-exit\r\n              end-start\r\n     end-if",
        "line": 659
      },
      {
        "from": "WS-Stock-Desc",
        "to": "WS-File-Key\r\n              if       WS-Stock-Key (1:4) = spaces\r\n                       move     ST904 to WS-File-Key\r\n              end-if",
        "line": 664
      },
      {
        "from": "21",
        "to": "Fs-Reply\r\n                    go to aa999-main-exit\r\n              end-start\r\n     end-if",
        "line": 674
      },
      {
        "from": "21",
        "to": "Fs-Reply\r\n                    go to aa999-main-exit\r\n              end-start\r\n     end-if",
        "line": 681
      },
      {
        "from": "21",
        "to": "Fs-Reply\r\n                    go to aa999-main-exit\r\n              end-start\r\n     end-if",
        "line": 688
      },
      {
        "from": "21",
        "to": "Fs-Reply\r\n                    go to aa999-main-exit\r\n              end-start\r\n     end-if",
        "line": 695
      },
      {
        "from": "WS-Stock-Location",
        "to": "WS-File-Key\r\n              if       WS-Stock-Key (1:4) = spaces\r\n                       move     ST904 to WS-File-Key\r\n              end-if",
        "line": 700
      },
      {
        "from": "206",
        "to": "WS-No-Paragraph",
        "line": 707
      },
      {
        "from": "WS-Stock-Record",
        "to": "Stock-Record",
        "line": 708
      },
      {
        "from": "zeros",
        "to": "FS-Reply  WE-Error",
        "line": 709
      },
      {
        "from": "zero",
        "to": "Cobol-File-Status",
        "line": 710
      },
      {
        "from": "22",
        "to": "FS-Reply\r\n     end-write",
        "line": 712
      },
      {
        "from": "WS-Stock-Key",
        "to": "WS-File-Key",
        "line": 714
      },
      {
        "from": "207",
        "to": "WS-No-Paragraph",
        "line": 718
      },
      {
        "from": "WS-Stock-Record",
        "to": "Stock-Record",
        "line": 719
      },
      {
        "from": "zeros",
        "to": "FS-Reply  WE-Error",
        "line": 720
      },
      {
        "from": "zero",
        "to": "Cobol-File-Status",
        "line": 721
      },
      {
        "from": "21",
        "to": "FS-Reply\r\n     end-delete",
        "line": 723
      },
      {
        "from": "WS-Stock-Key",
        "to": "WS-File-Key",
        "line": 725
      },
      {
        "from": "208",
        "to": "WS-No-Paragraph",
        "line": 730
      },
      {
        "from": "WS-Stock-Record",
        "to": "Stock-Record",
        "line": 731
      },
      {
        "from": "zeros",
        "to": "FS-Reply  WE-Error",
        "line": 732
      },
      {
        "from": "zero",
        "to": "Cobol-File-Status",
        "line": 733
      },
      {
        "from": "21",
        "to": "FS-Reply\r\n     end-rewrite\r\n     move     WS-Stock-Key to WS-File-Key",
        "line": 735
      },
      {
        "from": "999",
        "to": "WE-Error",
        "line": 744
      },
      {
        "from": "99",
        "to": "fs-reply",
        "line": 745
      },
      {
        "from": "22",
        "to": "WS-Log-File-no",
        "line": 773
      },
      {
        "from": "901",
        "to": "WE-Error       *> 901 Programming error; temp rec length is wrong caller must stop\r\n                   move 99 to fs-reply        *> allow for last field ( FILLER) not being present in layout",
        "line": 785
      },
      {
        "from": "spaces",
        "to": "Display-Blk\r\n                       string ST903          delimited by size\r\n                              A              delimited by size\r\n                              \" < \"          delimited by size\r\n                              \"Stock-Rec = \" delimited by size\r\n                              B              delimited by size    into Display-Blk\r\n                       end-string\r\n                       display Display-Blk at 2301 with erase eol     *> BUT WILL REMIND ME TO SET IT UP correctly\r\n                       display ST901 at 2401 with erase eol\r\n                       if  Testing-1\r\n                           perform Ca-Process-Logs\r\n                       end-if\r\n                       accept Accept-Reply at 2433\r\n                       go to ba-rdbms-exit\r\n              end-if\r\n*>\r\n*>  Not a error comparing the length of records so - -\r\n*>  Load up the DB settings from the system record as its not passed on\r\n*>           hopefully once is enough  :)\r\n*>\r\n              move     RDBMS-DB-Name to DB-Schema\r\n              move     RDBMS-User    to DB-UName\r\n              move     RDBMS-Passwd  to DB-UPass\r\n              move     RDBMS-Port    to DB-Port\r\n              move     RDBMS-Host    to DB-Host\r\n              move     RDBMS-Socket  to DB-Socket\r\n     end-if",
        "line": 789
      }
    ],
    "computes": []
  },
  "businessLogic": {
    "conditions": [
      {
        "type": "IF",
        "condition": "Cobol Flat files are in use (via the system parameter file settings)\r\n*>                      which is passed via the wsfnctn (via copybook) / File-Access data block\r\n*>                      via the application module and each FH & DAL.\r\n*>                      It will read/write/delete/update/open/close as required and requested.\r\n*>                      NOTE the same fields are used for ALL of the FL and DAL modules so\r\n*>                      checking the error flags have to be done after each call before clearing.\r\n*>\r\n*>                      If RDBMS (Relational DataBase Management Systems) is in use it will call\r\n*>                      the specific module to handle similar processing passing the equivelent\r\n*>                      RDB (Relational DataBase) row as a Cobol file record (01 level) moving\r\n*>                      row by row to the correct Cobol flat file fields as required.\r\n*>                      These retrieve ALL columns and there fore the DAL modules cannot handle\r\n*>                      processing for selective columns, e.g., only updating one field/column\r\n*>                      as the whole record / row must be read or written to/from the RDB table.\r\n*>\r\n*>                      Module naming is based on the File ID variable name and for the Stock\r\n*>                      file which uses file-11  the FH is therefore acas011 - the last two chars\r\n*>                      reflect the same number as last two chars the 'file-nn' name.\r\n*>\r\n*>                      Did it have to be this way ? no but it is easy to see in the original\r\n*>                      code the name in the select statement for the Cobol file.\r\n*>\r\n*>                      RDB DAL (Data Access Layer) modules are individually modified to handle:\r\n*>                      MS SQL server, Mysql, DB2, Postgres and Oracle as available and tested.\r\n*>                      These are contained in seperate directories for each RDB, eg\r\n*>                       'MSSQL' (MS SQL Server), 'Mysql', 'DB2', 'Postgres'. 'Oracle'.\r\n*>                       You need to compile from the correct directory for the specific\r\n*>                       RDB you will use and have installed along with all of the development\r\n*>                       libraries and include files etc using the correct pre-compiler tool\r\n*>                       to process the 'EXEC SQL' code converting to Cobol calls etc.\r\n*>\r\n*>                      For specific SQL servers supported the pre-compiler system is included\r\n*>                       where ever possible but for some, copyright reasons may prevent\r\n*>                       inclusion. In some cases for one specific RDB more than one precompiler\r\n*>                       is used as an experiment to help find the ideal one to use.\r\n*>\r\n*>                      In addition:\r\n*>                        If the system has been set up to (see the System File set up via the\r\n*>                        main menu module for each sub system), also process BOTH flat file\r\n*>                        AND the correct rdb table/s,\r\n*>                        it will write/delete/update etc to both but read from 1=Flat and be\r\n*>                        overwritten by the rdb access. This was set up more for testing the\r\n*>                        new code for both cobol files and the rdb accessing modules.\r\n*>                       This can help in transferring the Cobol flat files to rdb tables but\r\n*>                        see below regarding the Load programs/modules.\r\n*>\r\n*>                      If you wish to convert a running ACAS system over from Flat files\r\n*>                      to RDBMS see below. However it is strongly recommended to not to use\r\n*>                      the Duplicate processing of files/table as outlined above but:\r\n*>\r\n*>                      Included are LMs (Load Modules) to convert each ISAM\r\n*>                      (Indexed Sequential) file to the rdb database tables if you wish to\r\n*>                      convert the system in one hit, without using the Duplicate file/RDB\r\n*>                      processing procedures. These will also need to be compiled from the\r\n*>                      specific LM directory that contains the rdb DAL modules.\r\n*>\r\n*>                      A specific program or bash process will be created to use, that will run\r\n*>                      each LM process for all existing Cobol files. These are created during\r\n*>                      writing of the FH and DAL for each file/table if only to help in testing\r\n*>                      them.\r\n*>**\r\n*> Called Modules:\r\n*>                      stockMT -\r\n*>                                DAL (RDB Data Access Layer) or a variation\r\n*>                      Selected via CDF etc [to be added].\r\n*>\r\n*>**\r\n*> Error Messages Used.\r\n*>\r\n*>                      ST901 Note error and hit return\r\n*>                      ST903 Program Error: Temp rec =yyy < Stock-Rec = zzz\r\n*>                      ST904 Start on spaces successful\r\n*>**\r\n*> Version.             1.00 29/02/2012. Rewritten June 2016 after creating the DAL.\r\n*>\r\n*>                      This module is the first of the ACAS File Handlers and\r\n*>                      will act as the model for all the others which in turn\r\n*>                      is lightly modelled on the irsub modules for IRS.\r\n*>\r\n*>\r\n*> Changes.\r\n*> 29/02/12 vbc - Created for Gnu Cobol v1.1 & v2.0. Code also to be tested with MF VC\r\n*>                ** UNDER TEST ** but there again every thing is!\r\n*> 17/05/16 vbc - Adding code for log file.\r\n*>                Notes about error messages.\r\n*> 24/06/16 vbc - Minor coding errors with a evaluate.\r\n*> 02/07/16 vbc - .01 Missing DB params in system rec not moved to DB-xx in wsfnctn.\r\n*> 04/08/16 vbc       Moved logging code into a new module to be called\r\n*>                    from here and the stockMT code.\r\n*> 04/08/16 vbc - .02 Test on read for read next at end bypass moves etc.\r\n*> 21/07/16 vbc - .03 Minor tidy up  of code & comments near the call to the DAL.\r\n*>                    Extra module comments and notes.\r\n*> 27/07/16 vbc - .04 Remd out some mv zero to fs-reply but dont think it is causing issues, may be\r\n*> 24/10/16 vbc - .   ALL programs now using wsnames.cob in copybooks\r\n*> 28/02/18 vbc - .05 Added recs test for FH at ba012-Test-WS-Rec-Size-2\r\n*> 29/04/18 vbc - .06 Resetting Cobol-File-Status for write,rewrite,delete, start etc\r\n*> 26/06/20 vbc - .07 On Open change move file name to start of para.Missing '.' at end of Open.\r\n*> 07/12/22 vbc - .08 Chgd Vars A & B to pic 999 toi keep GC v3.2 happy.\r\n*> 10/12/22 vbc - .09 chg to perform ba-Process-RDBMS + goto exit, 2 remove GC warning msg\r\n*>                    from latest v3.2 code WITH ba-Main-Exit chgd to exit section.\r\n*> 06/08/23 vbc - .10 Added support for Start not < than.\r\n*> 16/08/23 vbc - .11 Added msg ST904 Start on spaces successful for logger for all 3 keys\r\n*> 16/04/24 vbc       Copyright notice update superseding all previous notices.\r\n*> 27/01/25 vbc - .12 Add in support for 4th key - Location (with dups) to support\r\n*> 29/01/25 vbc       changes in st030 - Also applies to stockMT.  MORE NEEDED...\r\n*>\r\n*>**\r\n*>  Module USAGE\r\n*>**************\r\n*>\r\n*>    On Entry:         Set up Linkage areas -\r\n*>    ********              1. File and table WS record : -\r\n*>    acas011 ONLY             WS-Stock-Record = Contents of data record to be written/read\r\n*>                          2. File-Access = File-Function as needed.\r\n*>                                        Access-Type   as needed.\r\n*>                          3. File-Defs (File-Definitions) = Paths set up.\r\n*>\r\n*>    On Exit:          Linkage contains and apples to ALL FH and DAL modules:\r\n*>    *******               Record = containing a read data record or table row\r\n*>                          Fs-Reply = 0, 99 or other value where\r\n*>                                     0  = Operation completed successfully\r\n*>                                     10 = End of file\r\n*>                                     21 = Invalid key | key not found\r\n*>                                     99 = Indicates an error see WE-Error for more info\r\n*>                          WE-Error   0    = Operation completed successfully\r\n*>                                     999  = Undefined / unknown error\r\n*>                                     998* = File-Key-No Out Of Range not 1, 2 or 3.\r\n*>                                     997* = Access-Type wrong (< 5 or > 8)\r\n*>                                     996* = File Delete key out of range (not = 1 or 2)\r\n*>                                     995* = During Delete SQLSTATE not '00000' investigate using MSG-Err/Msg\r\n*>                                     994* = During Rewrite,                     ^^ see above ^^\r\n*>                                     990* = Unknown and unexpected error, again ^^ see above ^^\r\n*>                                     989* = Unexpected error on Read-Indexed, investigate as above.\r\n*>                                     911* = Rdb Error during initializing,\r\n*>                                            possibly can not connect to database\r\n*>                                             Check connect data and\r\n*>                                             see SQL-Err & SQL-MSG\r\n*>                                            Produced by Mysql-1100-Db-Error in copy\r\n*>                                            module mysql-procedure.\r\n*>                                     901  = File Def Record size not =< than ws record size\r\n*>                                            Module needs ws definition changing to correct size\r\n*>                                            FATAL, Stop using system, fix source code\r\n*>                                            and recompile before using system again.\r\n*>                                     Other = any other rdbms errors see specific\r\n*>                                             (Rdbms) manual\r\n*>                          SQL-Err  = Error code from RDBMS is set if above 2 are non zero\r\n*>                          SQL-Msg  = Non space providing more info if SQL-Err non '00000'\r\n*>                                     * = FS-Reply = 99.\r\n*>\r\n*>       During testing a log file will be created containing datetime stamp, task and return codes\r\n*>       for both FS-Reply and WE-Error and table used along with the RDB error number and message\r\n*>         In this case for the\r\n*>                Stock File.\r\n*>\r\n*>       WARNING - This file could get large so needs manually deleting after examination.\r\n*>\r\n*>  Programmer note : CONSIDER WRITING A reporting program for this with report selection criteria.\r\n*>\r\n*>******************************************************************************\r\n*>\r\n*>  From copyright.cob.\r\n*>\r\n*> Copyright Notice.\r\n*> ****************\r\n*>\r\n*> This notice supercedes all prior copyright notices & was updated 2024-04-16.\r\n*>\r\n*> These files and programs are part of the Applewood Computers Accounting\r\n*> System and is Copyright (c) Vincent B Coen. 1976-2025 and later.\r\n*>\r\n*> This program is now free software; you can redistribute it and/or modify it\r\n*> under the terms listed here and of the GNU General Public License as\r\n*> published by the Free Software Foundation; version 3 and later as revised\r\n*> for PERSONAL USAGE ONLY and that includes for use within a business but\r\n*> EXCLUDES repackaging or for Resale, Rental or Hire in ANY way.\r\n*>\r\n*> Persons interested in repackaging, redevelopment for the purpose of resale or\r\n*> distribution in a rental or hire mode must get in touch with the copyright\r\n*> holder with your commercial plans and proposals.\r\n*>\r\n*> ACAS is distributed in the hope that it will be useful, but WITHOUT\r\n*> ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\r\n*> FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\r\n*> for more details. If it breaks, you own both pieces but I will endeavour\r\n*> to fix it, providing you tell me about the problem.\r\n*>\r\n*> You should have received a copy of the GNU General Public License along\r\n*> with ACAS; see the file COPYING.  If not, write to the Free Software\r\n*> Foundation, 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA.\r\n*>\r\n*>**********************************************************************************\r\n*>\r\n environment division.\r\n copy \"envdiv.cob\".\r\n*>\r\n input-output section.\r\n file-control.\r\n*>\r\n copy \"selstock.cob\".\r\n*>\r\n data division.\r\n file section.\r\n*>***********\r\n copy \"fdstock.cob\".\r\n*>\r\n working-storage section.\r\n*>**********************\r\n*>\r\n 77  prog-name           pic x(17)    value \"acas011 (3.02.12)\".\r\n*>\r\n 77  ws-reply           pic x      value space.\r\n*>\r\n 77  A                  pic 9(4)             value zero.  *> A & B used in 1st test ONLY\r\n 77  B                  pic 9(4)             value zero.  *>  in ba-Process-RDBMS\r\n 77  Display-Blk        pic x(75)             value spaces.\r\n 77  Cobol-File-Status  pic 9                 value zero.\r\n     88  Cobol-File-Eof                       value 1.\r\n*>\r\n 01  Error-Messages.\r\n*> System Wide\r\n*> Module Specific\r\n     03  ST901          pic x(31) value \"ST901 Note error and hit return\".\r\n     03  ST903          pic x(32) value \"ST903 Program Error: Temp rec = \".\r\n     03  ST904          pic x(32) value \"ST904 Start on spaces successful\".\r\n*>                                        yyy < Stock-Rec = zzz\r\n*>\r\n Linkage Section.\r\n*>**************\r\n copy \"wsstock.cob\".\r\n*>\r\n copy \"wssystem.cob\".\r\n*>\r\n copy \"wsfnctn.cob\".\r\n*>\r\n copy \"wsnames.cob\".\r\n*>\r\n copy \"Test-Data-Flags.cob\".  *> set sw-testing to zero to stop logging.\r\n*>\r\n Procedure Division Using System-Record\r\n\r\n                          WS-Stock-Record\r\n\r\n                          File-Access\r\n                          File-Defs\r\n                          ACAS-DAL-Common-data.\r\n*>********************************************\r\n*>\r\n aa-Process-Flat-File Section.\r\n*>***************************\r\n aa010-main.\r\n*>\r\n*>  For logging only.\r\n*>\r\n     move     5      to WS-Log-System.   *> 1 = IRS, 2=GL, 3=SL, 4=PL, 5=Stock used in FH logging\r\n     move     12     to WS-Log-File-No.  *> RDB, File/Table\r\n*>\r\n*>   Now Test for valid key for start, read-indexed and delete\r\n*>\r\n     evaluate File-Function\r\n              when  4   *> fn-read-indexed\r\n              when  9   *> fn-start\r\n                if     File-Key-No < 1 or > 4     *> chg 29/01/25 v .12  was 3\r\n                       move 998 to WE-Error       *> file seeks key type out of range        998\r\n                       move 99 to fs-reply\r\n                       go   to aa999-main-exit\r\n                end-if\r\n              when     8  *> fn-delete\r\n                if     File-Key-No < 1 or > 2     *> 1 or 2 is only for RDB as Cobol does it on primary key\r\n                       move 996 to WE-Error       *> file seeks key type out of range        996\r\n                       move 99 to fs-reply\r\n                       go   to aa999-main-exit\r\n                end-if\r\n     end-evaluate.\r\n*>\r\n*> Check if data files or RDBMS processing or are we doing both !!\r\n*>\r\n     if       not FS-Cobol-Files-Used\r\n              move RDBMS-Flat-Statuses to FA-RDBMS-Flat-Statuses    *> needed for DAL? not JC/dbpre versions\r\n              perform ba-Process-RDBMS                                *>  Can't hurt\r\n              go to AA-Main-Exit\r\n     end-if.\r\n*>\r\n*> Test  Rec lengths first.\r\n*>\r\n     perform  ba012-Test-WS-Rec-Size-2.\r\n*>\r\n*>  File paths for Cobol File has already done in main menu module\r\n*>\r\n*>******************************************************************************\r\n*> So we are processing Cobol Flat files, as Dup processing, or by themselves. *\r\n*>    if reading, get it but will be overwritten by rdb processing if set,     *\r\n*>      otherwise will write/rewrite/delete etc, to both formats               *\r\n*>******************************************************************************\r\n*>\r\n*>  ?   move     zero   to  WE-Error\r\n *>  ?                      FS-Reply.\r\n     move     spaces to SQL-Err SQL-Msg SQL-State.\r\n*>\r\n     evaluate File-Function\r\n        when  1\r\n              go to aa020-Process-Open\r\n        when  2\r\n              go to aa030-Process-Close\r\n        when  3\r\n              go to aa040-Process-Read-Next\r\n        when  4\r\n              go to aa050-Process-Read-Indexed\r\n        when  5\r\n              go to aa070-Process-Write\r\n        when  7\r\n              go to aa090-Process-Rewrite\r\n        when  8\r\n              go to aa080-Process-Delete\r\n        when  9\r\n              go to aa060-Process-Start\r\n        when  other                          *> 6 is spare / unused\r\n              go to aa100-Bad-Function\r\n     end-evaluate.\r\n*>\r\n*>  Should never get here but in case :(\r\n     go       to aa100-Bad-Function.\r\n*>\r\n aa020-Process-Open.\r\n *>    move     spaces to WS-File-Key.     *> for logging\r\n     move     \"OPEN STOCK File\" to WS-File-Key.\r\n     move     201 to WS-No-Paragraph.\r\n     if       fn-input\r\n              open input Stock-File\r\n              if   Fs-Reply not = zero\r\n                   move 35 to fs-Reply\r\n                   close Stock-File\r\n                   go to aa999-Main-Exit\r\n              end-if\r\n      else\r\n       if     fn-i-o\r\n              open i-o Stock-File\r\n              if       fs-reply not = zero              *> this block was in st010 at ba000-Setup-Stock\r\n                       close       Stock-File\r\n                       open output Stock-File           *> Doesnt create in i-o\r\n                       close       Stock-File\r\n                       open i-o    Stock-File\r\n              end-if                                      *> file-status will NOT be updated   ????\r\n       else\r\n        if    fn-output                      *> should not need to be used\r\n              open output Stock-File         *> caller should check fs-reply\r\n        else\r\n         if   fn-extend                      *> Must not be used for ISAM files\r\n*>              open extend Stock-File\r\n              move 997 to WE-Error\r\n              move 99  to FS-Reply\r\n              go to aa999-main-exit\r\n         end-if\r\n        end-if\r\n       end-if\r\n     end-if.\r\n*> 27/07/16 16:30     move     zeros to FS-Reply WE-Error.\r\n     move     zero to Cobol-File-Status.\r\n     if       fs-reply not = zero\r\n              move  999 to WE-Error.\r\n     go       to aa999-main-exit.            *> with test for dup processing\r\n*>\r\n aa030-Process-Close.\r\n     move     202 to WS-No-Paragraph.\r\n     move     spaces to WS-File-Key.     *> for logging\r\n     close    Stock-File.\r\n*> 27/07/16 16:30     move     zeros to FS-Reply WE-Error.\r\n     move     zero to Cobol-File-Status.\r\n     move     \"CLOSE STOCK File\" to WS-File-Key\r\n     perform  aa999-main-exit.                   *> o/p to log\r\n     move     zero to  File-Function\r\n                       Access-Type.              *> close log file\r\n     perform  Ca-Process-Logs.\r\n     go       to aa-main-exit.\r\n*>\r\n aa040-Process-Read-Next.\r\n*>\r\n*>   Process READs, 1st is read next",
        "line": 44
      },
      {
        "type": "IF",
        "condition": "Cobol-File-Eof\r\n              move 10 to FS-Reply\r\n                         WE-Error\r\n              move spaces to Stock-Key\r\n                             SQL-Err\r\n                             SQL-Msg\r\n              stop \"Cobol File EOF\"               *> for testing\r\n              go to aa999-main-exit\r\n     end-if\r\n*>\r\n     read     Stock-File next record at end\r\n              move 10 to we-error fs-reply        *> EOF\r\n              set Cobol-File-EoF to true\r\n              move 1 to Cobol-File-Status         *> JIC above dont work :)\r\n              initialize Stock-Record\r\n              move \"EOF\" to WS-File-Key           *> for logging\r\n              go to aa999-main-exit\r\n     end-read.\r\n     if       FS-Reply not = zero\r\n              go to aa999-main-exit.\r\n     move     Stock-Record to WS-Stock-Record.\r\n     move     WS-Stock-Key to WS-File-Key.\r\n     move     zeros to WE-Error.\r\n     go to    aa999-main-exit.\r\n*>\r\n*>   The next block will never get executed unless performed  so is it needed ?\r\n*>\r\n aa045-Eval-Keys.\r\n     evaluate File-Function      *> Set up keys just for logging\r\n              when  4             *> fn-read-indexed\r\n              when  5             *> fn-write\r\n              when  7             *> fn-re-write\r\n              when  8             *> fn-delete    For delete can ignore Desc key\r\n              when  9             *> fn-start\r\n                    evaluate  File-Key-No\r\n                              when   1\r\n                                     move   WS-Stock-Key       to WS-File-Key\r\n                                                                  Stock-Key\r\n                              when   2\r\n                                     move   WS-Stock-Abrev-Key to WS-File-Key\r\n                                                                  Stock-Abrev-Key\r\n                              when   3\r\n                                     move   WS-Stock-Desc      to WS-File-Key\r\n                                                                  Stock-Desc\r\n                              when   4             *> NEW 29/01/25  v .12\r\n                                     move   WS-Stock-Location  to WS-File-Key\r\n                                                                  Stock-Location\r\n                              when   other\r\n                                     move   \"ERROR : File-Key is BLANK\" to WS-File-Key\r\n                    end-evaluate\r\n              when  other\r\n                    move   \"ERROR : File-Function is BLANK\"    to WS-File-Key\r\n     end-evaluate.\r\n*>\r\n aa050-Process-Read-Indexed.\r\n*>\r\n*> copy the three possible keys to main file area\r\n*>\r\n     move     204 to WS-No-Paragraph.\r\n     perform  aa045-Eval-keys.\r\n     move     zero to Cobol-File-Status.\r\n     if       File-Key-No = 1\r\n              read     Stock-File key Stock-Key       invalid key\r\n                       move 21 to we-error fs-reply\r\n              end-read\r\n              if       fs-Reply = zero\r\n                       move     Stock-Record to WS-Stock-Record\r\n                       move     WS-Stock-Key to WS-File-Key\r\n              else\r\n                       move     spaces     to WS-Stock-Record\r\n              end-if\r\n              go       to aa999-main-exit\r\n     end-if.\r\n     if       File-Key-No = 2\r\n              read     Stock-File key Stock-Abrev-Key invalid key\r\n                       move 21 to we-error fs-reply\r\n              end-read\r\n              if       fs-Reply = zero\r\n                       move     Stock-Record to WS-Stock-Record\r\n                       move     WS-Stock-Abrev-Key to WS-File-Key\r\n              else\r\n                       move     spaces to WS-Stock-Record\r\n              end-if\r\n              go       to aa999-main-exit\r\n     end-if.\r\n     if       File-Key-No = 3                           *> can also use start, read next\r\n              read     Stock-File key Stock-Desc      invalid key\r\n                       move 21 to we-error fs-reply\r\n              end-read\r\n              if       fs-Reply = zero\r\n                       move     Stock-Record to WS-Stock-Record\r\n                       move     WS-Stock-Desc to WS-File-Key\r\n              else\r\n                       move     spaces to WS-Stock-Record\r\n              end-if\r\n              go       to aa999-main-exit\r\n     end-if.\r\n     if       File-Key-No = 4        *> NEW 29/01/25 v .12  can also use start, read next\r\n              read     Stock-File key Stock-Location      invalid key\r\n                       move 21 to we-error fs-reply\r\n              end-read\r\n              if       fs-Reply = zero\r\n                       move     Stock-Record     to WS-Stock-Record\r\n                       move     WS-Stock-Location to WS-File-Key\r\n              else\r\n                       move     spaces to WS-Stock-Record\r\n              end-if\r\n              go       to aa999-main-exit\r\n     end-if.\r\n     move     998 to WE-Error       *> file seeks key type out of range but should never get here       998\r\n     move     99 to fs-reply\r\n     go       to aa999-main-exit.\r\n*>\r\n aa060-Process-Start.\r\n*>\r\n*>  Check for Param error 1st on start   WARNING Not logging starts\r\n*>\r\n     move     205 to WS-No-Paragraph.\r\n     perform  aa045-Eval-keys.\r\n     move     zeros to fs-reply\r\n                       WE-Error.\r\n     move     zero to Cobol-File-Status.\r\n*>\r\n     if       access-type < 5 or > 9                   *> NOT using 'not >'  Was 8 6/8/23\r\n              move 998 to WE-Error                     *> 998 Invalid calling parameter settings\r\n              go to aa999-main-exit\r\n     end-if\r\n*>\r\n*>  Now do Start primary key before read-next\r\n*>\r\n     if       File-Key-No = 1\r\n        and   fn-equal-to\r\n              start Stock-File key = Stock-Key invalid key\r\n                    move 21 to Fs-Reply\r\n                    go to aa999-main-exit\r\n              end-start\r\n     end-if\r\n     if       File-Key-No = 1\r\n        and   fn-less-than\r\n              start Stock-File key < Stock-Key invalid key\r\n                    move 21 to Fs-Reply\r\n                    go to aa999-main-exit\r\n              end-start\r\n     end-if\r\n     if       File-Key-No = 1\r\n        and   fn-greater-than\r\n              start Stock-File key > Stock-Key invalid key\r\n                    move 21 to Fs-Reply\r\n                    go to aa999-main-exit\r\n              end-start\r\n     end-if\r\n     if       File-Key-No = 1\r\n        and   fn-not-less-than\r\n              start Stock-File key not < Stock-Key invalid key\r\n                    move 21 to Fs-Reply\r\n                    go to aa999-main-exit\r\n              end-start\r\n     end-if\r\n     if       File-Key-No = 1\r\n       and    fn-not-greater-than\r\n              start Stock-File key not > Stock-Key invalid key\r\n                    move 21 to Fs-Reply\r\n                    go to aa999-main-exit\r\n              end-start\r\n     end-if\r\n     if       File-Key-No = 1\r\n              move     WS-Stock-Key to WS-File-Key\r\n              if       WS-Stock-Key (1:4) = spaces\r\n                       move     ST904 to WS-File-Key\r\n              end-if\r\n              go       to aa999-main-exit.\r\n*>\r\n*>  Now do 1st alternate key (Stock-Abrev-Key) before read-next\r\n*>\r\n     if       File-Key-No = 2\r\n        and   fn-equal-to\r\n              start Stock-File key = Stock-Abrev-Key invalid key\r\n                    move 21 to Fs-Reply\r\n                    go to aa999-main-exit\r\n              end-start\r\n     end-if.\r\n     if       File-Key-No = 2\r\n        and   fn-less-than\r\n              start Stock-File key < Stock-Abrev-Key invalid key\r\n                    move 21 to Fs-Reply\r\n                    go to aa999-main-exit\r\n              end-start\r\n     end-if.\r\n     if       File-Key-No = 2\r\n        and   fn-greater-than\r\n              start Stock-File key > Stock-Abrev-Key invalid key\r\n                    move 21 to Fs-Reply\r\n                    go to aa999-main-exit\r\n              end-start\r\n     end-if.\r\n     if       File-Key-No = 2\r\n        and   fn-not-less-than\r\n              start Stock-File key not < Stock-Abrev-Key invalid key\r\n                    move 21 to Fs-Reply\r\n                    go to aa999-main-exit\r\n              end-start\r\n     end-if.\r\n     if       File-Key-No = 2\r\n              move     WS-Stock-Abrev-Key to WS-File-Key\r\n              if       WS-Stock-Key (1:4) = spaces\r\n                       move     ST904 to WS-File-Key\r\n              end-if\r\n              go to aa999-main-exit.\r\n*>\r\n*>  Now do 2nd alternate key (Stock-Desc) before read-next\r\n*>\r\n     if       File-Key-No = 3\r\n        and   fn-equal-to\r\n              start Stock-File key = Stock-Desc invalid key\r\n                    move 21 to Fs-Reply\r\n                    go to aa999-main-exit\r\n              end-start\r\n     end-if.\r\n     if       File-Key-No = 3\r\n        and   fn-less-than\r\n              start Stock-File key < Stock-Desc invalid key\r\n                    move 21 to Fs-Reply\r\n                    go to aa999-main-exit\r\n              end-start\r\n     end-if.\r\n     if       File-Key-No = 3\r\n        and   fn-greater-than\r\n              start Stock-File key > Stock-Desc invalid key\r\n                    move 21 to Fs-Reply\r\n                    go to aa999-main-exit\r\n              end-start\r\n     end-if.\r\n     if       File-Key-No = 3\r\n        and   fn-not-less-than\r\n              start Stock-File key not < Stock-Desc invalid key\r\n                    move 21 to Fs-Reply\r\n                    go to aa999-main-exit\r\n              end-start\r\n     end-if.\r\n     if       File-Key-No = 3\r\n              move     WS-Stock-Desc to WS-File-Key\r\n              if       WS-Stock-Key (1:4) = spaces\r\n                       move     ST904 to WS-File-Key\r\n              end-if.\r\n*>\r\n*>  Now do 3nd alternate key (Stock-Location) before read-next NEW 29/01/25 v .12\r\n*>\r\n     if       File-Key-No = 4\r\n        and   fn-equal-to\r\n              start Stock-File key = Stock-Location invalid key\r\n                    move 21 to Fs-Reply\r\n                    go to aa999-main-exit\r\n              end-start\r\n     end-if.\r\n     if       File-Key-No = 4\r\n        and   fn-less-than\r\n              start Stock-File key < Stock-Location invalid key\r\n                    move 21 to Fs-Reply\r\n                    go to aa999-main-exit\r\n              end-start\r\n     end-if.\r\n     if       File-Key-No = 4\r\n        and   fn-greater-than\r\n              start Stock-File key > Stock-Location invalid key\r\n                    move 21 to Fs-Reply\r\n                    go to aa999-main-exit\r\n              end-start\r\n     end-if.\r\n     if       File-Key-No = 4\r\n        and   fn-not-less-than\r\n              start Stock-File key not < Stock-Location invalid key\r\n                    move 21 to Fs-Reply\r\n                    go to aa999-main-exit\r\n              end-start\r\n     end-if.\r\n     if       File-Key-No = 4\r\n              move     WS-Stock-Location to WS-File-Key\r\n              if       WS-Stock-Key (1:4) = spaces\r\n                       move     ST904 to WS-File-Key\r\n              end-if.\r\n     go       to aa999-main-exit.\r\n*>\r\n aa070-Process-Write.\r\n     move     206 to WS-No-Paragraph.\r\n     move     WS-Stock-Record to Stock-Record.\r\n     move     zeros to FS-Reply  WE-Error.\r\n     move     zero to Cobol-File-Status.\r\n     write    Stock-Record invalid key\r\n              move 22 to FS-Reply\r\n     end-write.\r\n     move     WS-Stock-Key to WS-File-Key.\r\n     go       to aa999-main-exit.\r\n*>\r\n aa080-Process-Delete.\r\n     move     207 to WS-No-Paragraph.\r\n     move     WS-Stock-Record to Stock-Record.\r\n     move     zeros to FS-Reply  WE-Error.\r\n     move     zero to Cobol-File-Status.\r\n     delete   Stock-File record invalid key\r\n              move 21 to FS-Reply\r\n     end-delete.\r\n     move     WS-Stock-Key to WS-File-Key.\r\n     go       to aa999-main-exit.\r\n*>\r\n aa090-Process-Rewrite.\r\n*>\r\n     move     208 to WS-No-Paragraph.\r\n     move     WS-Stock-Record to Stock-Record.\r\n     move     zeros to FS-Reply  WE-Error.\r\n     move     zero to Cobol-File-Status.\r\n     rewrite  Stock-Record invalid key\r\n              move 21 to FS-Reply\r\n     end-rewrite\r\n     move     WS-Stock-Key to WS-File-Key.\r\n     go       to aa999-main-exit.\r\n*>\r\n aa100-Bad-Function.\r\n*>\r\n*> Houston; We have a problem\r\n*>\r\n     move     999 to WE-Error.                         *> 999\r\n     move     99  to fs-reply.\r\n*>\r\n aa999-main-exit.\r\n     if       Testing-1\r\n              perform Ca-Process-Logs\r\n     end-if.\r\n*>\r\n aa-main-exit.\r\n*>\r\n*> Now have processed cobol flat file,  so ..\r\n*>\r\n aa-Exit.\r\n     exit program.\r\n*>\r\n ba-Process-RDBMS section.\r\n*>***********************\r\n*>\r\n*>********************************************************************\r\n*>  Here we call the relevent RDBMS module for this table            *\r\n*>   which will include processing any other joined tables as needed *\r\n*>********************************************************************\r\n*>\r\n ba010-Test-WS-Rec-Size.\r\n*>\r\n*>     Test on very first call only  (So do NOT use var A & B again)\r\n*>       Lets test that Data-record size is = or > than declared Rec in DAL\r\n*>          as we cant adjust at compile/run time due to ALL Cobol compilers ?\r\n*>\r\n     move     22 to WS-Log-File-no.        *> for FHlogger\r\n*>\r\n ba012-Test-WS-Rec-Size-2.\r\n*>\r\n     if       A = zero                        *> so it is being called first time\r\n              move     function Length (\r\n                                        WS-Stock-Record\r\n                                                 ) to A\r\n              move     function length (\r\n                                        Stock-Record\r\n                                                 ) to B\r\n              if   A < B                      *> COULD LET caller module deal with these errors !!!!!!!\r\n                   move 901 to WE-Error       *> 901 Programming error; temp rec length is wrong caller must stop\r\n                   move 99 to fs-reply        *> allow for last field ( FILLER) not being present in layout.\r\n              end-if\r\n              if       WE-Error = 901                  *> record length wrong so display error, accept and",
        "line": 424
      },
      {
        "type": "IF",
        "condition": "Testing-1\r\n                           perform Ca-Process-Logs\r\n                       end-if\r\n                       accept Accept-Reply at 2433\r\n                       go to ba-rdbms-exit\r\n              end-if\r\n*>\r\n*>  Not a error comparing the length of records so - -\r\n*>  Load up the DB settings from the system record as its not passed on\r\n*>           hopefully once is enough  :)\r\n*>\r\n              move     RDBMS-DB-Name to DB-Schema\r\n              move     RDBMS-User    to DB-UName\r\n              move     RDBMS-Passwd  to DB-UPass\r\n              move     RDBMS-Port    to DB-Port\r\n              move     RDBMS-Host    to DB-Host\r\n              move     RDBMS-Socket  to DB-Socket\r\n     end-if.\r\n*>\r\n ba015-Test-Ends.\r\n*>\r\n*>\r\n*>   HERE we need a CDF [Compiler Directive] to select the correct DAL based\r\n*>     on the pre SQL compiler e.g., JCs or dbpre or Prima conversions <<<<  ? >>>>>\r\n*>        Do this after system testing and pre code release.\r\n*>\r\n*>  NOW SET UP FOR JC pre-sql compiler system.\r\n*>   DAL-Datablock not needed unless using RDBMS DAL from Prima & MS Sql\r\n*>\r\n     call     \"stockMT\" using File-Access\r\n                              ACAS-DAL-Common-data\r\n\r\n                              WS-Stock-Record\r\n     end-call.\r\n*>\r\n*>   Any errors leave it to caller to recover from\r\n*>\r\n ba-rdbms-exit.\r\n     exit     section.\r\n*>   ****     *******\r\n*>\r\n Ca-Process-Logs. *> Not called on DAL access as it does it already\r\n*>**************\r\n*>\r\n     call     \"fhlogger\" using File-Access\r\n                               ACAS-DAL-Common-data.\r\n*>\r\n ca-Exit.     exit.\r\n*>\r\n end program acas011.",
        "line": 798
      }
    ],
    "evaluates": [
      {
        "content": "File-Function\r\n              when  4   *> fn-read-indexed\r\n              when  9   *> fn-start\r\n    ...",
        "line": 302,
        "whenCount": 3
      },
      {
        "content": "File-Function\r\n        when  1\r\n              go to aa020-Process-Open\r\n        when  2\r\n           ...",
        "line": 342,
        "whenCount": 9
      },
      {
        "content": "File-Function      *> Set up keys just for logging\r\n              when  4             *> fn-read-ind...",
        "line": 452,
        "whenCount": 10
      }
    ],
    "validations": []
  },
  "complexity": {
    "mccabe": 28,
    "cognitive": 47,
    "halstead": {
      "uniqueOperators": 1,
      "uniqueOperands": 62,
      "totalOperators": 72,
      "totalOperands": 144,
      "vocabulary": 63,
      "length": 216,
      "volume": 1291.092463475982
    }
  },
  "quality": {
    "gotos": [],
    "deadCode": [],
    "missingErrorHandlers": []
  },
  "sql": {
    "hasSQL": false,
    "statements": []
  },
  "cics": {
    "hasCICS": false,
    "statements": []
  }
}
