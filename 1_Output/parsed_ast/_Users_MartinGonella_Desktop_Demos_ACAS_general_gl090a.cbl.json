{
  "filePath": "/Users/MartinGonella/Desktop/Demos/ACAS/general/gl090a.cbl",
  "fileName": "gl090a.cbl",
  "timestamp": "2025-09-15T16:25:33.003Z",
  "programId": "gl090a",
  "parserUsed": "GnuCOBOL + Regex",
  "parseConfidence": 0,
  "validationStatus": "ERROR",
  "gnuCobolValidation": {
    "success": true,
    "errors": [],
    "warnings": []
  },
  "parseErrors": [
    "Cannot read properties of undefined (reading 'total')"
  ],
  "parseWarnings": [],
  "divisions": {
    "identification": true,
    "environment": true,
    "data": true,
    "procedure": true
  },
  "structure": {
    "sections": [
      {
        "name": "input-output",
        "line": 96
      },
      {
        "name": "file",
        "line": 107
      },
      {
        "name": "working-storage",
        "line": 112
      },
      {
        "name": "linkage",
        "line": 229
      },
      {
        "name": "gl090a-Main",
        "line": 244
      },
      {
        "name": "zz070-Convert-Date",
        "line": 625
      },
      {
        "name": "exit",
        "line": 653
      }
    ],
    "paragraphs": [
      {
        "name": "file-control",
        "line": 99
      },
      {
        "name": "file-defs",
        "line": 241
      },
      {
        "name": "Read-Ledger",
        "line": 276
      },
      {
        "name": "end-run",
        "line": 365
      },
      {
        "name": "main-exit",
        "line": 379
      },
      {
        "name": "goback",
        "line": 380
      },
      {
        "name": "headings",
        "line": 382
      },
      {
        "name": "accumulate",
        "line": 402
      },
      {
        "name": "detail-print",
        "line": 410
      },
      {
        "name": "total4-print",
        "line": 458
      },
      {
        "name": "total3-print",
        "line": 506
      },
      {
        "name": "total2-print",
        "line": 550
      },
      {
        "name": "total1-print",
        "line": 590
      },
      {
        "name": "zz070-Exit",
        "line": 652
      }
    ],
    "entryPoints": []
  },
  "dependencies": {
    "calls": [
      {
        "target": "SYSTEM",
        "line": 377,
        "type": "DYNAMIC",
        "using": [
          "Print-Report"
        ]
      }
    ],
    "copies": [
      {
        "name": "of",
        "line": 86,
        "replacing": null
      },
      {
        "name": "envdiv",
        "line": 95,
        "replacing": null
      },
      {
        "name": "seledger",
        "line": 102,
        "replacing": null
      },
      {
        "name": "selprint",
        "line": 103,
        "replacing": null
      },
      {
        "name": "fdledger",
        "line": 110,
        "replacing": null
      },
      {
        "name": "fdprint",
        "line": 111,
        "replacing": null
      },
      {
        "name": "print-spool-command",
        "line": 116,
        "replacing": null
      },
      {
        "name": "wsfnctn",
        "line": 118,
        "replacing": null
      },
      {
        "name": "wsledger",
        "line": 119,
        "replacing": null
      },
      {
        "name": "Test-Data-Flags",
        "line": 145,
        "replacing": null
      },
      {
        "name": "wscall",
        "line": 232,
        "replacing": null
      },
      {
        "name": "wssystem",
        "line": 233,
        "replacing": null
      },
      {
        "name": "wsnames",
        "line": 234,
        "replacing": null
      },
      {
        "name": "Proc-ACAS-FH-Calls",
        "line": 655,
        "replacing": null
      }
    ],
    "performs": [
      {
        "target": "GL-Nominal-Open-Input",
        "thru": null,
        "line": 247
      },
      {
        "target": "zz070-convert-date",
        "thru": null,
        "line": 258
      },
      {
        "target": "headings",
        "thru": null,
        "line": 274
      },
      {
        "target": "GL-Nominal-Read-Next",
        "thru": null,
        "line": 279
      },
      {
        "target": "detail-print",
        "thru": null,
        "line": 285
      },
      {
        "target": "total4-print",
        "thru": null,
        "line": 286
      },
      {
        "target": "total3-print",
        "thru": null,
        "line": 287
      },
      {
        "target": "total2-print",
        "thru": null,
        "line": 288
      },
      {
        "target": "total1-print",
        "thru": null,
        "line": 289
      },
      {
        "target": "detail-print",
        "thru": null,
        "line": 294
      },
      {
        "target": "total4-print",
        "thru": null,
        "line": 313
      },
      {
        "target": "total4-print",
        "thru": null,
        "line": 323
      },
      {
        "target": "total3-print",
        "thru": null,
        "line": 324
      },
      {
        "target": "total4-print",
        "thru": null,
        "line": 334
      },
      {
        "target": "total3-print",
        "thru": null,
        "line": 335
      },
      {
        "target": "total2-print",
        "thru": null,
        "line": 336
      },
      {
        "target": "total4-print",
        "thru": null,
        "line": 346
      },
      {
        "target": "total3-print",
        "thru": null,
        "line": 347
      },
      {
        "target": "total2-print",
        "thru": null,
        "line": 348
      },
      {
        "target": "total1-print",
        "thru": null,
        "line": 349
      },
      {
        "target": "accumulate",
        "thru": null,
        "line": 354
      },
      {
        "target": "GL-Nominal-Close",
        "thru": null,
        "line": 376
      },
      {
        "target": "headings",
        "thru": null,
        "line": 430
      },
      {
        "target": "headings",
        "thru": null,
        "line": 483
      },
      {
        "target": "headings",
        "thru": null,
        "line": 531
      },
      {
        "target": "headings",
        "thru": null,
        "line": 575
      },
      {
        "target": "headings",
        "thru": null,
        "line": 612
      }
    ]
  },
  "dataFlow": {
    "files": [],
    "moves": [
      {
        "from": "Print-Spool-Name",
        "to": "PSN",
        "line": 255
      },
      {
        "from": "1",
        "to": "File-Key-No",
        "line": 260
      },
      {
        "from": "ws-date",
        "to": "l3-date",
        "line": 263
      },
      {
        "from": "usera",
        "to": "l3-user",
        "line": 264
      },
      {
        "from": "prog-name",
        "to": "l1-prog",
        "line": 266
      },
      {
        "from": "zero",
        "to": "l-cr (1)  l-dr (1)  store-ledger (1)",
        "line": 268
      },
      {
        "from": "zero",
        "to": "l-cr (2)  l-dr (2)  store-ledger (2)",
        "line": 269
      },
      {
        "from": "zero",
        "to": "l-cr (3)  l-dr (3)  store-ledger (3)",
        "line": 270
      },
      {
        "from": "zero",
        "to": "l-cr (4)  l-dr (4)  store-ledger (4)",
        "line": 271
      },
      {
        "from": "zero",
        "to": "l-cr (5)  l-dr (5)  store-ledger (5)",
        "line": 272
      },
      {
        "from": "zero",
        "to": "y  we-error  tot-dr  tot-cr",
        "line": 273
      },
      {
        "from": "255",
        "to": "we-error",
        "line": 281
      },
      {
        "from": "zero",
        "to": "l-cr (5)\n                              l-dr (5)\n              if ledger-level = zero\n                 move  WS-Ledger-Nos  to  store-ledger (5)",
        "line": 295
      },
      {
        "from": "WS-Ledger-Nos",
        "to": "store-ledger (4)\n              go to  Read-Ledger",
        "line": 309
      },
      {
        "from": "WS-Ledger-Nos",
        "to": "store-ledger (4)\n              go to  Read-Ledger",
        "line": 314
      },
      {
        "from": "WS-Ledger-Nos",
        "to": "store-ledger (3)\n              go to  Read-Ledger",
        "line": 319
      },
      {
        "from": "WS-Ledger-Nos",
        "to": "store-ledger (3)\n              go to  Read-Ledger",
        "line": 325
      },
      {
        "from": "WS-Ledger-Nos",
        "to": "store-ledger (2)\n              go to  Read-Ledger",
        "line": 330
      },
      {
        "from": "WS-Ledger-Nos",
        "to": "store-ledger (2)\n              go to  Read-Ledger",
        "line": 337
      },
      {
        "from": "WS-Ledger-Nos",
        "to": "store-ledger (1)\n              go to  Read-Ledger",
        "line": 342
      },
      {
        "from": "WS-Ledger-Nos",
        "to": "store-ledger (1)\n              go to  Read-Ledger",
        "line": 350
      },
      {
        "from": "ledger-balance",
        "to": "l-cr (5)\n     else\n              move  ledger-balance  to  l-dr (5)",
        "line": 358
      },
      {
        "from": "WS-Ledger-Nos",
        "to": "store-ledger (5)",
        "line": 362
      },
      {
        "from": "tot-dr",
        "to": "l8-dr",
        "line": 369
      },
      {
        "from": "tot-cr",
        "to": "l8-cr",
        "line": 370
      },
      {
        "from": "page-cnt",
        "to": "l1-page",
        "line": 386
      },
      {
        "from": "spaces",
        "to": "print-record\n              write print-record after 1\n     else\n              write print-record  from  line-1 before 1\n              write print-record  from  line-3 before 1",
        "line": 391
      },
      {
        "from": "spaces",
        "to": "print-record",
        "line": 398
      },
      {
        "from": "6",
        "to": "line-cnt",
        "line": 400
      },
      {
        "from": "spaces",
        "to": "l6-account",
        "line": 415
      },
      {
        "from": "5",
        "to": "xx",
        "line": 416
      },
      {
        "from": "zero",
        "to": "l6-amount (3)  l6-amount (4)\n                            l6-amount (5)  l6-amount (6)\n                            l6-amount (7)  l6-amount (8)\n                            l6-amount (9)  l6-amount (10)",
        "line": 422
      },
      {
        "from": "zero",
        "to": "l-dr (5)  l-cr (5)",
        "line": 456
      },
      {
        "from": "spaces",
        "to": "l6-account",
        "line": 463
      },
      {
        "from": "4",
        "to": "xx",
        "line": 464
      },
      {
        "from": "zero",
        "to": "l6-amount (4)\n     else\n              subtract l-dr (4)  from  l-cr (4) giving  l6-amount (4)\n              move  zero  to  l6-amount (3)",
        "line": 469
      },
      {
        "from": "zero",
        "to": "l6-amount (1)  l6-amount (2)\n                       l6-amount (5)  l6-amount (6)\n                       l6-amount (7)  l6-amount (8)\n                       l6-amount (9)  l6-amount (10)",
        "line": 474
      },
      {
        "from": "zero",
        "to": "store-ledger (4)  l-dr (4)  l-cr (4)",
        "line": 504
      },
      {
        "from": "spaces",
        "to": "l6-account",
        "line": 511
      },
      {
        "from": "3",
        "to": "xx",
        "line": 512
      },
      {
        "from": "zero",
        "to": "l6-amount (6)\n     else\n              subtract l-dr (3)  from  l-cr (3) giving  l6-amount (6)\n              move  zero  to  l6-amount (5)",
        "line": 517
      },
      {
        "from": "zero",
        "to": "l6-amount (1)  l6-amount (2)\n                       l6-amount (3)  l6-amount (4)\n                       l6-amount (7)  l6-amount (8)\n                       l6-amount (9)  l6-amount (10)",
        "line": 522
      },
      {
        "from": "zero",
        "to": "store-ledger (3)  l-dr (3)  l-cr (3)",
        "line": 548
      },
      {
        "from": "spaces",
        "to": "l6-account",
        "line": 555
      },
      {
        "from": "2",
        "to": "xx",
        "line": 556
      },
      {
        "from": "zero",
        "to": "l6-amount (8)\n     else\n              subtract l-dr (2)  from  l-cr (2) giving  l6-amount (8)\n              move  zero  to  l6-amount (7)",
        "line": 561
      },
      {
        "from": "zero",
        "to": "l6-amount (1)  l6-amount (2)\n                       l6-amount (3)  l6-amount (4)\n                       l6-amount (5)  l6-amount (6)\n                       l6-amount (9)  l6-amount (10)",
        "line": 566
      },
      {
        "from": "zero",
        "to": "store-ledger (2)  l-dr (2)  l-cr (2)",
        "line": 588
      },
      {
        "from": "redef-ac",
        "to": "l6-account",
        "line": 595
      },
      {
        "from": "zero",
        "to": "l6-amount (10)\n     else\n              subtract l-dr (1) from l-cr (1) giving l6-amount (10)\n              move  zero  to  l6-amount (9)",
        "line": 599
      },
      {
        "from": "zero",
        "to": "l6-amount (1)  l6-amount (2)\n                       l6-amount (3)  l6-amount (4)\n                       l6-amount (5)  l6-amount (6)\n                       l6-amount (7)  l6-amount (8)",
        "line": 604
      },
      {
        "from": "spaces",
        "to": "print-record",
        "line": 614
      },
      {
        "from": "zero",
        "to": "store-ledger (1)  l-dr (1)  l-cr (1)",
        "line": 623
      },
      {
        "from": "to-day",
        "to": "ws-date",
        "line": 633
      },
      {
        "from": "1",
        "to": "Date-Form",
        "line": 636
      },
      {
        "from": "ws-days",
        "to": "ws-swap\n              move ws-month to ws-days\n              move ws-swap to ws-month\n              go to zz070-Exit",
        "line": 640
      },
      {
        "from": "\"ccyy/mm/dd\"",
        "to": "ws-date",
        "line": 647
      }
    ],
    "computes": []
  },
  "businessLogic": {
    "conditions": [
      {
        "type": "IF",
        "condition": "it breaks, you own both pieces but I will endeavour\n*> to fix it, providing you tell me about the problem.\n*>\n*> You should have received a copy of the GNU General Public License along\n*> with ACAS; see the file COPYING.  If not, write to the Free Software\n*> Foundation, 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA.\n*>\n*>*************************************************************************\n*>\n environment             division.\n*>===============================\n*>\n copy \"envdiv.cob\".\n input-output            section.\n*>------------------------------\n*>\n file-control.\n*>-----------\n*>\n*> copy \"seledger.cob\".\n copy \"selprint.cob\".\n data                    division.\n*>===============================\n*>\n file section.\n*>-----------\n*>\n*> copy \"fdledger.cob\".\n copy \"fdprint.cob\".\n working-storage section.\n*>----------------------\n*>\n 77  prog-name           pic x(16)    value \"gl090a (3.02.06)\".\n copy \"print-spool-command.cob\".\n*>\n copy \"wsfnctn.cob\".\n copy \"wsledger.cob\".\n*>\n*> REMARK OUT ANY IN USE\n*>\n 01  Dummies-4-Unused-ACAS-FH-Calls.      *> Call blk at zz080-ACAS-Calls\n     03  Default-Record         pic x.\n     03  Final-Record           pic x.\n     03  System-Record-4        pic x.\n*>     03  WS-Ledger-Record       pic x.\n     03  WS-Posting-Record      pic x.\n     03  WS-Batch-Record        pic x.\n     03  WS-IRS-Posting-Record  pic x.\n     03  WS-Stock-Audit-Record  pic x.\n     03  WS-Stock-Record        pic x.\n     03  WS-Sales-Record        pic x.\n     03  WS-Value-Record        pic x.\n     03  WS-Delivery-Record     pic x.\n     03  WS-Analysis-Record     pic x.\n     03  WS-Del-Inv-Nos-Record  pic x.\n     03  WS-Purch-Record        pic x.\n     03  WS-Pay-Record          pic x.\n     03  WS-Invoice-Record      pic x.\n     03  WS-OTM3-Record         pic x.\n     03  WS-PInvoice-Record     pic x.\n     03  WS-OTM5-Record         pic x.\n*>\n copy \"Test-Data-Flags.cob\".  *> set sw-testing to zero to stop logging.\n*>\n 01  filler.\n     03  ws-reply        pic x.\n     03  l-dr            pic 9(8)v99  comp   occurs  5.\n     03  l-cr            pic 9(8)v99  comp   occurs  5.\n     03  store-ledger    pic 9(6)     comp   occurs  5.\n     03  page-cnt        binary-char        value zero.\n     03  line-cnt        binary-char        value zero.\n     03  y               pic 99             value zero.\n     03  z               pic 99             value zero.\n     03  tot-dr          pic 9(8)v99  comp  value zero.\n     03  tot-cr          pic 9(8)v99  comp  value zero.\n     03  redef-ac.\n         05  pr-ac       pic 9999.99.\n     03  xx              pic 9.\n*>\n 01  ws-Test-Date            pic x(10).\n 01  ws-date-formats.\n     03  ws-swap             pic xx.\n     03  ws-Conv-Date        pic x(10).\n     03  ws-date             pic x(10).\n     03  ws-UK redefines ws-date.\n         05  ws-days         pic xx.\n         05  filler          pic x.\n         05  ws-month        pic xx.\n         05  filler          pic x.\n         05  ws-year         pic x(4).\n     03  ws-USA redefines ws-date.\n         05  ws-usa-month    pic xx.\n         05  filler          pic x.\n         05  ws-usa-days     pic xx.\n         05  filler          pic x.\n         05  filler          pic x(4).\n     03  ws-Intl redefines ws-date.\n         05  ws-intl-year    pic x(4).\n         05  filler          pic x.\n         05  ws-intl-month   pic xx.\n         05  filler          pic x.\n         05  ws-intl-days    pic xx.\n*>\n 01  Error-Messages.\n*> System Wide\n    03  GL013           pic x(24) value \"GL013 Hit Return to Quit\".\n*> Module specific\n    03  GL091           pic x(32) value \"GL091 Ledger File Does Not Exist\".\n*>\n 01  line-1.\n     03  l1-prog             pic x(50).\n     03  filler              pic x(27)   value \"Profit Centre Trial Balance\".\n     03  filler              pic x(47)   value spaces.\n     03  filler              pic x(5)    value \"Page \".\n     03  l1-page             pic zz9.\n*>\n 01  line-3.\n     03  l3-user             pic x(32).\n     03  filler              pic x(25)   value spaces.\n     03  l3-report           pic x(16).\n     03  filler              pic x(49)   value spaces.\n     03  l3-date             pic x(10).\n*>\n 01  line-4.\n     03  filler              pic x(50)   value \"Account      <----Detail   Level----><-------Level\".\n     03  filler              pic x(54)   value \"  4-------><-------Level  3-------><-------Level  2---\".\n     03  filler              pic x(28)   value \"----><-------Level  1------>\".\n*>\n 01  line-5.\n     03  filler              pic x(53)   value \"               Debit        Credit      Debit       C\".\n     03  filler              pic x(56)   value \"Redit      Debit       Credit      Debit       Credit   \".\n     03  filler              pic x(23)   value \"   Debit       Credit  \".\n*>\n 01  line-6.\n     03  l6-account          pic x(12).\n     03  l6-amount           pic z(7)9.99b  blank when zero occurs  10.\n 01  line-7.\n     03  filler              pic x(108)   value spaces.\n     03  filler              pic x(23)    value \" ==========  ==========\".\n*>\n 01  line-8.\n     03  filler              pic x(20)    value spaces.\n     03  filler              pic x(88)    value \"t o t a l\".\n     03  l8-dr               pic z(7)9.99b.\n     03  l8-cr               pic z(7)9.99.\n*>\n linkage section.\n*>--------------\n*>\n copy \"wscall.cob\".\n copy \"wssystem.cob\".\n copy \"wsnames.cob\".\n*>\n 01  to-day              pic x(10).\n*>\n procedure division using ws-calling-data\n                          system-record\n                          to-day\n                          file-defs.\n*>***************************************\n*>\n gl090a-Main section.\n*>******************\n*>\n     perform  GL-Nominal-Open-Input.               *> open     input  ledger-file.\n     if       fs-reply not = zero\n              display space at 0101 with erase eos\n              display GL091 at 0901 with foreground-color 4\n              display Gl013 at 1001 with foreground-color 2\n              accept ws-reply at 1026\n              go to main-exit.\n*>\n     move     Print-Spool-Name to PSN.\n     display  prog-name at 0101 with foreground-color 2 erase eos.\n     display  \"Structured Trial Balance\" at 0129 with foreground-color 2.\n     perform  zz070-convert-date.\n     display  ws-date at 0171 with foreground-color 2.\n     move     1  to File-Key-No.\n*>\n     open     output print-file.\n     move     ws-date to l3-date.\n     move     usera   to l3-user.\n     move     \"Condensed Report\"  to  l3-report.\n     move     prog-name to l1-prog.\n*>\n     move     zero  to  l-cr (1)  l-dr (1)  store-ledger (1).\n     move     zero  to  l-cr (2)  l-dr (2)  store-ledger (2).\n     move     zero  to  l-cr (3)  l-dr (3)  store-ledger (3).\n     move     zero  to  l-cr (4)  l-dr (4)  store-ledger (4).\n     move     zero  to  l-cr (5)  l-dr (5)  store-ledger (5).\n     move     zero  to  y  we-error  tot-dr  tot-cr.\n     perform  headings.\n*>\n Read-Ledger.\n*>**********\n*>\n     perform  GL-Nominal-Read-Next.            *> read     ledger-file  next at end\n     if       fs-reply = 10\n              move  255  to  we-error.\n*>\n     if       we-error = 255\n       or     ledger-n = 9999\n              perform  detail-print\n              perform  total4-print\n              perform  total3-print\n              perform  total2-print\n              perform  total1-print\n              go to    end-run.\n*>\n     if       WS-Ledger-Nos not = store-ledger (5)\n       and    store-ledger (5) not = zero\n              perform  detail-print\n              move  zero  to  l-cr (5)\n                              l-dr (5)\n              if ledger-level = zero\n                 move  WS-Ledger-Nos  to  store-ledger (5).\n\n*>\n     if       WS-Ledger-Nos = store-ledger (4)\n       or                  store-ledger (3)\n       or                  store-ledger (2)\n       or                  store-ledger (1)\n              go to  Read-Ledger.\n*>\n     if       ledger-level = 4\n       and    store-ledger (4) = zero\n              move  WS-Ledger-Nos  to  store-ledger (4)\n              go to  Read-Ledger.\n*>\n     if       ledger-level = 4\n              perform  total4-print\n              move  WS-Ledger-Nos  to  store-ledger (4)\n              go to  Read-Ledger.\n*>\n     if       ledger-level = 3\n       and    store-ledger (3) = zero\n              move  WS-Ledger-Nos  to  store-ledger (3)\n              go to  Read-Ledger.\n*>\n     if       ledger-level = 3\n              perform  total4-print\n              perform  total3-print\n              move  WS-Ledger-Nos  to  store-ledger (3)\n              go to  Read-Ledger.\n*>\n     if       ledger-level = 2\n       and    store-ledger (2) = zero\n              move  WS-Ledger-Nos  to  store-ledger (2)\n              go to  Read-Ledger.\n*>\n     if       ledger-level = 2\n              perform  total4-print\n              perform  total3-print\n              perform  total2-print\n              move  WS-Ledger-Nos  to  store-ledger (2)\n              go to  Read-Ledger.\n*>\n     if       ledger-level = 1\n       and    store-ledger (1) = zero\n              move  WS-Ledger-Nos  to  store-ledger (1)\n              go to  Read-Ledger.\n*>\n     if       ledger-level = 1\n              perform  total4-print\n              perform  total3-print\n              perform  total2-print\n              perform  total1-print\n              move  WS-Ledger-Nos  to  store-ledger (1)\n              go to  Read-Ledger.\n*>\n     if       WS-Ledger-Nos  = store-ledger (5)\n              perform  accumulate\n              go to  Read-Ledger.\n*>\n     if       ledger-balance  <  0\n              move  ledger-balance  to  l-cr (5)\n     else\n              move  ledger-balance  to  l-dr (5).\n*>\n     move     WS-Ledger-Nos  to  store-ledger (5).\n     go       to Read-Ledger.\n*>\n end-run.\n*>******\n*>\n     write    print-record  from  line-7 after 3.\n     move     tot-dr  to  l8-dr.\n     move     tot-cr  to  l8-cr.\n*>\n     write    print-record  from  line-8 after 1.\n     write    print-record  from  line-7 after 1.\n*>\n     close    print-file.                       *> ledger-file.\n     perform  GL-Nominal-Close.\n     call     \"SYSTEM\" using Print-Report.\n*>\n main-exit.\n     goback.\n*>\n headings.\n*>*******\n*>\n     add      1  to  page-cnt.\n     move     page-cnt  to  l1-page.\n*>\n     if       page-cnt not = 1\n              write print-record  from  line-1 after page\n              write print-record  from  line-3 after 1\n              move spaces to print-record\n              write print-record after 1\n     else\n              write print-record  from  line-1 before 1\n              write print-record  from  line-3 before 1.\n     write    print-record  from  line-4 after 1.\n     write    print-record  from  line-5 after 1.\n     move     spaces  to  print-record.\n     write    print-record after 1.\n     move     6 to line-cnt.\n*>\n accumulate.\n*>*********\n*>\n     if       ledger-balance  <  0\n              subtract  ledger-balance  from  l-cr (5)\n     else\n              add       ledger-balance  to    l-dr (5).\n*>\n detail-print.\n*>***********\n*>\n     divide   store-ledger (5)  by  100  giving  pr-ac.\n*>\n     move     spaces  to  l6-account.\n     move     5  to  xx.\n     string   redef-ac delimited by size into l6-account with pointer xx.\n*>\n     move     l-dr (5)  to  l6-amount (1).\n     move     l-cr (5)  to  l6-amount (2).\n*>\n     move     zero      to  l6-amount (3)  l6-amount (4)\n                            l6-amount (5)  l6-amount (6)\n                            l6-amount (7)  l6-amount (8)\n                            l6-amount (9)  l6-amount (10).\n*>\n     write    print-record  from  line-6 after 1.\n     add      1 to line-cnt.\n     if       line-cnt > Page-Lines\n              perform  headings.\n*>\n     if       store-ledger (4) not = zero\n              add  l-dr (5)  to  l-dr (4)\n              add  l-cr (5)  to  l-cr (4)\n     else\n      if store-ledger (3) not = zero\n              add  l-dr (5)  to  l-dr (3)\n              add  l-cr (5)  to  l-cr (3)\n      else\n       if store-ledger (2) not = zero\n              add  l-dr (5)  to  l-dr (2)\n              add  l-cr (5)  to  l-cr (2)\n       else\n        if store-ledger (1) not = zero\n              add  l-dr (5)  to  l-dr (1)\n              add  l-cr (5)  to  l-cr (1)\n        else\n         if l-dr (5)  >  l-cr (5)\n              add  l-dr (5)  to  tot-dr\n              subtract l-cr (5) from tot-dr\n         else\n              add  l-cr (5)  to  tot-cr\n              subtract l-dr (5) from tot-cr.\n\n*>\n     move     zero  to  l-dr (5)  l-cr (5).\n*>\n total4-print.\n*>***********\n*>\n     divide   store-ledger (4)  by  100  giving  pr-ac.\n*>\n     move     spaces  to  l6-account.\n     move     4  to  xx.\n     string   redef-ac delimited by size into l6-account with pointer xx.\n*>\n     if       l-dr (4)  >  l-cr (4)\n              subtract  l-cr (4)  from  l-dr (4) giving  l6-amount (3)\n              move  zero  to  l6-amount (4)\n     else\n              subtract l-dr (4)  from  l-cr (4) giving  l6-amount (4)\n              move  zero  to  l6-amount (3).\n*>\n     move     zero to  l6-amount (1)  l6-amount (2)\n                       l6-amount (5)  l6-amount (6)\n                       l6-amount (7)  l6-amount (8)\n                       l6-amount (9)  l6-amount (10).\n*>\n     if       store-ledger (4) not = zero\n              write  print-record  from  line-6 after 1\n              add 1 to line-cnt\n              if  line-cnt > Page-Lines\n                  perform  headings.\n*>\n     if       store-ledger (3) not = zero\n              add  l-dr (4)  to  l-dr (3)\n              add  l-cr (4)  to  l-cr (3)\n     else\n      if store-ledger (2) not = zero\n              add  l-dr (4)  to  l-dr (2)\n              add  l-cr (4)  to  l-cr (2)\n      else\n       if store-ledger (1) not = zero\n              add  l-dr (4)  to  l-dr (1)\n              add  l-cr (4)  to  l-cr (1)\n       else\n        if l-dr (4)  >  l-cr (4)\n              add  l-dr (4)  to  tot-dr\n              subtract l-cr (4) from tot-dr\n        else\n              add  l-cr (4)  to  tot-cr\n              subtract l-dr (4) from tot-cr.\n*>\n     move     zero  to  store-ledger (4)  l-dr (4)  l-cr (4).\n*>\n total3-print.\n*>***********\n*>\n     divide   store-ledger (3)  by  100  giving  pr-ac.\n*>\n     move     spaces  to  l6-account.\n     move     3  to  xx.\n     string   redef-ac delimited by size into l6-account with pointer xx.\n*>\n     if       l-dr (3)  >  l-cr (3)\n              subtract  l-cr (3)  from  l-dr (3) giving  l6-amount (5)\n              move  zero  to  l6-amount (6)\n     else\n              subtract l-dr (3)  from  l-cr (3) giving  l6-amount (6)\n              move  zero  to  l6-amount (5).\n*>\n     move     zero to  l6-amount (1)  l6-amount (2)\n                       l6-amount (3)  l6-amount (4)\n                       l6-amount (7)  l6-amount (8)\n                       l6-amount (9)  l6-amount (10).\n*>\n     if       store-ledger (3) not = zero\n              write  print-record  from  line-6 after 1\n              add 1 to line-cnt\n              if  line-cnt > Page-Lines\n                  perform  headings.\n*>\n     if       store-ledger (2) not = zero\n              add  l-dr (3)  to  l-dr (2)\n              add  l-cr (3)  to  l-cr (2)\n     else\n              if store-ledger (1) not = zero\n                 add  l-dr (3)  to  l-dr (1)\n                 add  l-cr (3)  to  l-cr (1)\n              else\n               if  l-dr (3)  >  l-cr (3)\n                   add  l-dr (3)  to  tot-dr\n                   subtract l-cr (3) from tot-dr\n               else\n                   add  l-cr (3)  to  tot-cr\n                   subtract l-dr (3) from tot-cr.\n*>\n     move     zero  to  store-ledger (3)  l-dr (3)  l-cr (3).\n*>\n total2-print.\n*>***********\n*>\n     divide   store-ledger (2)  by  100  giving  pr-ac.\n*>\n     move     spaces  to  l6-account.\n     move     2  to  xx.\n     string   redef-ac delimited by size into l6-account with pointer xx.\n*>\n     if       l-dr (2)  >  l-cr (2)\n              subtract  l-cr (2)  from  l-dr (2) giving  l6-amount (7)\n              move  zero  to  l6-amount (8)\n     else\n              subtract l-dr (2)  from  l-cr (2) giving  l6-amount (8)\n              move  zero  to  l6-amount (7).\n*>\n     move     zero to  l6-amount (1)  l6-amount (2)\n                       l6-amount (3)  l6-amount (4)\n                       l6-amount (5)  l6-amount (6)\n                       l6-amount (9)  l6-amount (10).\n*>\n     if       store-ledger (2) not = zero\n              write  print-record  from  line-6 after 1\n              add 1 to line-cnt\n              if  line-cnt > Page-Lines\n                  perform  headings.\n*>\n     if       store-ledger (1) not = zero\n              add  l-dr (2)  to  l-dr (1)\n              add  l-cr (2)  to  l-cr (1)\n     else\n              if l-dr (2)  >  l-cr (2)\n                 add  l-dr (2)  to  tot-dr\n                 subtract l-cr (2) from tot-dr\n              else\n                 add  l-cr (2)  to  tot-cr\n                 subtract l-dr (2) from tot-cr.\n*>\n     move     zero  to  store-ledger (2)  l-dr (2)  l-cr (2).\n*>\n total1-print.\n*>***********\n*>\n     divide   store-ledger (1)  by  100  giving  pr-ac.\n*>\n     move     redef-ac  to  l6-account.\n*>\n     if       l-dr (1)  >  l-cr (1)\n              subtract l-cr (1) from l-dr (1) giving l6-amount (9)\n              move  zero  to  l6-amount (10)\n     else\n              subtract l-dr (1) from l-cr (1) giving l6-amount (10)\n              move  zero  to  l6-amount (9).\n*>\n     move     zero to  l6-amount (1)  l6-amount (2)\n                       l6-amount (3)  l6-amount (4)\n                       l6-amount (5)  l6-amount (6)\n                       l6-amount (7)  l6-amount (8).\n*>\n     write    print-record  from  line-6 after 1.\n     add      1 to line-cnt.\n     if       line-cnt > Page-Lines\n              perform  headings.\n*>\n     move     spaces  to  print-record.\n     write    print-record after 1.\n     if       l-dr (1)  >  l-cr (1)\n              add  l-dr (1)  to  tot-dr\n              subtract l-cr (1) from tot-dr\n     else\n              add  l-cr (1)  to  tot-cr\n              subtract l-dr (1) from tot-cr.\n*>\n     move     zero  to  store-ledger (1)  l-dr (1)  l-cr (1).\n*>\n zz070-Convert-Date        section.\n*>********************************\n*>\n*>  Converts date in to-day to UK/USA/Intl date format\n*>****************************************************\n*> Input:   to-day\n*> output:  ws-date as uk/US/Inlt date format\n*>\n     move     to-day to ws-date.\n*>\n     if       Date-Form = zero\n              move 1 to Date-Form.\n     if       Date-UK\n              go to zz070-Exit.\n     if       Date-USA                *> swap month and days\n              move ws-days to ws-swap\n              move ws-month to ws-days\n              move ws-swap to ws-month\n              go to zz070-Exit.\n*>\n*> So its International date format\n*>\n     move     \"ccyy/mm/dd\" to ws-date.  *> swap Intl to UK form\n     move     to-day (7:4) to ws-Intl-Year.\n     move     to-day (4:2) to ws-Intl-Month.\n     move     to-day (1:2) to ws-Intl-Days.\n*>\n zz070-Exit.\n     exit     section.\n*>\n copy \"Proc-ACAS-FH-Calls.cob\".\n*>",
        "line": 83
      }
    ],
    "evaluates": [],
    "validations": []
  },
  "complexity": {
    "mccabe": 3,
    "cognitive": 1,
    "halstead": {
      "uniqueOperators": 1,
      "uniqueOperands": 65,
      "totalOperators": 57,
      "totalOperands": 114,
      "vocabulary": 66,
      "length": 171,
      "volume": 1033.5913944102956
    }
  },
  "quality": {
    "gotos": [],
    "deadCode": [],
    "missingErrorHandlers": []
  },
  "sql": {
    "hasSQL": false,
    "statements": []
  },
  "cics": {
    "hasCICS": false,
    "statements": []
  }
}
