{
  "filePath": "/Users/MartinGonella/Desktop/Demos/ACAS/common/acasirsub3.cbl",
  "fileName": "acasirsub3.cbl",
  "timestamp": "2025-09-15T16:25:37.030Z",
  "programId": "acasirsub3",
  "parserUsed": "GnuCOBOL + Regex",
  "parseConfidence": 0,
  "validationStatus": "ERROR",
  "gnuCobolValidation": {
    "success": true,
    "errors": [],
    "warnings": []
  },
  "parseErrors": [
    "Cannot read properties of undefined (reading 'total')"
  ],
  "parseWarnings": [],
  "divisions": {
    "identification": true,
    "environment": true,
    "data": true,
    "procedure": true
  },
  "structure": {
    "sections": [
      {
        "name": "input-output",
        "line": 101
      },
      {
        "name": "file",
        "line": 110
      },
      {
        "name": "working-storage",
        "line": 116
      },
      {
        "name": "Linkage",
        "line": 140
      },
      {
        "name": "aa-Process-Flat-File",
        "line": 161
      },
      {
        "name": "ba-Process-RDBMS",
        "line": 359
      },
      {
        "name": "exit",
        "line": 532
      }
    ],
    "paragraphs": [
      {
        "name": "file-control",
        "line": 102
      },
      {
        "name": "ACAS-DAL-Common-data",
        "line": 158
      },
      {
        "name": "aa010-main",
        "line": 163
      },
      {
        "name": "end-if",
        "line": 185
      },
      {
        "name": "end-evaluate",
        "line": 216
      },
      {
        "name": "aa040-Process-Read-Next",
        "line": 259
      },
      {
        "name": "end-if",
        "line": 287
      },
      {
        "name": "end-read",
        "line": 297
      },
      {
        "name": "aa070-Process-Write",
        "line": 313
      },
      {
        "name": "end-if",
        "line": 336
      },
      {
        "name": "aa100-Bad-Function",
        "line": 341
      },
      {
        "name": "aa999-main-exit",
        "line": 348
      },
      {
        "name": "end-if",
        "line": 351
      },
      {
        "name": "aa-main-exit",
        "line": 353
      },
      {
        "name": "aa-Exit",
        "line": 356
      },
      {
        "name": "ba010-Test-WS-Rec-Size",
        "line": 367
      },
      {
        "name": "ba012-Test-WS-Rec-Size-2",
        "line": 375
      },
      {
        "name": "end-if",
        "line": 415
      },
      {
        "name": "ba015-Test-Ends",
        "line": 417
      },
      {
        "name": "end-if",
        "line": 493
      },
      {
        "name": "end-if",
        "line": 514
      },
      {
        "name": "ba020-Call-DAL",
        "line": 522
      },
      {
        "name": "end-call",
        "line": 527
      },
      {
        "name": "ba-rdbms-exit",
        "line": 531
      },
      {
        "name": "ACAS-DAL-Common-data",
        "line": 539
      }
    ],
    "entryPoints": []
  },
  "dependencies": {
    "calls": [
      {
        "target": "irsdfltMT",
        "line": 523,
        "type": "DYNAMIC",
        "using": [
          "File-Access",
          "ACAS-DAL-Common-data",
          "WS-IRS-Default-Record",
          "end-call"
        ]
      },
      {
        "target": "fhlogger",
        "line": 538,
        "type": "DYNAMIC",
        "using": [
          "File-Access",
          "ACAS-DAL-Common-data"
        ]
      }
    ],
    "copies": [
      {
        "name": "for",
        "line": 47,
        "replacing": null
      },
      {
        "name": "of",
        "line": 92,
        "replacing": null
      },
      {
        "name": "envdiv",
        "line": 99,
        "replacing": null
      },
      {
        "name": "irswsdflt",
        "line": 142,
        "replacing": null
      },
      {
        "name": "wssystem",
        "line": 144,
        "replacing": null
      },
      {
        "name": "wsfnctn",
        "line": 146,
        "replacing": null
      },
      {
        "name": "wsnames",
        "line": 148,
        "replacing": null
      },
      {
        "name": "Test-Data-Flags",
        "line": 150,
        "replacing": null
      }
    ],
    "performs": [
      {
        "target": "ba-Process-RDBMS",
        "thru": null,
        "line": 61
      },
      {
        "target": "ba-Process-RDBMS",
        "thru": null,
        "line": 183
      },
      {
        "target": "ba012-Test-WS-Rec-Size-2",
        "thru": null,
        "line": 189
      },
      {
        "target": "Ca-Process-Logs",
        "thru": null,
        "line": 350
      },
      {
        "target": "Ca-Process-Logs",
        "thru": null,
        "line": 399
      },
      {
        "target": "Ca-Process-Logs",
        "thru": null,
        "line": 437
      },
      {
        "target": "ba020-Call-DAL",
        "thru": null,
        "line": 445
      },
      {
        "target": "Ca-Process-Logs",
        "thru": null,
        "line": 446
      },
      {
        "target": "ba020-Call-DAL",
        "thru": null,
        "line": 452
      },
      {
        "target": "Ca-Process-Logs",
        "thru": null,
        "line": 455
      },
      {
        "target": "ba020-Call-DAL",
        "thru": null,
        "line": 461
      },
      {
        "target": "Ca-Process-Logs",
        "thru": null,
        "line": 462
      },
      {
        "target": "Ca-Process-Logs",
        "thru": null,
        "line": 466
      },
      {
        "target": "ba020-Call-DAL",
        "thru": null,
        "line": 472
      },
      {
        "target": "ba020-Call-DAL",
        "thru": null,
        "line": 478
      },
      {
        "target": "ba020-Call-DAL",
        "thru": null,
        "line": 482
      },
      {
        "target": "Ca-Process-Logs",
        "thru": null,
        "line": 488
      },
      {
        "target": "ba020-Call-DAL",
        "thru": null,
        "line": 498
      },
      {
        "target": "ba020-Call-DAL",
        "thru": null,
        "line": 504
      },
      {
        "target": "ba020-Call-DAL",
        "thru": null,
        "line": 508
      },
      {
        "target": "Ca-Process-Logs",
        "thru": null,
        "line": 512
      }
    ]
  },
  "dataFlow": {
    "files": [],
    "moves": [
      {
        "from": "1",
        "to": "WS-Log-System",
        "line": 167
      },
      {
        "from": "12",
        "to": "WS-Log-File-No",
        "line": 168
      },
      {
        "from": "RDBMS-Flat-Statuses",
        "to": "FA-RDBMS-Flat-Statuses    *> needed for DAL? not JC/dbpre versions\n              perform ba-Process-RDBMS                                *>  Can't hurt\n              go to AA-Main-Exit\n     end-if",
        "line": 182
      },
      {
        "from": "zero",
        "to": "WE-Error               *> as in irsub3\n     move     spaces to SQL-Err SQL-Msg SQL-State",
        "line": 197
      },
      {
        "from": "zero",
        "to": "FS-Reply WE-Error\n              go to aa-Exit\n        when  2                             *> JIC but not used for irsub3 & 5\n*>              go to aa030-Process-Close\n              move zero to FS-Reply WE-Error\n              go to aa-Exit\n        when  3\n              go to aa040-Process-Read-Next\n        when  5\n        when  7                              *> write/rewrite can do the same\n              go to aa070-Process-Write      *> as file is opened as output",
        "line": 203
      },
      {
        "from": "spaces",
        "to": "WS-File-Key",
        "line": 222
      },
      {
        "from": "201",
        "to": "WS-No-Paragraph",
        "line": 223
      },
      {
        "from": "1",
        "to": "we-error\n*>                   go to aa999-Main-Exit\n*>              end-if\n*>              move     \"OPEN Input IRS Dflt File\" to WS-File-Key\n*>      else\n*>       if     fn-i-o or fn-Extend\n*>              move 997 to WE-Error\n*>              move 99  to FS-Reply\n*>              go to aa999-main-exit\n*>       else\n*>        if    fn-output\n*>              open output Default-File         *> caller should check fs-reply\n*>              move     \"OPEN Output IRS Dflt File\" to WS-File-Key\n*>        end-if\n*>       end-if\n*>     end-if",
        "line": 227
      },
      {
        "from": "zero",
        "to": "Cobol-File-Status",
        "line": 243
      },
      {
        "from": "1",
        "to": "we-error",
        "line": 245
      },
      {
        "from": "202",
        "to": "WS-No-Paragraph",
        "line": 249
      },
      {
        "from": "spaces",
        "to": "WS-File-Key",
        "line": 250
      },
      {
        "from": "zeros",
        "to": "FS-Reply WE-Error",
        "line": 252
      },
      {
        "from": "zero",
        "to": "Cobol-File-Status",
        "line": 253
      },
      {
        "from": "zero",
        "to": "File-Function\n*>                       Access-Type",
        "line": 255
      },
      {
        "from": "203",
        "to": "WS-No-Paragraph",
        "line": 264
      },
      {
        "from": "WS-IRS-Default-Record",
        "to": "Record-3\n              write   Record-3\n              close   Default-File\n              move    zero to Cobol-File-Status\n              go to aa999-Main-Exit\n     end-if\n     initialize WS-IRS-Default-Record",
        "line": 270
      },
      {
        "from": "10",
        "to": "FS-Reply\n                         WE-Error\n              move 3 to WE-Error                 *> as in irsub1\n              move spaces to\n                             SQL-Err\n                             SQL-Msg\n              move    zero to Cobol-File-Status\n              close default-file\n              go to aa999-main-exit\n     end-if",
        "line": 278
      },
      {
        "from": "10",
        "to": "WE-Error FS-Reply        *> EOF\n              move 3 to WE-Error                 *> as in irsub1\n              set Cobol-File-EoF to true\n              move 1 to Cobol-File-Status         *> JIC above dont work :)\n              move \"EOF\" to WS-File-Key           *> for logging\n              close default-file\n              go to aa999-main-exit\n     end-read",
        "line": 290
      },
      {
        "from": "1",
        "to": "we-error\n              close default-file\n              move    zero to Cobol-File-Status\n              go to aa999-main-exit",
        "line": 300
      },
      {
        "from": "Record-3",
        "to": "WS-IRS-Default-Record",
        "line": 304
      },
      {
        "from": "1",
        "to": "WS-File-Key",
        "line": 306
      },
      {
        "from": "zeros",
        "to": "WE-Error",
        "line": 307
      },
      {
        "from": "zero",
        "to": "Cobol-File-Status",
        "line": 310
      },
      {
        "from": "206",
        "to": "WS-No-Paragraph",
        "line": 317
      },
      {
        "from": "WS-IRS-Default-Record",
        "to": "Record-3",
        "line": 318
      },
      {
        "from": "zeros",
        "to": "FS-Reply  WE-Error",
        "line": 319
      },
      {
        "from": "1",
        "to": "we-error\n                 close default-file\n                 move     \"Open Output Dflt ERROR on 1\" to WS-File-Key\n                 go to aa999-main-exit\n     end-if\n     write    Record-3 from WS-IRS-Default-Record",
        "line": 326
      },
      {
        "from": "1",
        "to": "we-error\n              move     \"Open Dflt, Write, ERROR on 1\" to WS-File-Key\n     end-if",
        "line": 334
      },
      {
        "from": "999",
        "to": "WE-Error",
        "line": 345
      },
      {
        "from": "99",
        "to": "fs-reply",
        "line": 346
      },
      {
        "from": "22",
        "to": "WS-Log-File-no",
        "line": 373
      },
      {
        "from": "901",
        "to": "WE-Error       *> 901 Programming error; temp rec length is wrong caller must stop\n                   move 99 to fs-reply        *> allow for last field ( FILLER) not being present in layout",
        "line": 385
      },
      {
        "from": "spaces",
        "to": "Display-Blk\n                       string IR902          delimited by size\n                              A              delimited by size\n                              \" < \"          delimited by size\n                              \"IRS-Default-Rec = \" delimited by size\n                              B              delimited by size    into Display-Blk\n                       end-string\n                       display Display-Blk at 2301 with erase eol     *> BUT WILL REMIND ME TO SET IT UP correctly\n                       display IR901 at 2401 with erase eol\n                       if  Testing-1\n                           perform Ca-Process-Logs\n                       end-if\n                       accept Accept-Reply at 2433\n                       go to ba-rdbms-exit\n              end-if\n*>\n*>  Not a error comparing the length of records so - -\n*>  Load up the DB settings from the system record as its not passed on\n*>           hopefully once is enough  :)\n*>\n              move     RDBMS-DB-Name to DB-Schema\n              move     RDBMS-User    to DB-UName\n              move     RDBMS-Passwd  to DB-UPass\n              move     RDBMS-Port    to DB-Port\n              move     RDBMS-Host    to DB-Host\n              move     RDBMS-Socket  to DB-Socket\n     end-if",
        "line": 389
      },
      {
        "from": "zero",
        "to": "FS-Reply WE-Error\n              go      to ba-RDBMS-Exit\n     end-if\n     if       fn-close                                 *> Close ignore & close logger\n              move    zero to File-Function\n                              Access-Type\n              perform Ca-Process-Logs\n              go      to ba-RDBMS-Exit\n     end-if\n*>\n     if       fn-read-next\n              move    zero to FS-Reply WE-Error\n              set     fn-Open  to true\n              set     fn-Input to true\n              perform ba020-Call-DAL                   *> open\n *>             perform Ca-Process-Logs\n              if      Fs-Reply not = zero\n                   or WE-Error not = zero\n                      go to ba-rdbms-Exit\n              end-if\n              set     fn-Read-Next to true\n              perform ba020-Call-DAL                   *> Read\n              move    FS-Reply to WS-Save-FS-Reply     *> save the statuses\n              move    WE-Error to WS-Save-WE-Error\n              perform Ca-Process-Logs                  *> temp only during testing\n              if      FS-Reply not = zero\n                  or  WE-Error not = zero\n                      go      to ba-RDBMS-Exit\n              end-if\n              set     fn-Close to true\n              perform ba020-Call-DAL\n *>             perform Ca-Process-Logs                  *> temp only during testing\n              move    WS-Save-FS-Reply to FS-Reply     *> restore them\n              move    WS-Save-WE-Error to WE-Error\n              move    \"Open, Read, Close\" to WS-File-key\n              perform Ca-Process-Logs                  *> temp only during testing\n              go      to ba-RDBMS-Exit\n     end-if\n     if       fn-Write\n              set     fn-Open  to true\n              set     fn-I-O to true\n              perform ba020-Call-DAL                   *> Open\n              if      Fs-Reply not = zero\n                   or WE-Error not = zero\n                      go to ba-rdbms-Exit\n              end-if\n              set     fn-Write to true\n              perform ba020-Call-DAL                   *> write\n              move    FS-Reply to WS-Save-FS-Reply     *> save the statuses\n              move    WE-Error to WS-Save-WE-Error\n              set     fn-Close to true\n              perform ba020-Call-DAL\n              move    WS-Save-FS-Reply to FS-Reply     *> restore them\n              move    WS-Save-WE-Error to WE-Error\n              if      (fs-Reply not = zero or\n                      WE-Error not = zero)\n                      move    \"Open, Write failed, Close\" to WS-File-Key\n                      perform Ca-Process-Logs            *> temp only during testing\n                      set     fn-Re-write to true\n                      move zero to fs-reply we-error   *> clear if used in write\n              else\n                      go      to ba-RDBMS-Exit\n     end-if",
        "line": 431
      },
      {
        "from": "FS-Reply",
        "to": "WS-Save-FS-Reply     *> save the statuses\n              move    WE-Error to WS-Save-WE-Error\n              set     fn-Close to true\n              perform ba020-Call-DAL\n              move    WS-Save-FS-Reply to FS-Reply     *> restore them\n              move    WS-Save-WE-Error to WE-Error\n              move    \"Open, Rewrite, Close\" to WS-File-key\n              perform Ca-Process-Logs                  *> temp only during testing\n              go      to ba-RDBMS-Exit\n     end-if",
        "line": 505
      },
      {
        "from": "999",
        "to": "WE-Error",
        "line": 518
      },
      {
        "from": "99",
        "to": "FS-Reply",
        "line": 519
      }
    ],
    "computes": []
  },
  "businessLogic": {
    "conditions": [
      {
        "type": "IF",
        "condition": "it breaks, you own both pieces but I will endeavour\n*> to fix it, providing you tell me about the problem.\n*>\n*> You should have received a copy of the GNU General Public License along\n*> with ACAS; see the file COPYING.  If not, write to the Free Software\n*> Foundation, 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA.\n*>\n*>**********************************************************************************\n*>\n environment division.\n copy \"envdiv.cob\".\n*>\n input-output section.\n file-control.\n*>\n     select Default-File     assign file-35\n                             organization line sequential,\n                             access sequential,\n                             status fs-reply.\n*>\n data division.\n file section.\n*>***********\n fd  Default-File.\n*>\n 01  Record-3            pic x(264).\n*>\n working-storage section.\n*>**********************\n*>\n 77  prog-name          pic x(20)  value \"acasirsub3 (3.02.13)\".\n*>\n 77  WS-Reply           pic x      value space.\n 77  WS-Save-FS-Reply   pic 99     value zero.             *> These 2 for acasirsub3 & 5\n 77  WS-Save-WE-Error   pic 999    value zero.\n*>\n 77  A                  pic 9(4)             value zero.  *> A & B used in 1st test ONLY\n 77  B                  pic 9(4)             value zero.  *>  in ba-Process-RDBMS\n 77  Display-Blk        pic x(75)             value spaces.\n 77  Cobol-File-Status  pic 9                 value zero.\n     88  Cobol-File-Eof                       value 1.\n*>\n 01  Error-Messages.\n*> System Wide\n*> Module Specific\n     03  IR901          pic x(31) value \"IR901 Note error and hit return\".\n     03  IR902          pic x(32) value \"IR902 Program Error: Temp rec = \".\n     03  IR917          pic x(34) value \"IR917 Failure to read Default File\".\n     03  IR918          pic x(38) value \"IR918 Failure to open o/p Default File\".\n     03  IR919          pic x(35) value \"IR919 Failure to write Default File\".\n*>\n Linkage Section.\n*>**************\n copy \"irswsdflt.cob\" replacing Default-Record by WS-IRS-Default-Record.\n*>\n copy \"wssystem.cob\".\n*>\n copy \"wsfnctn.cob\".\n*>\n copy \"wsnames.cob\".\n*>\n copy \"Test-Data-Flags.cob\".  *> set sw-testing to zero to stop logging.\n*>\n Procedure Division Using System-Record\n\n                          WS-IRS-Default-Record\n\n                          File-Access\n                          File-Defs\n                          ACAS-DAL-Common-data.\n*>********************************************\n*>\n aa-Process-Flat-File Section.\n*>***************************\n aa010-main.\n*>\n*>  For logging only.\n*>\n     move     1      to WS-Log-System.   *> 1 = IRS, 2=GL, 3=SL, 4=PL, 5=Stock - used in FH logging\n     move     12     to WS-Log-File-No.  *> Cobol/RDB, File/Table within sub System.\n*>\n*> WARNING The modules acasirsub5 for Final as well as acasirsub3 for\n*>  defaults has to be modified as IRS only does a read or write\n*>   and not a direct open or close so\n*>   it has to be done here when processing RDB.\n*>\n*>   For Cobol files these have been changed to do the same so direct\n*>    calls to open and close are not needed or wanted.\n*>     so return with fs-reply & we-error = zero.\n*>\n*> Check if data files or RDBMS processing  !!\n*>\n     if       not FS-Cobol-Files-Used\n              move RDBMS-Flat-Statuses to FA-RDBMS-Flat-Statuses    *> needed for DAL? not JC/dbpre versions\n              perform ba-Process-RDBMS                                *>  Can't hurt\n              go to AA-Main-Exit\n     end-if.\n*>\n*> Test  Rec lengths first.\n*>\n     perform  ba012-Test-WS-Rec-Size-2.\n*>\n*>  File paths for Cobol File has already done in main menu module\n*>\n*>******************************************************************************\n*> So we are processing Cobol Flat files by themselves. *\n*>******************************************************************************\n*>\n     move     zero   to  WE-Error               *> as in irsub3\n     move     spaces to SQL-Err SQL-Msg SQL-State.\n*>\n     evaluate File-Function\n        when  1                             *> JIC but not used for irsub3 & 5\n*>              go to aa020-Process-Open\n              move zero to FS-Reply WE-Error\n              go to aa-Exit\n        when  2                             *> JIC but not used for irsub3 & 5\n*>              go to aa030-Process-Close\n              move zero to FS-Reply WE-Error\n              go to aa-Exit\n        when  3\n              go to aa040-Process-Read-Next\n        when  5\n        when  7                              *> write/rewrite can do the same\n              go to aa070-Process-Write      *> as file is opened as output.\n        when  other                          *> others are unused\n              go to aa100-Bad-Function\n     end-evaluate.\n*>\n*>  Should never get here but Just in case :(\n     go       to aa100-Bad-Function.\n*>\n*> aa020-Process-Open.\n*>     move     spaces to WS-File-Key.     *> for logging\n*>     move     201 to WS-No-Paragraph.\n*>     if       fn-input\n*>              open input Default-File\n*>              if   Fs-Reply not = zero  *> next 2 from irsub3\n*>                   move  1 to we-error\n*>                   go to aa999-Main-Exit\n*>              end-if\n*>              move     \"OPEN Input IRS Dflt File\" to WS-File-Key\n*>      else\n*>       if     fn-i-o or fn-Extend\n*>              move 997 to WE-Error\n*>              move 99  to FS-Reply\n*>              go to aa999-main-exit\n*>       else\n*>        if    fn-output\n*>              open output Default-File         *> caller should check fs-reply\n*>              move     \"OPEN Output IRS Dflt File\" to WS-File-Key\n*>        end-if\n*>       end-if\n*>     end-if.\n*>     move     zero to Cobol-File-Status.\n*>     if       fs-reply not = zero\n*>              move 1 to we-error.\n*>     go       to aa999-main-exit.            *> with test for dup processing\n*>\n*> aa030-Process-Close.\n*>     move     202 to WS-No-Paragraph.\n*>     move     spaces to WS-File-Key.     *> for logging\n*>     close    Default-File.\n*>*> 27/07/16 16:30     move     zeros to FS-Reply WE-Error.\n*>     move     zero to Cobol-File-Status.\n*>     move     \"CLOSE IRS Dflt File\" to WS-File-Key.\n*>     move     zero to  File-Function\n*>                       Access-Type.              *> close log file\n*>     go       to aa999-main-exit.\n*>\n aa040-Process-Read-Next.\n*>\n*>   Process READ next record Really its just a Read (one record)\n*>      NOTE change caller code to opne first\n*>\n     move     203 to WS-No-Paragraph.\n     open     input Default-File.\n     if       Fs-Reply not = zero  *> next 2 from irsub3\n              close default-file\n              open output Default-File\n              initialize WS-IRS-Default-Record\n              move    WS-IRS-Default-Record to Record-3\n              write   Record-3\n              close   Default-File\n              move    zero to Cobol-File-Status\n              go to aa999-Main-Exit\n     end-if\n     initialize WS-IRS-Default-Record.\n     if       Cobol-File-Eof          *> This block should NOT occur\n              move 10 to FS-Reply\n                         WE-Error\n              move 3 to WE-Error                 *> as in irsub1\n              move spaces to\n                             SQL-Err\n                             SQL-Msg\n              move    zero to Cobol-File-Status\n              close default-file\n              go to aa999-main-exit\n     end-if.\n     read     Default-File next record at end\n              display IR917 at 2301 with foreground-color 4  *>\n              move 10 to WE-Error FS-Reply        *> EOF\n              move 3 to WE-Error                 *> as in irsub1\n              set Cobol-File-EoF to true\n              move 1 to Cobol-File-Status         *> JIC above dont work :)\n              move \"EOF\" to WS-File-Key           *> for logging\n              close default-file\n              go to aa999-main-exit\n     end-read.\n     if       FS-Reply not = zero\n              display IR917 at 2301 with foreground-color 4  *> red\n              move 1 to we-error\n              close default-file\n              move    zero to Cobol-File-Status\n              go to aa999-main-exit.\n     move     Record-3 to  WS-IRS-Default-Record.\n*>\n     move     1   to WS-File-Key.\n     move     zeros to WE-Error.\n     move     \"Open Dflt, Read, Close on 1\" to WS-File-Key.\n     close    default-file.\n     move    zero to Cobol-File-Status.\n     go to    aa999-main-exit.\n*>\n aa070-Process-Write.\n *>\n *>  code changed to same as irsub3\n *>\n     move     206 to WS-No-Paragraph.\n *>    move     WS-IRS-Default-Record to Record-3.\n     move     zeros to FS-Reply  WE-Error.\n*>\n*>  FROM irsub3 but will make open & close calls from caller.\n*>\n     open     output Default-File.\n     if       fs-reply not = zero\n                 display IR918 at 2301 with foreground-color 4  *> red\n                 move 1 to we-error\n                 close default-file\n                 move     \"Open Output Dflt ERROR on 1\" to WS-File-Key\n                 go to aa999-main-exit\n     end-if\n     write    Record-3 from WS-IRS-Default-Record.\n     if       FS-Reply not = zero\n              display IR919 at 2301 with foreground-color 4  *> red\n              move 1 to we-error\n              move     \"Open Dflt, Write, ERROR on 1\" to WS-File-Key\n     end-if.\n     close    default-file.      *> same as irsub3\n     move     \"Open Dflt, Write, Close on 1\" to WS-File-Key.\n     go       to aa999-main-exit.\n*>\n aa100-Bad-Function.\n*>\n*> Houston; We have a problem\n*>\n     move     999 to WE-Error.                         *> 999\n     move     99  to fs-reply.\n*>\n aa999-main-exit.\n     if       Testing-1\n              perform Ca-Process-Logs\n     end-if.\n*>\n aa-main-exit.\n*>\n*> Now have processed cobol flat file,  so ..\n aa-Exit.\n     exit program.\n*>\n ba-Process-RDBMS section.\n*>***********************\n*>\n*>********************************************************************\n*>  Here we call the relevent RDBMS module for this table            *\n*>   which will include processing any other joined tables as needed *\n*>********************************************************************\n*>\n ba010-Test-WS-Rec-Size.\n*>\n*>     Test on very first call only  (So do NOT use var A & B again)\n*>       Lets test that Data-record size is = or > than declared Rec in DAL\n*>          as we cant adjust at compile/run time due to ALL Cobol compilers ?\n*>\n     move     22 to WS-Log-File-no.        *> for FHlogger\n*>\n ba012-Test-WS-Rec-Size-2.\n*>\n     if       A = zero                        *> so it is being called first time\n              move     function Length (\n                                         WS-IRS-Default-Record\n                                                 ) to A\n              move     function length (\n                                        Record-3\n                                                 ) to B\n              if   A < B                      *> COULD LET caller module deal with these errors !!!!!!!\n                   move 901 to WE-Error       *> 901 Programming error; temp rec length is wrong caller must stop\n                   move 99 to fs-reply        *> allow for last field ( FILLER) not being present in layout.\n              end-if\n              if       WE-Error = 901                  *> record length wrong so display error, accept and",
        "line": 89
      },
      {
        "type": "IF",
        "condition": "Testing-1\n                           perform Ca-Process-Logs\n                       end-if\n                       accept Accept-Reply at 2433\n                       go to ba-rdbms-exit\n              end-if\n*>\n*>  Not a error comparing the length of records so - -\n*>  Load up the DB settings from the system record as its not passed on\n*>           hopefully once is enough  :)\n*>\n              move     RDBMS-DB-Name to DB-Schema\n              move     RDBMS-User    to DB-UName\n              move     RDBMS-Passwd  to DB-UPass\n              move     RDBMS-Port    to DB-Port\n              move     RDBMS-Host    to DB-Host\n              move     RDBMS-Socket  to DB-Socket\n     end-if.\n*>\n ba015-Test-Ends.\n*>\n*>\n*>   HERE we need a CDF [Compiler Directive] to select the correct DAL based\n*>     on the pre SQL compiler e.g., JCs or dbpre or Prima conversions <<<<  ? >>>>>\n*>        Do this after system testing and pre code release.\n*>\n*>  NOW SET UP FOR JC pre-sql compiler system.\n*>   DAL-Datablock not needed unless using RDBMS DAL from Prima & MS Sql\n*>\n*>  Here we do non standard DAL things to handle open & close pre / post\n*>   to calls for Read and write.\n*>\n     if       fn-open                                  *> Open ignore\n              move    zero to FS-Reply WE-Error\n              go      to ba-RDBMS-Exit\n     end-if\n     if       fn-close                                 *> Close ignore & close logger\n              move    zero to File-Function\n                              Access-Type\n              perform Ca-Process-Logs\n              go      to ba-RDBMS-Exit\n     end-if\n*>\n     if       fn-read-next\n              move    zero to FS-Reply WE-Error\n              set     fn-Open  to true\n              set     fn-Input to true\n              perform ba020-Call-DAL                   *> open\n *>             perform Ca-Process-Logs\n              if      Fs-Reply not = zero\n                   or WE-Error not = zero\n                      go to ba-rdbms-Exit\n              end-if\n              set     fn-Read-Next to true\n              perform ba020-Call-DAL                   *> Read\n              move    FS-Reply to WS-Save-FS-Reply     *> save the statuses\n              move    WE-Error to WS-Save-WE-Error\n              perform Ca-Process-Logs                  *> temp only during testing\n              if      FS-Reply not = zero\n                  or  WE-Error not = zero\n                      go      to ba-RDBMS-Exit\n              end-if\n              set     fn-Close to true\n              perform ba020-Call-DAL\n *>             perform Ca-Process-Logs                  *> temp only during testing\n              move    WS-Save-FS-Reply to FS-Reply     *> restore them\n              move    WS-Save-WE-Error to WE-Error\n              move    \"Open, Read, Close\" to WS-File-key\n              perform Ca-Process-Logs                  *> temp only during testing\n              go      to ba-RDBMS-Exit\n     end-if\n     if       fn-Write\n              set     fn-Open  to true\n              set     fn-I-O to true\n              perform ba020-Call-DAL                   *> Open\n              if      Fs-Reply not = zero\n                   or WE-Error not = zero\n                      go to ba-rdbms-Exit\n              end-if\n              set     fn-Write to true\n              perform ba020-Call-DAL                   *> write\n              move    FS-Reply to WS-Save-FS-Reply     *> save the statuses\n              move    WE-Error to WS-Save-WE-Error\n              set     fn-Close to true\n              perform ba020-Call-DAL\n              move    WS-Save-FS-Reply to FS-Reply     *> restore them\n              move    WS-Save-WE-Error to WE-Error\n              if      (fs-Reply not = zero or\n                      WE-Error not = zero)\n                      move    \"Open, Write failed, Close\" to WS-File-Key\n                      perform Ca-Process-Logs            *> temp only during testing\n                      set     fn-Re-write to true\n                      move zero to fs-reply we-error   *> clear if used in write\n              else\n                      go      to ba-RDBMS-Exit\n     end-if.\n*>\n     if       fn-Re-write\n              set     fn-Open  to true\n              set     fn-I-O to true\n              perform ba020-Call-DAL                   *> Open\n              if      Fs-Reply not = zero\n                   or WE-Error not = zero\n                      go to ba-rdbms-Exit\n              end-if\n              set     fn-Re-write to true\n              perform ba020-Call-DAL                   *> write\n              move    FS-Reply to WS-Save-FS-Reply     *> save the statuses\n              move    WE-Error to WS-Save-WE-Error\n              set     fn-Close to true\n              perform ba020-Call-DAL\n              move    WS-Save-FS-Reply to FS-Reply     *> restore them\n              move    WS-Save-WE-Error to WE-Error\n              move    \"Open, Rewrite, Close\" to WS-File-key\n              perform Ca-Process-Logs                  *> temp only during testing\n              go      to ba-RDBMS-Exit\n     end-if.\n*>\n*> In case of bad call action that was missed.\n*>\n     move     999 to WE-Error.\n     move     99  to FS-Reply.\n     go       to ba-RDBMS-Exit.\n*>\n ba020-Call-DAL.\n     call     \"irsdfltMT\" using File-Access\n                                ACAS-DAL-Common-data\n\n                                WS-IRS-Default-Record\n     end-call.\n*>\n*>   Any errors leave it to caller to recover from\n*>\n ba-rdbms-exit.\n     exit     section.\n*>   ****     *******\n*>\n Ca-Process-Logs. *> Not called on DAL access as it does it already\n*>**************\n*>\n     call     \"fhlogger\" using File-Access\n                               ACAS-DAL-Common-data.\n*>\n ca-Exit.     exit.\n*>\n*>\n end program acasirsub3.",
        "line": 398
      }
    ],
    "evaluates": [
      {
        "content": "File-Function\n        when  1                             *> JIC but not used for irsub3 & 5\n*>     ...",
        "line": 200,
        "whenCount": 6
      }
    ],
    "validations": []
  },
  "complexity": {
    "mccabe": 11,
    "cognitive": 14,
    "halstead": {
      "uniqueOperators": 1,
      "uniqueOperands": 44,
      "totalOperators": 38,
      "totalOperands": 76,
      "vocabulary": 45,
      "length": 114,
      "volume": 626.0712529815829
    }
  },
  "quality": {
    "gotos": [],
    "deadCode": [],
    "missingErrorHandlers": []
  },
  "sql": {
    "hasSQL": false,
    "statements": []
  },
  "cics": {
    "hasCICS": false,
    "statements": []
  }
}
