{
  "filePath": "/Users/MartinGonella/Desktop/Demos/ACAS/common/slpostingMT.cbl",
  "fileName": "slpostingMT.cbl",
  "timestamp": "2025-09-15T16:25:34.426Z",
  "programId": "slpostingMT",
  "parserUsed": "GnuCOBOL + Regex",
  "parseConfidence": 0,
  "validationStatus": "ERROR",
  "gnuCobolValidation": {
    "success": true,
    "errors": [],
    "warnings": []
  },
  "parseErrors": [
    "Cannot read properties of undefined (reading 'total')"
  ],
  "parseWarnings": [],
  "divisions": {
    "identification": true,
    "environment": true,
    "data": true,
    "procedure": true
  },
  "structure": {
    "sections": [
      {
        "name": "input-output",
        "line": 191
      },
      {
        "name": "Working-Storage",
        "line": 193
      },
      {
        "name": "Linkage",
        "line": 277
      },
      {
        "name": "screen",
        "line": 291
      },
      {
        "name": "ba-ACAS-DAL-Process",
        "line": 313
      },
      {
        "name": "bb000-HV-Load",
        "line": 991
      },
      {
        "name": "exit",
        "line": 1015
      },
      {
        "name": "bb100-UnloadHVs",
        "line": 1017
      },
      {
        "name": "exit",
        "line": 1040
      },
      {
        "name": "bb200-Insert",
        "line": 1042
      },
      {
        "name": "exit",
        "line": 1181
      },
      {
        "name": "bb300-Update",
        "line": 1183
      },
      {
        "name": "exit",
        "line": 1326
      }
    ],
    "paragraphs": [
      {
        "name": "ba010-Initialise",
        "line": 324
      },
      {
        "name": "SQL-Err",
        "line": 334
      },
      {
        "name": "end-evaluate",
        "line": 365
      },
      {
        "name": "ba020-Process-Open",
        "line": 367
      },
      {
        "name": "end-string",
        "line": 375
      },
      {
        "name": "end-string",
        "line": 379
      },
      {
        "name": "end-string",
        "line": 383
      },
      {
        "name": "end-string",
        "line": 387
      },
      {
        "name": "end-string",
        "line": 391
      },
      {
        "name": "end-string",
        "line": 395
      },
      {
        "name": "ba030-Process-Close",
        "line": 411
      },
      {
        "name": "ba040-Process-Read-Next",
        "line": 426
      },
      {
        "name": "end-if",
        "line": 490
      },
      {
        "name": "ba041-Reread",
        "line": 491
      },
      {
        "name": "end-if",
        "line": 538
      },
      {
        "name": "end-if",
        "line": 544
      },
      {
        "name": "ba050-Process-Read-Indexed",
        "line": 551
      },
      {
        "name": "end-if",
        "line": 574
      },
      {
        "name": "ba051-Reselect",
        "line": 575
      },
      {
        "name": "ba070-Process-Write",
        "line": 746
      },
      {
        "name": "end-if",
        "line": 766
      },
      {
        "name": "ba080-Process-Delete",
        "line": 770
      },
      {
        "name": "end-if",
        "line": 822
      },
      {
        "name": "WS-IRS-Post-Number",
        "line": 850
      },
      {
        "name": "end-if",
        "line": 908
      },
      {
        "name": "ba090-Process-Rewrite",
        "line": 915
      },
      {
        "name": "ba100-Bad-Function",
        "line": 957
      },
      {
        "name": "ba998-Free",
        "line": 969
      },
      {
        "name": "ba999-End",
        "line": 981
      },
      {
        "name": "end-if",
        "line": 986
      },
      {
        "name": "ba999-Exit",
        "line": 988
      },
      {
        "name": "bb000-Exit",
        "line": 1014
      },
      {
        "name": "bb100-Exit",
        "line": 1039
      },
      {
        "name": "bb200-Exit",
        "line": 1180
      },
      {
        "name": "bb300-Exit",
        "line": 1325
      },
      {
        "name": "Ca-Process-Logs",
        "line": 1328
      },
      {
        "name": "ACAS-DAL-Common-data",
        "line": 1332
      }
    ],
    "entryPoints": []
  },
  "dependencies": {
    "calls": [
      {
        "target": "MySQL_errno",
        "line": 478,
        "type": "DYNAMIC",
        "using": [
          "WS-MYSQL-Error-Number",
          "if",
          "WS-MYSQL-Error-Number",
          "not",
          "=",
          "\"0",
          "\"",
          "*>",
          "set",
          "non",
          "'0'",
          "if",
          "no",
          "rows",
          "?",
          "move",
          "WS-MYSQL-Error-Number",
          "to",
          "SQL-Err",
          "call",
          "\"MySQL_error\"",
          "using",
          "WS-MYSQL-Error-Message",
          "move",
          "WS-MYSQL-Error-Message",
          "to",
          "SQL-Msg",
          "end-if",
          "*>",
          "do",
          "not",
          "really",
          "need",
          "to",
          "do",
          "this",
          "meaning",
          "the",
          "above",
          "CALL",
          "move",
          "10",
          "to",
          "fs-reply",
          "move",
          "10",
          "to",
          "WE-Error",
          "move",
          "\"No",
          "Data\"",
          "to",
          "WS-File-Key",
          "go",
          "to",
          "ba998-Free",
          "*>",
          "can",
          "clear",
          "the",
          "dup",
          "code",
          "after",
          "testing",
          "end-if",
          "move",
          "1",
          "to",
          "Most-Cursor-Set",
          "*>",
          "should",
          "test",
          "if",
          "select",
          "worked",
          "first??????",
          "end-if"
        ]
      },
      {
        "target": "MySQL_fetch_record",
        "line": 503,
        "type": "DYNAMIC",
        "using": [
          "WS-MYSQL-RESULT",
          "HV-IRS-POST-KEY",
          "HV-IRS-POST-CODE",
          "HV-IRS-POST-DAT",
          "HV-IRS-POST-DR",
          "HV-IRS-POST-CR",
          "HV-IRS-POST-AMOUNT",
          "HV-IRS-POST-LEGEND",
          "HV-IRS-VAT-AC-DEF",
          "HV-IRS-POST-VAT-SIDE",
          "HV-IRS-VAT-AMOUNT",
          "*>",
          "/MYSQL-END\\",
          "end-call",
          "*>",
          "if",
          "return-code",
          "=",
          "-1",
          "*>",
          "no",
          "more",
          "data",
          "so",
          "free",
          "cursor",
          "&",
          "return",
          "move",
          "10",
          "to",
          "fs-Reply",
          "WE-Error",
          "move",
          "\"EOF\"",
          "to",
          "WS-File-Key",
          "move",
          "zero",
          "to",
          "Most-Cursor-Set",
          "go",
          "to",
          "ba999-End",
          "end-if",
          "*>",
          "if",
          "WS-MYSQL-Count-Rows",
          "=",
          "zero",
          "call",
          "\"MySQL_errno\"",
          "using",
          "WS-MYSQL-Error-Number",
          "if",
          "WS-MYSQL-Error-Number",
          "not",
          "=",
          "\"0",
          "\"",
          "call",
          "\"MySQL_error\"",
          "using",
          "WS-MYSQL-Error-Message",
          "move",
          "10",
          "to",
          "fs-reply",
          "*>",
          "EOF",
          "equivilent",
          "!!",
          "move",
          "10",
          "to",
          "WE-Error",
          "move",
          "WS-MYSQL-Error-Number",
          "to",
          "SQL-Err",
          "*>",
          "Not",
          "really",
          "needed",
          "but",
          "help",
          "for",
          "testing",
          "move",
          "WS-MYSQL-Error-Message",
          "to",
          "SQL-Msg",
          "*>",
          "ditto",
          "initialize",
          "WS-IRS-Posting-Record",
          "with",
          "filler",
          "move",
          "\"EOF2\"",
          "to",
          "WS-File-Key",
          "end-if",
          "move",
          "zero",
          "to",
          "Most-Cursor-Set",
          "go",
          "to",
          "ba999-End",
          "end-if"
        ]
      },
      {
        "target": "MySQL_fetch_record",
        "line": 605,
        "type": "DYNAMIC",
        "using": [
          "WS-MYSQL-RESULT",
          "HV-IRS-POST-KEY",
          "HV-IRS-POST-CODE",
          "HV-IRS-POST-DAT",
          "HV-IRS-POST-DR",
          "HV-IRS-POST-CR",
          "HV-IRS-POST-AMOUNT",
          "HV-IRS-POST-LEGEND",
          "HV-IRS-VAT-AC-DEF",
          "HV-IRS-POST-VAT-SIDE",
          "HV-IRS-VAT-AMOUNT",
          "*>",
          "/MYSQL-END\\",
          "end-call",
          "*>",
          "if",
          "WS-MYSQL-Count-Rows",
          "not",
          ">",
          "zero",
          "call",
          "\"MySQL_errno\"",
          "using",
          "WS-MYSQL-Error-Number",
          "end-call",
          "if",
          "WS-MYSQL-Error-Number",
          "not",
          "=",
          "\"0",
          "\"",
          "move",
          "21",
          "to",
          "fs-reply",
          "*>",
          "from",
          "23",
          "move",
          "990",
          "to",
          "WE-Error",
          "call",
          "\"MySQL_error\"",
          "using",
          "WS-MYSQL-Error-Message",
          "move",
          "WS-MYSQL-Error-Number",
          "to",
          "SQL-Err",
          "move",
          "WS-MYSQL-Error-Message",
          "to",
          "SQL-Msg",
          "move",
          "spaces",
          "to",
          "WS-File-Key",
          "go",
          "to",
          "ba998-Free",
          "else",
          "move",
          "21",
          "to",
          "fs-reply",
          "*>",
          "from",
          "23",
          "move",
          "989",
          "to",
          "WE-Error",
          "move",
          "zero",
          "to",
          "SQL-Err",
          "move",
          "spaces",
          "to",
          "SQL-Msg",
          "move",
          "spaces",
          "to",
          "WS-File-Key",
          "go",
          "to",
          "ba998-Free",
          "end-if",
          "end-if",
          "*>",
          "row",
          "count",
          "zero",
          "should",
          "show",
          "up",
          "as",
          "a",
          "MYSQL",
          "error",
          "?",
          "perform",
          "bb100-UnloadHVs",
          "*>",
          "transfer/move",
          "HV",
          "vars",
          "to",
          "ws-Record",
          "layout",
          "move",
          "HV-IRS-POST-KEY",
          "to",
          "WS-File-Key"
        ]
      },
      {
        "target": "MySQL_errno",
        "line": 727,
        "type": "DYNAMIC",
        "using": [
          "WS-MYSQL-Error-Number",
          "if",
          "WS-MYSQL-Error-Number",
          "not",
          "=",
          "\"0",
          "\"",
          "call",
          "\"MySQL_error\"",
          "using",
          "WS-MYSQL-Error-Message",
          "move",
          "WS-MYSQL-Error-Number",
          "to",
          "SQL-Err",
          "move",
          "WS-MYSQL-Error-Message",
          "to",
          "SQL-Msg",
          "move",
          "21",
          "to",
          "fs-reply",
          "*>",
          "this",
          "may",
          "need",
          "changing",
          "for",
          "val",
          "in",
          "WE-Error!!",
          "move",
          "zero",
          "to",
          "WE-Error",
          "end-if",
          "else",
          "move",
          "zero",
          "to",
          "FS-Reply",
          "WE-Error",
          "end-if",
          "*>",
          "*>",
          "Here",
          "we",
          "need",
          "FETCH",
          "as",
          "SELECT",
          "has",
          "been",
          "issued",
          "&",
          "cursor",
          "active",
          "*>",
          "go",
          "to",
          "ba040-Process-Read-Next"
        ]
      },
      {
        "target": "MySQL_errno",
        "line": 755,
        "type": "DYNAMIC",
        "using": [
          "WS-MYSQL-Error-Number",
          "if",
          "WS-MYSQL-Error-Number",
          "not",
          "=",
          "\"0",
          "\"",
          "call",
          "\"MySQL_error\"",
          "using",
          "Ws-Mysql-Error-Message",
          "move",
          "WS-MYSQL-Error-Number",
          "to",
          "SQL-Err",
          "move",
          "WS-MYSQL-Error-Message",
          "to",
          "SQL-Msg",
          "if",
          "SQL-Err",
          "(1:4)",
          "=",
          "\"1062\"",
          "or",
          "=",
          "\"1022\"",
          "*>",
          "Dup",
          "key",
          "(rec",
          "already",
          "present)",
          "move",
          "22",
          "to",
          "fs-reply",
          "else",
          "move",
          "99",
          "to",
          "fs-reply",
          "*>",
          "this",
          "may",
          "need",
          "changing",
          "for",
          "val",
          "in",
          "WE-Error!!",
          "end-if",
          "end-if",
          "end-if"
        ]
      },
      {
        "target": "MySQL_errno",
        "line": 807,
        "type": "DYNAMIC",
        "using": [
          "WS-MYSQL-Error-Number",
          "if",
          "WS-MYSQL-Error-Number",
          "not",
          "=",
          "\"0",
          "\"",
          "call",
          "\"MySQL_error\"",
          "using",
          "Ws-Mysql-Error-Message",
          "move",
          "WS-MYSQL-Error-Number",
          "to",
          "SQL-Err",
          "move",
          "WS-MYSQL-Error-Message",
          "to",
          "SQL-Msg",
          "move",
          "99",
          "to",
          "fs-reply",
          "move",
          "995",
          "to",
          "WE-Error",
          "end-if",
          "if",
          "Testing-1",
          "perform",
          "Ca-Process-Logs",
          "end-if",
          "go",
          "to",
          "ba999-Exit",
          "else",
          "move",
          "spaces",
          "to",
          "SQL-Msg",
          "move",
          "zero",
          "to",
          "SQL-Err",
          "end-if"
        ]
      },
      {
        "target": "MySQL_query",
        "line": 843,
        "type": "DYNAMIC",
        "using": [
          "SQLCA-STATEMENT",
          "*>",
          "END-CALL",
          "*>",
          "*>",
          "So",
          "if",
          "this",
          "does",
          "not",
          "work",
          "it",
          "will",
          "be",
          "changed"
        ]
      },
      {
        "target": "MySQL_errno",
        "line": 893,
        "type": "DYNAMIC",
        "using": [
          "WS-MYSQL-Error-Number",
          "if",
          "WS-MYSQL-Error-Number",
          "not",
          "=",
          "\"0",
          "\"",
          "call",
          "\"MySQL_error\"",
          "using",
          "Ws-Mysql-Error-Message",
          "move",
          "WS-MYSQL-Error-Number",
          "to",
          "SQL-Err",
          "move",
          "WS-MYSQL-Error-Message",
          "to",
          "SQL-Msg",
          "move",
          "99",
          "to",
          "fs-reply",
          "move",
          "995",
          "to",
          "WE-Error",
          "end-if",
          "if",
          "Testing-1",
          "perform",
          "Ca-Process-Logs",
          "end-if",
          "go",
          "to",
          "ba999-Exit",
          "else",
          "*>",
          "of",
          "course",
          "there",
          "could",
          "be",
          "no",
          "data",
          "in",
          "table",
          "move",
          "spaces",
          "to",
          "SQL-Msg",
          "move",
          "zero",
          "to",
          "SQL-Err",
          "end-if"
        ]
      },
      {
        "target": "MySQL_errno",
        "line": 942,
        "type": "DYNAMIC",
        "using": [
          "WS-MYSQL-Error-Number",
          "if",
          "WS-MYSQL-Error-Number",
          "not",
          "=",
          "\"0",
          "\"",
          "call",
          "\"MySQL_error\"",
          "using",
          "Ws-Mysql-Error-Message",
          "move",
          "WS-MYSQL-Error-Number",
          "to",
          "SQL-Err",
          "move",
          "WS-MYSQL-Error-Message",
          "to",
          "SQL-Msg",
          "move",
          "99",
          "to",
          "fs-reply",
          "*>",
          "this",
          "may",
          "need",
          "changing",
          "for",
          "val",
          "in",
          "WE-Error!!",
          "move",
          "994",
          "to",
          "WE-Error",
          "end-if",
          "go",
          "to",
          "ba999-End",
          "end-if",
          "move",
          "zero",
          "to",
          "FS-Reply",
          "WE-Error"
        ]
      },
      {
        "target": "MySQL_free_result",
        "line": 977,
        "type": "DYNAMIC",
        "using": [
          "WS-MYSQL-RESULT",
          "end-call",
          "*>",
          "/MYSQL-END\\",
          "move",
          "zero",
          "to",
          "Most-Cursor-Set"
        ]
      },
      {
        "target": "fhlogger",
        "line": 1331,
        "type": "DYNAMIC",
        "using": [
          "File-Access",
          "ACAS-DAL-Common-data"
        ]
      }
    ],
    "copies": [
      {
        "name": "*>",
        "line": 134,
        "replacing": null
      },
      {
        "name": "ACAS-SQLstate-error-list",
        "line": 147,
        "replacing": null
      },
      {
        "name": "of",
        "line": 182,
        "replacing": null
      },
      {
        "name": "envdiv",
        "line": 189,
        "replacing": null
      },
      {
        "name": "mysql-variables",
        "line": 259,
        "replacing": null
      },
      {
        "name": "wsfnctn",
        "line": 281,
        "replacing": null
      },
      {
        "name": "Test-Data-Flags",
        "line": 285,
        "replacing": null
      },
      {
        "name": "wspost-irs",
        "line": 289,
        "replacing": null
      },
      {
        "name": "mysql-procedures",
        "line": 966,
        "replacing": null
      }
    ],
    "performs": [
      {
        "target": "MYSQL-1000-OPEN",
        "thru": "MYSQL-1090-EXIT",
        "line": 370
      },
      {
        "target": "MYSQL-1000-OPEN",
        "thru": "MYSQL-1090-EXIT",
        "line": 397
      },
      {
        "target": "ba998-Free",
        "thru": null,
        "line": 413
      },
      {
        "target": "MYSQL-1980-CLOSE",
        "thru": "MYSQL-1999-EXIT",
        "line": 421
      },
      {
        "target": "MYSQL-1210-COMMAND",
        "thru": "MYSQL-1219-EXIT",
        "line": 466
      },
      {
        "target": "MYSQL-1220-STORE-RESULT",
        "thru": "MYSQL-1239-EXIT",
        "line": 467
      },
      {
        "target": "bb100-UnloadHVs",
        "thru": null,
        "line": 545
      },
      {
        "target": "MYSQL-1210-COMMAND",
        "thru": "MYSQL-1219-EXIT",
        "line": 588
      },
      {
        "target": "MYSQL-1220-STORE-RESULT",
        "thru": "MYSQL-1239-EXIT",
        "line": 589
      },
      {
        "target": "bb100-UnloadHVs",
        "thru": null,
        "line": 640
      },
      {
        "target": "ba998-Free",
        "thru": null,
        "line": 659
      },
      {
        "target": "MYSQL-1210-COMMAND",
        "thru": "MYSQL-1219-EXIT",
        "line": 717
      },
      {
        "target": "MYSQL-1220-STORE-RESULT",
        "thru": "MYSQL-1239-EXIT",
        "line": 718
      },
      {
        "target": "bb000-HV-Load",
        "thru": null,
        "line": 747
      },
      {
        "target": "bb200-Insert",
        "thru": null,
        "line": 753
      },
      {
        "target": "MYSQL-1210-COMMAND",
        "thru": "MYSQL-1219-EXIT",
        "line": 804
      },
      {
        "target": "Ca-Process-Logs",
        "thru": null,
        "line": 816
      },
      {
        "target": "MYSQL-1210-COMMAND",
        "thru": "MYSQL-1219-EXIT",
        "line": 890
      },
      {
        "target": "Ca-Process-Logs",
        "thru": null,
        "line": 902
      },
      {
        "target": "Ca-Process-Logs",
        "thru": null,
        "line": 911
      },
      {
        "target": "bb000-HV-Load",
        "thru": null,
        "line": 917
      },
      {
        "target": "bb300-Update",
        "thru": null,
        "line": 935
      },
      {
        "target": "Ca-Process-Logs",
        "thru": null,
        "line": 985
      },
      {
        "target": "MYSQL-1210-COMMAND",
        "thru": "MYSQL-1219-EXIT",
        "line": 1176
      },
      {
        "target": "MYSQL-1210-COMMAND",
        "thru": "MYSQL-1219-EXIT",
        "line": 1321
      }
    ]
  },
  "dataFlow": {
    "files": [],
    "moves": [
      {
        "from": "24",
        "to": "ws-env-lines ws-lines\n     else\n              move  ws-env-lines to ws-lines\n     end-if\n*> Force Esc, PgUp, PgDown, PrtSC to be detected\n     set      ENVIRONMENT \"COB_SCREEN_EXCEPTIONS\" to \"Y\"",
        "line": 316
      },
      {
        "from": "zero",
        "to": "We-Error\n*>                        Fs-Reply",
        "line": 326
      },
      {
        "from": "spaces",
        "to": "WS-MYSQL-Error-Message\n                        WS-MYSQL-Error-Number\n                        WS-Log-Where\n                        WS-File-Key\n                        SQL-Msg\n                        SQL-Err",
        "line": 329
      },
      {
        "from": "1",
        "to": "ws-No-Paragraph",
        "line": 396
      },
      {
        "from": "zero",
        "to": "Most-Cursor-Set\n     go      to ba999-end",
        "line": 408
      },
      {
        "from": "2",
        "to": "ws-No-Paragraph",
        "line": 415
      },
      {
        "from": "spaces",
        "to": "WS-Where\n              move     1   to J\n              string   \"`\"                   delimited by size\n                       KeyName (KOR-x1)      delimited by space\n                       \"`\"                   delimited by size\n                       \" >= \"                 delimited by size\n                       '\"0000000000\"'         delimited by size\n                       ' ORDER BY '          delimited by size\n                       \"`\"                   delimited by size\n                       keyname (KOR-x1)      delimited by space\n                       \"`\"                   delimited by size\n                         ' ASC '              delimited by size\n                                      into ws-Where\n                                      with pointer J\n              end-string\n*>\n              move     ws-Where (1:J)   to WS-Log-Where       *>  For test logging\n              move     3 to ws-No-Paragraph\n*>               /MYSQL SELECT\\\n*>\n*>    Select rows\n*>\n*>                    TABLE=PSIRSPOST-REC\n           INITIALIZE WS-MYSQL-COMMAND\n           STRING \"SELECT * FROM \"\n             \"`PSIRSPOST-REC`\"\n             \" WHERE \"\n             ws-Where (1:J)      *> IRS-POST-KEY > \"0000000000\" ORDER BY PSIRSPOST-REC ASC\n            \";\"  X\"00\" INTO WS-MYSQL-COMMAND\n           PERFORM MYSQL-1210-COMMAND THRU MYSQL-1219-EXIT\n           PERFORM MYSQL-1220-STORE-RESULT THRU MYSQL-1239-EXIT\n           MOVE WS-MYSQL-RESULT TO TP-PSIRSPOST-REC\n*>               /MYSQL-END\\\n           move    \"00000\" to WS-File-Key\n              if    Testing-2\n                    display Display-Message-1 with erase eos\n              end-if\n*>\n*>  It could be an empty table so test for it\n*>\n              if       WS-MYSQL-Count-Rows = zero\n                       call  \"MySQL_errno\" using WS-MYSQL-Error-Number\n                       if    WS-MYSQL-Error-Number  not = \"0  \"    *> set non '0' if no rows ?\n                             move WS-MYSQL-Error-Number to SQL-Err\n                             call \"MySQL_error\" using WS-MYSQL-Error-Message\n                             move WS-MYSQL-Error-Message to SQL-Msg\n                       end-if       *> do not really need to do this meaning the above CALL\n                       move 10 to fs-reply\n                       move 10 to WE-Error\n                       move    \"No Data\" to WS-File-Key\n                       go to ba998-Free       *> can clear the dup code after testing\n              end-if\n              move     1 to Most-Cursor-Set    *> should test if select worked first??????\n     end-if",
        "line": 437
      },
      {
        "from": "spaces",
        "to": "WS-Log-Where",
        "line": 495
      },
      {
        "from": "4",
        "to": "ws-No-Paragraph",
        "line": 496
      },
      {
        "from": "TP-PSIRSPOST-REC",
        "to": "WS-MYSQL-RESULT\n           CALL \"MySQL_fetch_record\" USING WS-MYSQL-RESULT\n                    HV-IRS-POST-KEY\n                    HV-IRS-POST-CODE\n                    HV-IRS-POST-DAT\n                    HV-IRS-POST-DR\n                    HV-IRS-POST-CR\n                    HV-IRS-POST-AMOUNT\n                    HV-IRS-POST-LEGEND\n                    HV-IRS-VAT-AC-DEF\n                    HV-IRS-POST-VAT-SIDE\n                    HV-IRS-VAT-AMOUNT\n\n*>      /MYSQL-END\\\n     end-call\n*>\n     if       return-code = -1     *> no more data so free cursor & return\n              move 10 to fs-Reply WE-Error\n              move    \"EOF\" to WS-File-Key\n              move     zero to Most-Cursor-Set\n              go to ba999-End\n     end-if\n*>\n     if       WS-MYSQL-Count-Rows = zero\n              call  \"MySQL_errno\" using WS-MYSQL-Error-Number\n              if    WS-MYSQL-Error-Number  not = \"0  \"\n                    call \"MySQL_error\" using WS-MYSQL-Error-Message\n                    move 10 to fs-reply                  *> EOF equivilent !!\n                    move 10 to WE-Error\n                    move WS-MYSQL-Error-Number  to SQL-Err   *> Not really needed but help for testing\n                    move WS-MYSQL-Error-Message to SQL-Msg   *>  ditto\n                    initialize WS-IRS-Posting-Record with filler\n              move    \"EOF2\" to WS-File-Key\n              end-if\n              move     zero to Most-Cursor-Set\n              go to ba999-End\n     end-if",
        "line": 502
      },
      {
        "from": "zero",
        "to": "Most-Cursor-Set\n              move    \"EOF3\" to WS-File-Key\n              go to ba999-End\n     end-if",
        "line": 541
      },
      {
        "from": "HV-IRS-POST-KEY",
        "to": "WS-File-Key",
        "line": 547
      },
      {
        "from": "zero",
        "to": "fs-reply WE-Error",
        "line": 548
      },
      {
        "from": "spaces",
        "to": "WS-Where\n     move     1   to J\n     string   \"`\"                   delimited by size\n              KeyName (KOR-x1)      delimited by space\n              \"`\"                   delimited by size\n              '=\"'                  delimited by size\n              WS-IRS-Posting-Record (K:L)  delimited by size\n              '\"'                   delimited by size\n                      into WS-Where\n                        with pointer J\n     end-string\n     move     WS-Where (1:J)   to WS-Log-Where",
        "line": 560
      },
      {
        "from": "5",
        "to": "ws-No-Paragraph\n*>      /MYSQL SELECT\\\n*>\n*>    Select rows\n*>\n*>             TABLE=PSIRSPOST-REC\n           INITIALIZE WS-MYSQL-COMMAND\n           STRING \"SELECT * FROM \"\n             \"`PSIRSPOST-REC`\"\n             \" WHERE \"\n             WS-Where (1:J)\n            \";\"  X\"00\" INTO WS-MYSQL-COMMAND\n           PERFORM MYSQL-1210-COMMAND THRU MYSQL-1219-EXIT\n           PERFORM MYSQL-1220-STORE-RESULT THRU MYSQL-1239-EXIT\n           MOVE WS-MYSQL-RESULT TO TP-PSIRSPOST-REC\n*>      /MYSQL-END\\\n*>\n     if     WS-MYSQL-Count-Rows = zero\n            move 21  to fs-Reply             *> could also be 23 or 14\n            move zero to WE-Error\n            go to ba998-Free\n     end-if\n     move     6 to ws-No-Paragraph\n*>      /MYSQL FETCH\\\n*>\n*>    Fetch next record\n*>\n*>             TABLE=PSIRSPOST-REC\n           MOVE TP-PSIRSPOST-REC TO WS-MYSQL-RESULT\n           CALL \"MySQL_fetch_record\" USING WS-MYSQL-RESULT\n                    HV-IRS-POST-KEY\n                    HV-IRS-POST-CODE\n                    HV-IRS-POST-DAT\n                    HV-IRS-POST-DR\n                    HV-IRS-POST-CR\n                    HV-IRS-POST-AMOUNT\n                    HV-IRS-POST-LEGEND\n                    HV-IRS-VAT-AC-DEF\n                    HV-IRS-POST-VAT-SIDE\n                    HV-IRS-VAT-AMOUNT\n\n*>      /MYSQL-END\\\n     end-call\n*>\n     if       WS-MYSQL-Count-Rows not > zero\n              call     \"MySQL_errno\" using WS-MYSQL-Error-Number\n              end-call\n              if    WS-MYSQL-Error-Number  not = \"0  \"\n                    move 21 to fs-reply    *> from 23\n                    move 990 to WE-Error\n                    call \"MySQL_error\" using WS-MYSQL-Error-Message\n                    move WS-MYSQL-Error-Number to SQL-Err\n                    move WS-MYSQL-Error-Message to SQL-Msg\n                    move spaces to WS-File-Key\n                    go to ba998-Free\n              else\n                    move 21   to fs-reply    *> from 23\n                    move 989  to WE-Error\n                    move zero to SQL-Err\n                    move spaces to SQL-Msg\n                    move spaces to WS-File-Key\n                    go to ba998-Free\n              end-if\n     end-if                        *> row count zero should show up as a MYSQL error ?\n     perform  bb100-UnloadHVs      *> transfer/move HV vars to ws-Record layout\n     move     HV-IRS-POST-KEY to WS-File-Key",
        "line": 576
      },
      {
        "from": "zero",
        "to": "FS-Reply WE-Error",
        "line": 643
      },
      {
        "from": "99",
        "to": "FS-Reply\n              move 997 to WE-Error                     *> Invalid calling parameter settings     997\n              go to ba999-end\n     end-if\n*>\n*>  First clear any active cursors\n*>\n     if       Cursor-Active\n              perform ba998-Free",
        "line": 651
      },
      {
        "from": "spaces",
        "to": "MOST-Relation",
        "line": 668
      },
      {
        "from": "1",
        "to": "J",
        "line": 669
      },
      {
        "from": "spaces",
        "to": "WS-Where\n     string   \"`\"                   delimited by size\n              KeyName (KOR-x1)      delimited by space\n              \"`\"                   delimited by size\n              MOST-relation         delimited by space\n              '\"'                   delimited by size\n              WS-IRS-Posting-Record (K:L)       delimited by size\n              '\"'                   delimited by size\n              ' ORDER BY '          delimited by size\n              \"`\"                   delimited by size\n              keyname (KOR-x1)      delimited by space\n              \"`\"                   delimited by size\n                ' ASC  '            delimited by size\n                             into WS-Where\n                             with pointer J\n     end-string\n     move     WS-Where (1:J)  to WS-Log-Where",
        "line": 683
      },
      {
        "from": "8",
        "to": "ws-No-Paragraph\n*>      /MYSQL SELECT\\\n*>\n*>    Select rows\n*>\n*>             TABLE=PSIRSPOST-REC\n           INITIALIZE WS-MYSQL-COMMAND\n           STRING \"SELECT * FROM \"\n             \"`PSIRSPOST-REC`\"\n             \" WHERE \"\n             WS-Where (1:J)\n            \";\"  X\"00\" INTO WS-MYSQL-COMMAND\n           PERFORM MYSQL-1210-COMMAND THRU MYSQL-1219-EXIT\n           PERFORM MYSQL-1220-STORE-RESULT THRU MYSQL-1239-EXIT\n           MOVE WS-MYSQL-RESULT TO TP-PSIRSPOST-REC\n*>      /MYSQL-END\\\n*>\n     if       WS-MYSQL-Count-Rows not zero\n              move 1 to Most-Cursor-Set\n     end-if\n*>\n     if       WS-MYSQL-Count-Rows = zero\n              call  \"MySQL_errno\" using WS-MYSQL-Error-Number\n              if    WS-MYSQL-Error-Number  not = \"0  \"\n                    call \"MySQL_error\" using WS-MYSQL-Error-Message\n                    move WS-MYSQL-Error-Number  to SQL-Err\n                    move WS-MYSQL-Error-Message to SQL-Msg\n                    move 21 to fs-reply                  *> this may need changing for val in WE-Error!!\n                    move zero to WE-Error\n              end-if\n     else\n              move  zero to FS-Reply WE-Error\n     end-if\n*>\n*> Here we need FETCH as SELECT has been issued & cursor active\n*>\n     go to ba040-Process-Read-Next",
        "line": 705
      },
      {
        "from": "HV-IRS-POST-KEY",
        "to": "WS-File-Key",
        "line": 748
      },
      {
        "from": "zero",
        "to": "FS-Reply WE-Error\n     move     spaces to SQL-Msg\n     move     zero to SQL-Err\n     move     10 to ws-No-Paragraph",
        "line": 749
      },
      {
        "from": "WS-MYSQL-Error-Number",
        "to": "SQL-Err\n                    move WS-MYSQL-Error-Message to SQL-Msg\n                    if    SQL-Err (1:4) = \"1062\" or = \"1022\"   *> Dup key (rec already present)\n                          move 22 to fs-reply\n                    else\n                          move 99 to fs-reply                  *> this may need changing for val in WE-Error!!\n                    end-if\n              end-if\n     end-if",
        "line": 758
      },
      {
        "from": "spaces",
        "to": "WS-Where\n     move     1   to J\n     string   \"`\"                   delimited by size\n              KeyName (KOR-x1)      delimited by space\n              \"`\"                   delimited by size\n              '=\"'                  delimited by size\n              WS-IRS-Posting-Record (K:L)    delimited by size\n              '\"'                   delimited by size\n                      into WS-Where\n                        with pointer J\n     end-string\n     move     WS-IRS-Posting-Record (K:L)  to WS-File-Key",
        "line": 776
      },
      {
        "from": "13",
        "to": "ws-No-Paragraph",
        "line": 792
      },
      {
        "from": "WS-MYSQL-Error-Number",
        "to": "SQL-Err\n                    move WS-MYSQL-Error-Message to SQL-Msg\n                    move 99 to fs-reply\n                    move 995 to WE-Error\n              end-if\n              if       Testing-1\n                       perform Ca-Process-Logs\n              end-if\n              go to ba999-Exit\n     else\n              move spaces to SQL-Msg\n              move zero   to SQL-Err\n     end-if",
        "line": 810
      },
      {
        "from": "zero",
        "to": "FS-Reply WE-Error",
        "line": 823
      },
      {
        "from": "LOW-VALUES",
        "to": "SQLCA-STATEMENT\n*>   STRING\n*>     'DELETE ' DELIMITED SIZE\n*>     'FROM ' DELIMITED SIZE\n*>     'PSIRSPOST-REC ' DELIMITED SIZE\n*>   INTO SQLCA-STATEMENT\n*>   END-STRING\n*>   CALL 'MySQL_query' USING SQLCA-STATEMENT\n*>   END-CALL\n*>\n*> So if this does not work it will be changed",
        "line": 836
      },
      {
        "from": "99999",
        "to": "WS-IRS-Batch\n                       WS-IRS-Post-Number",
        "line": 849
      },
      {
        "from": "spaces",
        "to": "WS-Where\n     move     1   to J\n     string   \"`\"                   delimited by size\n              KeyName (KOR-x1)      delimited by space\n              \"`\"                   delimited by size\n              '<\"'                  delimited by size\n *>             Posting-Record (K:L)    delimited by size\n              WS-IRS-Post-Key              delimited by size\n              '\"'                   delimited by size\n                      into WS-Where\n                        with pointer J\n     end-string\n     move     spaces to WS-File-Key\n     string   \"Deleting back from \" delimited by size\n               WS-IRS-Post-Key             delimited by size\n                      into WS-File-Key\n     end-string                                   *> for logging\n*>     move     Posting-Record (K:L)  to WS-File-Key",
        "line": 856
      },
      {
        "from": "13",
        "to": "ws-No-Paragraph",
        "line": 878
      },
      {
        "from": "WS-MYSQL-Error-Number",
        "to": "SQL-Err\n                    move WS-MYSQL-Error-Message to SQL-Msg\n                    move 99 to fs-reply\n                    move 995 to WE-Error\n              end-if\n              if       Testing-1\n                       perform Ca-Process-Logs\n              end-if\n              go to ba999-Exit\n     else      *> of course there could be no data in table\n              move spaces to SQL-Msg\n              move zero   to SQL-Err\n     end-if",
        "line": 896
      },
      {
        "from": "zero",
        "to": "FS-Reply WE-Error",
        "line": 909
      },
      {
        "from": "17",
        "to": "ws-No-Paragraph",
        "line": 918
      },
      {
        "from": "spaces",
        "to": "WS-Where\n     move     1   to J\n     string   \"`\"                   delimited by size\n              KeyName (KOR-x1)      delimited by space\n              \"`\"                   delimited by size\n              '=\"'                  delimited by size\n              WS-IRS-Posting-Record (K:L)       delimited by size\n              '\"'                   delimited by size\n                      into WS-Where\n                        with pointer J\n     end-string\n     move     WS-Where (1:J)   to WS-Log-Where",
        "line": 923
      },
      {
        "from": "WS-MYSQL-Error-Number",
        "to": "SQL-Err\n                    move WS-MYSQL-Error-Message to SQL-Msg\n                    move 99 to fs-reply                  *> this may need changing for val in WE-Error!!\n                    move 994 to WE-Error\n              end-if\n              go to ba999-End\n     end-if\n     move     zero   to FS-Reply WE-Error",
        "line": 945
      },
      {
        "from": "zero",
        "to": "SQL-Err",
        "line": 953
      },
      {
        "from": "spaces",
        "to": "SQL-Msg",
        "line": 954
      },
      {
        "from": "990",
        "to": "WE-Error",
        "line": 961
      },
      {
        "from": "99",
        "to": "Fs-Reply",
        "line": 962
      },
      {
        "from": "20",
        "to": "ws-No-Paragraph",
        "line": 970
      },
      {
        "from": "TP-PSIRSPOST-REC",
        "to": "WS-MYSQL-RESULT\n           CALL \"MySQL_free_result\" USING WS-MYSQL-RESULT end-call\n*>      /MYSQL-END\\\n     move     zero to Most-Cursor-Set",
        "line": 976
      },
      {
        "from": "WS-IRS-Post-Key",
        "to": "HV-IRS-POST-KEY",
        "line": 1000
      },
      {
        "from": "WS-IRS-Post-Code",
        "to": "HV-IRS-POST-CODE",
        "line": 1001
      },
      {
        "from": "WS-IRS-Post-Date",
        "to": "HV-IRS-POST-DAT",
        "line": 1002
      },
      {
        "from": "WS-IRS-Post-DR",
        "to": "HV-IRS-POST-DR",
        "line": 1003
      },
      {
        "from": "WS-IRS-Post-CR",
        "to": "HV-IRS-POST-CR",
        "line": 1004
      },
      {
        "from": "WS-IRS-Post-Amount",
        "to": "HV-IRS-POST-AMOUNT",
        "line": 1005
      },
      {
        "from": "WS-IRS-Post-Legend",
        "to": "HV-IRS-POST-LEGEND",
        "line": 1006
      },
      {
        "from": "WS-IRS-Vat-AC-Def",
        "to": "HV-IRS-VAT-AC-DEF",
        "line": 1007
      },
      {
        "from": "WS-IRS-Post-Vat-Side",
        "to": "HV-IRS-POST-VAT-SIDE",
        "line": 1008
      },
      {
        "from": "WS-IRS-Vat-Amount",
        "to": "HV-IRS-VAT-AMOUNT",
        "line": 1009
      },
      {
        "from": "HV-IRS-POST-KEY",
        "to": "WS-IRS-Post-Key",
        "line": 1028
      },
      {
        "from": "HV-IRS-POST-CODE",
        "to": "WS-IRS-Post-Code",
        "line": 1029
      },
      {
        "from": "HV-IRS-POST-DAT",
        "to": "WS-IRS-Post-Date",
        "line": 1030
      },
      {
        "from": "HV-IRS-POST-DR",
        "to": "WS-IRS-Post-DR",
        "line": 1031
      },
      {
        "from": "HV-IRS-POST-CR",
        "to": "WS-IRS-Post-CR",
        "line": 1032
      },
      {
        "from": "HV-IRS-POST-AMOUNT",
        "to": "WS-IRS-Post-Amount",
        "line": 1033
      },
      {
        "from": "HV-IRS-POST-LEGEND",
        "to": "WS-IRS-Post-Legend",
        "line": 1034
      },
      {
        "from": "HV-IRS-VAT-AC-DEF",
        "to": "WS-IRS-Vat-AC-Def",
        "line": 1035
      },
      {
        "from": "HV-IRS-POST-VAT-SIDE",
        "to": "WS-IRS-Post-Vat-Side",
        "line": 1036
      },
      {
        "from": "HV-IRS-VAT-AMOUNT",
        "to": "WS-IRS-Vat-Amount",
        "line": 1037
      },
      {
        "from": "1",
        "to": "WS-MYSQL-I\n           STRING 'INSERT INTO '\n                    '`PSIRSPOST-REC` SET '\n              INTO WS-MYSQL-COMMAND\n              WITH POINTER WS-MYSQL-I end-string\n*>\n           STRING '`IRS-POST-KEY`=\"' INTO WS-MYSQL-COMMAND\n                   WITH POINTER WS-MYSQL-I end-string\n           MOVE HV-IRS-POST-KEY\n             TO WS-MYSQL-EDIT\n           STRING FUNCTION TRIM (WS-MYSQL-EDIT(03:18))\n             INTO WS-MYSQL-COMMAND\n             WITH POINTER WS-MYSQL-I end-string\n           STRING '\"' INTO WS-MYSQL-COMMAND\n           WITH POINTER WS-MYSQL-I end-string\n           STRING ', 'INTO WS-MYSQL-COMMAND\n           WITH POINTER WS-MYSQL-I end-string\n*>\n           STRING '`IRS-POST-CODE`=\"' INTO WS-MYSQL-COMMAND\n                   WITH POINTER WS-MYSQL-I end-string\n           STRING FUNCTION TRIM (HV-IRS-POST-CODE,TRAILING)\n                  '\"'\n                   INTO WS-MYSQL-COMMAND\n                   WITH POINTER WS-MYSQL-I end-string\n           STRING ', 'INTO WS-MYSQL-COMMAND\n           WITH POINTER WS-MYSQL-I end-string\n*>\n           STRING '`IRS-POST-DAT`=\"' INTO WS-MYSQL-COMMAND\n                   WITH POINTER WS-MYSQL-I end-string\n           STRING FUNCTION TRIM (HV-IRS-POST-DAT,TRAILING)\n                  '\"'\n                   INTO WS-MYSQL-COMMAND\n                   WITH POINTER WS-MYSQL-I end-string\n           STRING ', 'INTO WS-MYSQL-COMMAND\n           WITH POINTER WS-MYSQL-I end-string\n*>\n           STRING '`IRS-POST-DR`=\"' INTO WS-MYSQL-COMMAND\n                   WITH POINTER WS-MYSQL-I end-string\n           MOVE HV-IRS-POST-DR\n             TO WS-MYSQL-EDIT\n           STRING FUNCTION TRIM (WS-MYSQL-EDIT(11:10))\n             INTO WS-MYSQL-COMMAND\n             WITH POINTER WS-MYSQL-I end-string\n           STRING '\"' INTO WS-MYSQL-COMMAND\n           WITH POINTER WS-MYSQL-I end-string\n           STRING ', 'INTO WS-MYSQL-COMMAND\n           WITH POINTER WS-MYSQL-I end-string\n*>\n           STRING '`IRS-POST-CR`=\"' INTO WS-MYSQL-COMMAND\n                   WITH POINTER WS-MYSQL-I end-string\n           MOVE HV-IRS-POST-CR\n             TO WS-MYSQL-EDIT\n           STRING FUNCTION TRIM (WS-MYSQL-EDIT(11:10))\n             INTO WS-MYSQL-COMMAND\n             WITH POINTER WS-MYSQL-I end-string\n           STRING '\"' INTO WS-MYSQL-COMMAND\n           WITH POINTER WS-MYSQL-I end-string\n           STRING ', 'INTO WS-MYSQL-COMMAND\n           WITH POINTER WS-MYSQL-I end-string\n*>\n           STRING '`IRS-POST-AMOUNT`=\"' INTO WS-MYSQL-COMMAND\n                   WITH POINTER WS-MYSQL-I end-string\n           MOVE HV-IRS-POST-AMOUNT\n             TO WS-MYSQL-EDIT\n           STRING FUNCTION TRIM (WS-MYSQL-EDIT(14:07))\n             INTO WS-MYSQL-COMMAND\n             WITH POINTER WS-MYSQL-I end-string\n           STRING \"",
        "line": 1051
      },
      {
        "from": "HV-IRS-VAT-AC-DEF",
        "to": "WS-MYSQL-EDIT\n           STRING FUNCTION TRIM (WS-MYSQL-EDIT(18:03))\n             INTO WS-MYSQL-COMMAND\n             WITH POINTER WS-MYSQL-I end-string\n           STRING '\"' INTO WS-MYSQL-COMMAND\n           WITH POINTER WS-MYSQL-I end-string\n           STRING ', 'INTO WS-MYSQL-COMMAND\n           WITH POINTER WS-MYSQL-I end-string\n*>\n           STRING '`IRS-POST-VAT-SIDE`=\"' INTO WS-MYSQL-COMMAND\n                   WITH POINTER WS-MYSQL-I end-string\n           STRING FUNCTION TRIM (HV-IRS-POST-VAT-SIDE,TRAILING)\n                  '\"'\n                   INTO WS-MYSQL-COMMAND\n                   WITH POINTER WS-MYSQL-I end-string\n           STRING ', 'INTO WS-MYSQL-COMMAND\n           WITH POINTER WS-MYSQL-I end-string\n*>\n           STRING '`IRS-VAT-AMOUNT`=\"' INTO WS-MYSQL-COMMAND\n                   WITH POINTER WS-MYSQL-I end-string\n           MOVE HV-IRS-VAT-AMOUNT\n             TO WS-MYSQL-EDIT\n           STRING FUNCTION TRIM (WS-MYSQL-EDIT(14:07))\n             INTO WS-MYSQL-COMMAND\n             WITH POINTER WS-MYSQL-I end-string\n           STRING \"",
        "line": 1139
      },
      {
        "from": "1",
        "to": "WS-MYSQL-I\n           STRING 'UPDATE '\n                    '`PSIRSPOST-REC` SET '\n              INTO WS-MYSQL-COMMAND\n              WITH POINTER WS-MYSQL-I end-string\n*>\n           STRING '`IRS-POST-KEY`=\"' INTO WS-MYSQL-COMMAND\n                   WITH POINTER WS-MYSQL-I end-string\n           MOVE HV-IRS-POST-KEY\n             TO WS-MYSQL-EDIT\n           STRING FUNCTION TRIM (WS-MYSQL-EDIT(03:18))\n             INTO WS-MYSQL-COMMAND\n             WITH POINTER WS-MYSQL-I end-string\n           STRING '\"' INTO WS-MYSQL-COMMAND\n           WITH POINTER WS-MYSQL-I end-string\n           STRING ', 'INTO WS-MYSQL-COMMAND\n           WITH POINTER WS-MYSQL-I end-string\n*>\n           STRING '`IRS-POST-CODE`=\"' INTO WS-MYSQL-COMMAND\n                   WITH POINTER WS-MYSQL-I end-string\n           STRING FUNCTION TRIM (HV-IRS-POST-CODE,TRAILING)\n                  '\"'\n                   INTO WS-MYSQL-COMMAND\n                   WITH POINTER WS-MYSQL-I end-string\n           STRING ', 'INTO WS-MYSQL-COMMAND\n           WITH POINTER WS-MYSQL-I end-string\n*>\n           STRING '`IRS-POST-DAT`=\"' INTO WS-MYSQL-COMMAND\n                   WITH POINTER WS-MYSQL-I end-string\n           STRING FUNCTION TRIM (HV-IRS-POST-DAT,TRAILING)\n                  '\"'\n                   INTO WS-MYSQL-COMMAND\n                   WITH POINTER WS-MYSQL-I end-string\n           STRING ', 'INTO WS-MYSQL-COMMAND\n           WITH POINTER WS-MYSQL-I end-string\n*>\n           STRING '`IRS-POST-DR`=\"' INTO WS-MYSQL-COMMAND\n                   WITH POINTER WS-MYSQL-I end-string\n           MOVE HV-IRS-POST-DR\n             TO WS-MYSQL-EDIT\n           STRING FUNCTION TRIM (WS-MYSQL-EDIT(11:10))\n             INTO WS-MYSQL-COMMAND\n             WITH POINTER WS-MYSQL-I end-string\n           STRING '\"' INTO WS-MYSQL-COMMAND\n           WITH POINTER WS-MYSQL-I end-string\n           STRING ', 'INTO WS-MYSQL-COMMAND\n           WITH POINTER WS-MYSQL-I end-string\n*>\n           STRING '`IRS-POST-CR`=\"' INTO WS-MYSQL-COMMAND\n                   WITH POINTER WS-MYSQL-I end-string\n           MOVE HV-IRS-POST-CR\n             TO WS-MYSQL-EDIT\n           STRING FUNCTION TRIM (WS-MYSQL-EDIT(11:10))\n             INTO WS-MYSQL-COMMAND\n             WITH POINTER WS-MYSQL-I end-string\n           STRING '\"' INTO WS-MYSQL-COMMAND\n           WITH POINTER WS-MYSQL-I end-string\n           STRING ', 'INTO WS-MYSQL-COMMAND\n           WITH POINTER WS-MYSQL-I end-string\n*>\n           STRING '`IRS-POST-AMOUNT`=\"' INTO WS-MYSQL-COMMAND\n                   WITH POINTER WS-MYSQL-I end-string\n           MOVE HV-IRS-POST-AMOUNT\n             TO WS-MYSQL-EDIT\n           STRING FUNCTION TRIM (WS-MYSQL-EDIT(14:07))\n             INTO WS-MYSQL-COMMAND\n             WITH POINTER WS-MYSQL-I end-string\n           STRING \"",
        "line": 1192
      },
      {
        "from": "HV-IRS-VAT-AC-DEF",
        "to": "WS-MYSQL-EDIT\n           STRING FUNCTION TRIM (WS-MYSQL-EDIT(18:03))\n             INTO WS-MYSQL-COMMAND\n             WITH POINTER WS-MYSQL-I end-string\n           STRING '\"' INTO WS-MYSQL-COMMAND\n           WITH POINTER WS-MYSQL-I end-string\n           STRING ', 'INTO WS-MYSQL-COMMAND\n           WITH POINTER WS-MYSQL-I end-string\n*>\n           STRING '`IRS-POST-VAT-SIDE`=\"' INTO WS-MYSQL-COMMAND\n                   WITH POINTER WS-MYSQL-I end-string\n           STRING FUNCTION TRIM (HV-IRS-POST-VAT-SIDE,TRAILING)\n                  '\"'\n                   INTO WS-MYSQL-COMMAND\n                   WITH POINTER WS-MYSQL-I end-string\n           STRING ', 'INTO WS-MYSQL-COMMAND\n           WITH POINTER WS-MYSQL-I end-string\n*>\n           STRING '`IRS-VAT-AMOUNT`=\"' INTO WS-MYSQL-COMMAND\n                   WITH POINTER WS-MYSQL-I end-string\n           MOVE HV-IRS-VAT-AMOUNT\n             TO WS-MYSQL-EDIT\n           STRING FUNCTION TRIM (WS-MYSQL-EDIT(14:07))\n             INTO WS-MYSQL-COMMAND\n             WITH POINTER WS-MYSQL-I end-string\n           STRING \"",
        "line": 1280
      }
    ],
    "computes": []
  },
  "businessLogic": {
    "conditions": [
      {
        "type": "IF",
        "condition": "RDBMS (Relational DataBase Management Systems) is in use it will be\n*>                      called by the specific module to handle similar processing as a Cobol\n*>                      flat file and will pass the equivelent\n*>                      RDB (Relational DataBase) row as a Cobol file record (01 level) moving\n*>                      row by row to the correct Cobol flat file fields as required.\n*>\n*>                      RDB DAL (Data Access Layer) modules are individually modified to handle:\n*>                      MS SQL server, Mysql, DB2, Postgres and Oracle as available and tested.\n*>                      These are contained in seperate directories for each RDB, eg\n*>                       'MSSQL' (MS SQL Server), 'Mysql', 'DB2', 'Postgres'. 'Oracle'.\n*>                       You need to compile from the correct directory for the specific\n*>                       RDB you will use and have installed along with all of the development\n*>                       libraries and include files etc using the correct pre-compiler tool\n*>                       to process the 'EXEC SQL' code converting to Cobol calls etc.\n*>                       see the RDB specific ACAS notes.\n*>\n*>                      For specific SQL servers supported, the pre-compiler system is included\n*>                       where ever possible but for some, copyright reasons may prevent\n*>                       inclusion. In some cases for one specific RDB more than one precompiler\n*>                       is used as an experiment to help find the ideal one to use.\n*>\n*>                      In addition:\n*>                        If the system has been set up to (see the System File set up via the\n*>                        main menu module for each sub system), it will also process BOTH flat\n*>                        file  AND the correct rdb tables,\n*>\n*>                        it will write/delete/update etc to both but read from 1=Flat and be\n*>                        overwritten by the rdb access if data is present.\n*>                       This will help in transferring the Cobol flat files to rdb tables.\n*>\n*>                      If you wish to convert a running ACAS system over from Flat files\n*>                      to RDBMS see below. However it is recommended to use the Duplicate\n*>                      processing of files/table as outlined above where no or very low\n*>                      data records exist:\n*>\n*>                      Depending on the RDB you wish to use there is\n*>                      also, included LMs (Load Modules) to convert each ISAM\n*>                      (Indexed Sequential) file to the rdb database tables if you wish to\n*>                      convert the system in one hit, without using the Duplicate file/RDB\n*>                      processing procedures. These will also need to be compiled from the\n*>                      specific LM directory that contains the rdb DAL modules.\n*>                      These will be very RDB specific.\n*>\n*>                      For a existing running ACAS system using the Load modules AND\n*>                      not using the dup processing process as indicated above is the\n*>                      recommended way to go.\n*>**\n*>  File Handling:\n*>     Uses the Global Error / Access logging file within the acas0nn module.\n*>**\n*> Called by Modules:\n*>                      acas008 - irsposting Cobol Handler. irsub4 replacement.\n*>\n*>**\n*> Error Messages Used.\n*>                      SM004 SQL Err no in 'mysql-procedures'\n*>                      SM901 Note error and hit return.\n*>**\n*> Version.             1.00 17/06/2016.\n*>\n*>**\n*> Changes.\n*> 15/11/16 vbc - .06 Taken from irsnominalMT & modified for IRS processing & based on\n*>                    irsub4.\n*> 01/03/18 vbc - .11 Renamed error messages to SM901, SM004 as needed.\n*> 16/04/24 vbc       Copyright notice update superseding all previous notices.\n*>**\n*>  Module USAGE\n*>**************\n*>\n*>    On Entry:         Set up Linkage areas -\n*>    ********              WS-IRS-Posting-Record\n*>                                          = Contents of data record to be written/read\n*>                          File-Access = File-Function as needed.\n*>                                        Access-Type   as needed.\n*>                          File-Defs (File-Definitions) = Paths set up.\n*>\n*>    On Exit:          Linkage contains:\n*>    *******               Record = containing a read data record or table row\n*>                          Fs-Reply = 0, 99 or other value where\n*>                                     0  = Operation completed successfully\n*>                                     10 = End of (Cobol) File returned to calling module only.\n*>                                     21 = Invalid key on START OR key not found\n*>                                     22 - Attempt to duplicate a key value.\n*>                                     23 = Key not found.     from read indexed\n*>                                     99 = Indicates an error see WE-Error, SQL-ERR/MSG for more info\n*>                          WE-Error   0    = Operation completed successfully\n*>\n*>                                     999  = Not used here - Yet.\n*>                                     998* = File-Key-No Out Of Range not 1, 2 or 3.\n*>                                     997* = Access-Type wrong (< 5 or > 8)\n*>                                     996* = File Delete key out of range (not = 1 or 2)\n*>                                     995* = During Delete SQLSTATE not '00000' investigate using MSG-Err/Msg\n*>                                     994* = During Rewrite,                     ^^ see above ^^\n*>                                     992* = Invalid Function requested in File-Function\n*>                                     990* = Unknown and unexpected error, again ^^ see above ^^\n*>                                     989* = Unexpected error on Read-Indexed, investigate as above.\n*>                                     911* = Rdb Error during initializing,\n*>                                            possibly can not connect to database\n*>                                             Check connect data and\n*>                                             see SQL-Err & SQL-MSG\n*>                                            Produced by Mysql-1100-Db-Error in copy\n*>                                            module mysql-procedure.\n*>                                     910* = Table locked > 5 seconds\n*>                                     901  = File Def Record size not =< than ws record size\n*>                                            Module needs ws definition changing to correct size\n*>                                            FATAL, Stop using system, fix source code\n*>                                            and recompile before using system again.\n*>                                     Other = any other rdbms errors see specific\n*>                                             (Rdbms) manual\n*>                          SQL-Err  = Error code from RDBMS is set if above 2 are non zero\n*>                          SQL-Msg  = Non space providing more info if SQL-Err non '00000'\n*>                                     * = FS-Reply = 99.\n*>\n copy \"ACAS-SQLstate-error-list.cob\".\n*>\n*>       During testing a log file will be created containing datetime stamp, task and return codes\n*>       for both FS-Reply and WE-Error and table used - in this case the IRS Postings File.\n*>       WARNING - This file could get large so needs manually deleting after examination.\n*>\n*>       NOTE that the value in SQL-Err is the standard ANSI RDBMS error code to help keep\n*>         DAL handler changes to a minimum when reusing code for other RDBs - hopefully\n*>\n*>********************************************************************************************\n*>\n*> Copyright Notice.\n*> ****************\n*>\n*> This notice supersedes all prior copyright notices & was updated 2024-04-16.\n*>\n*> These files and programs are part of the Applewood Computers Accounting\n*> System and is Copyright (c) Vincent B Coen. 1976-2025 and later.\n*>\n*> This program is now free software; you can redistribute it and/or modify it\n*> under the terms listed here and of the GNU General Public License as\n*> published by the Free Software Foundation; version 3 and later as revised\n*> for PERSONAL USAGE ONLY and that includes for use within a business but\n*> EXCLUDES repackaging or for Resale, Rental or Hire in ANY way.\n*>\n*> Persons interested in repackaging, redevelopment for the purpose of resale or\n*> distribution in a rental or hire mode must get in touch with the copyright\n*> holder with your commercial plans and proposals.\n*>\n*> ACAS is distributed in the hope that it will be useful, but WITHOUT\n*> ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n*> FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n*> for more details. If it breaks, you own both pieces but I will endeavour\n*> to fix it, providing you tell me about the problem.\n*>\n*> You should have received a copy of the GNU General Public License along\n*> with ACAS; see the file COPYING.  If not, write to the Free Software\n*> Foundation, 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA.\n*>\n*>**********************************************************************************\n*>\n environment division.\n*> copy \"envdiv.cob\".\n*>\n input-output section.\n Data Division.\n Working-Storage Section.\n 77  prog-name           pic x(21)    value \"slpostingMT (3.02.11)\".\n*>\n*> JC WS requirements here\n*>\n 77  ws-Where            pic x(512).\n*>\n*>  Used within presql generated code\n*>\n 01  WS-Reply            pic x           value space.\n 01  WS-MYSQL-I          PIC S9(4) COMP.\n 01  WS-MYSQL-EDIT       PIC -Z(18)9.9(9).\n*>\n*> The communication area for the MySQL database changed for free/mysql\n*>\n*>  jc preSQL MySQL stuff ends\n*>\n*> Metadata on primary and alternate keys...  from Prima DAL for PSIRSPOST-REC\n*>\n 01  Table-Of-Keynames.\n     03  filler          pic x(30) value \"IRS-POST-KEY                  \". *> in RDB\n     03  filler          pic x(8)  value \"00010008\". *> offset/length in ws rec\n     03  filler          pic xxx   value \"BNT\".      *> key is bigint\n*>\n 01  filler redefines table-of-keynames.\n     03  keyOfReference occurs 1    indexed by KOR-x1.\n         05 KeyName      pic x(30).\n         05 KOR-Offset   pic 9(4).\n         05 KOR-Length   pic 9(4).\n         05 KOR-Type     pic XXX.                    *> Not used currently\n*>\n*> The START condition cannot be compounded, and it must use a\n*> Key of Reference within the record. (These are COBOL rules...)\n*> The interface defines which key and the relation condition.\n*>\n 01  DAL-Data.\n     05  MOST-Relation   pic xxx.                  *> valid are >=, <=, <, >, =\n     05  Most-Cursor-Set pic 9    value zero.\n         88  Cursor-Not-Active    value zero.\n         88  Cursor-Active        value 1.\n*>\n*>  Variables common to all DALs\n*>  ****************************\n*>\n 01  subscripts usage comp-5.\n     12 J                pic s9(4).\n     12 K                pic s9(4).\n     12 L                pic s9(4).\n*>\n 01  Old-File-Function   pic 9 value zero.\n*>\n 01  work-fields.\n     03  ws-env-lines    pic 999              value zero.\n     03  ws-lines        binary-char unsigned value zero.\n     03  ws-22-lines     binary-char unsigned value zero.\n     03  ws-23-lines     binary-char unsigned value zero.\n     03  ws-98-lines     binary-char unsigned value zero.\n     03  ws-99-lines     binary-char unsigned value zero.\n     03  ws-Rec-Cnt      binary-long unsigned value zero.\n*>\n 01  Error-Messages.\n     03  SM901          pic x(31) value \"SM901 Note error and hit return\".\n*>\n*> /MYSQL VAR\\\n*>       ACASDB\n*>       TABLE=PSIRSPOST-REC,HV\n COPY \"mysql-variables.cpy\".\n*>\n*>    Definitions for the PSIRSPOST-REC Table\n*>\n       01  TP-PSIRSPOST-REC                      USAGE POINTER.\n       01  TD-PSIRSPOST-REC.\n           05  HV-IRS-POST-KEY                   PIC S9(18) COMP.\n           05  HV-IRS-POST-CODE                  PIC X(2).\n           05  HV-IRS-POST-DAT                   PIC X(8).\n           05  HV-IRS-POST-DR                    PIC  9(10) COMP.\n           05  HV-IRS-POST-CR                    PIC  9(10) COMP.\n           05  HV-IRS-POST-AMOUNT                PIC S9(07)V9(02) COMP.\n           05  HV-IRS-POST-LEGEND                PIC X(32).\n           05  HV-IRS-VAT-AC-DEF                 PIC  9(03) COMP.\n           05  HV-IRS-POST-VAT-SIDE              PIC X(2).\n           05  HV-IRS-VAT-AMOUNT                 PIC S9(07)V9(02) COMP.\n*> /MYSQL-END\\\n*>\n Linkage Section.\n*>**************\n*>\n*>**********************************************************************\n copy \"wsfnctn.cob\".                         *> File-Access\n*>\n*>**********************************************************************\n*>\n copy \"Test-Data-Flags.cob\".  *> set sw-testing to zero to stop logging.\n*>\n*>  Record definition for Cobol file here:\n*>\n copy \"wspost-irs.cob\".\n*>\n screen section.\n*>=============\n*>\n 01  Display-Message-1       foreground-color 2.\n     03          value \"WS-Where=\"                line 23 col  1.\n     03  from WS-Where (1:J)           pic x(69)          col 10.\n*>\n 01  Display-Message-2       foreground-color 2.\n     03      value \"SM004 SQL Err No.=\"            line 4 col  1.    *> size 18 char\n     03  using Ws-Mysql-Error-Number   pic x(4)           col 19.    *>      4       == 22\n     03      value \" Para=\"                               col 23.    *> size 6 char  == 28\n     03  using WS-No-Paragraph         pic 9(3)           col 29.    *>      4       == 32\n     03      value \" SQL Cmd=\"                            col 32.    *>      9       == 41\n     03  using Ws-Mysql-Command        pic x(199)         col 41.\n     03      value \"SQL Err Msg=\"                  line 7 col  1.    *>      12\n     03  using Ws-Mysql-Error-Message  pic x(67)          col 13.\n*>\n*>\n PROCEDURE DIVISION   using File-Access\n                            ACAS-DAL-Common-data\n                            WS-IRS-Posting-Record.   *>  Ws record\n*>**********************************************\n ba-ACAS-DAL-Process  section.\n     accept   ws-env-lines from lines.\n     if       ws-env-lines < 24\n              move  24 to ws-env-lines ws-lines\n     else\n              move  ws-env-lines to ws-lines\n     end-if\n*> Force Esc, PgUp, PgDown, PrtSC to be detected\n     set      ENVIRONMENT \"COB_SCREEN_EXCEPTIONS\" to \"Y\".\n     set      ENVIRONMENT \"COB_SCREEN_ESC\" to \"Y\".\n*>\n ba010-Initialise.\n*>\n*>     move     zero   to We-Error\n*>                        Fs-Reply.\n*>\n     move     spaces to WS-MYSQL-Error-Message\n                        WS-MYSQL-Error-Number\n                        WS-Log-Where\n                        WS-File-Key\n                        SQL-Msg\n                        SQL-Err.\n*>\n*>   Now Test for valid key for start, read-indexed and delete\n*>      REMOVED as not used here\n*>\n*>  Work out what is being requested and convert to action!!\n*>\n*>    This version uses the JC pre-Sql processor.\n*>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n*>\n     evaluate File-Function\n        when  1\n              go to ba020-Process-Open\n        when  2\n              go to ba030-Process-Close\n        when  3\n              go to ba040-Process-Read-Next\n        when  4\n              go to ba050-Process-Read-Indexed\n        when  5\n              go to ba070-Process-Write\n        when 6      *> DELETE-ALL  Special\n              go to ba085-Process-DELETE-ALL\n        when  7\n              go to ba090-Process-Rewrite\n        when  8\n              go to ba080-Process-Delete\n        when  9\n              go to ba060-Process-Start\n        when  other                          *> 6 is spare / unused\n              go to ba100-Bad-Function\n     end-evaluate.\n*>\n ba020-Process-Open.\n *>\n *>  Manual process MYSQL INIT\n *>",
        "line": 33
      },
      {
        "type": "IF",
        "condition": "fs-reply not = zero\n              go   to ba999-end.\n*>\n*> *> /MYSQL INIT\\\n*>       BASE=ACASDB\n*>       IMPLEMENTATION=dev-prog-001\n*>       PASSWORD=mysqlpass\n*> *> /MYSQL-END\\\n*>\n     move    \"OPEN SLIRSPOSTING\" to WS-File-Key\n     move    zero   to Most-Cursor-Set\n     go      to ba999-end.\n*>\n ba030-Process-Close.\n     if      Cursor-Active\n             perform ba998-Free.\n*>\n     move     2 to ws-No-Paragraph.\n     move    \"CLOSE SLIRSPOSTING\" to WS-File-Key.\n*>  /MYSQL CLOSE\\\n*>\n*>    Close the Database\n*>\n           PERFORM MYSQL-1980-CLOSE THRU MYSQL-1999-EXIT\n*>  /MYSQL-END\\\n*>\n     go      to ba999-end.\n*>\n ba040-Process-Read-Next.\n*>\n*>   Here a SELECT first",
        "line": 398
      },
      {
        "type": "IF",
        "condition": "no cursor active using lowest\n*>    possible key of \"0000000000\"\n*>           [ IRS-POST-KEY ]\n*>\n     if       Cursor-Not-Active\n              set      KOR-x1 to 1                *> 1 = Primary\n              move     KOR-offset (KOR-x1) to K\n              move     KOR-length (KOR-x1) to L\n*>\n              move     spaces to WS-Where\n              move     1   to J\n              string   \"`\"                   delimited by size\n                       KeyName (KOR-x1)      delimited by space\n                       \"`\"                   delimited by size\n                       \" >= \"                 delimited by size\n                       '\"0000000000\"'         delimited by size\n                       ' ORDER BY '          delimited by size\n                       \"`\"                   delimited by size\n                       keyname (KOR-x1)      delimited by space\n                       \"`\"                   delimited by size\n                         ' ASC '              delimited by size\n                                      into ws-Where\n                                      with pointer J\n              end-string\n*>\n              move     ws-Where (1:J)   to WS-Log-Where       *>  For test logging\n              move     3 to ws-No-Paragraph\n*>               /MYSQL SELECT\\\n*>\n*>    Select rows\n*>\n*>                    TABLE=PSIRSPOST-REC\n           INITIALIZE WS-MYSQL-COMMAND\n           STRING \"SELECT * FROM \"\n             \"`PSIRSPOST-REC`\"\n             \" WHERE \"\n             ws-Where (1:J)      *> IRS-POST-KEY > \"0000000000\" ORDER BY PSIRSPOST-REC ASC\n            \";\"  X\"00\" INTO WS-MYSQL-COMMAND\n           PERFORM MYSQL-1210-COMMAND THRU MYSQL-1219-EXIT\n           PERFORM MYSQL-1220-STORE-RESULT THRU MYSQL-1239-EXIT\n           MOVE WS-MYSQL-RESULT TO TP-PSIRSPOST-REC\n*>               /MYSQL-END\\\n           move    \"00000\" to WS-File-Key\n              if    Testing-2\n                    display Display-Message-1 with erase eos\n              end-if\n*>\n*>  It could be an empty table so test for it\n*>\n              if       WS-MYSQL-Count-Rows = zero\n                       call  \"MySQL_errno\" using WS-MYSQL-Error-Number\n                       if    WS-MYSQL-Error-Number  not = \"0  \"    *> set non '0' if no rows ?\n                             move WS-MYSQL-Error-Number to SQL-Err\n                             call \"MySQL_error\" using WS-MYSQL-Error-Message\n                             move WS-MYSQL-Error-Message to SQL-Msg\n                       end-if       *> do not really need to do this meaning the above CALL\n                       move 10 to fs-reply\n                       move 10 to WE-Error\n                       move    \"No Data\" to WS-File-Key\n                       go to ba998-Free       *> can clear the dup code after testing\n              end-if\n              move     1 to Most-Cursor-Set    *> should test if select worked first??????\n     end-if.\n ba041-Reread.\n*>\n*>  If here cursor is set, so get the next row\n*>\n     move     spaces to WS-Log-Where.\n     move     4 to ws-No-Paragraph.\n*>      /MYSQL FETCH\\\n*>\n*>    Fetch next record\n*>\n*>             TABLE=PSIRSPOST-REC\n           MOVE TP-PSIRSPOST-REC TO WS-MYSQL-RESULT\n           CALL \"MySQL_fetch_record\" USING WS-MYSQL-RESULT\n                    HV-IRS-POST-KEY\n                    HV-IRS-POST-CODE\n                    HV-IRS-POST-DAT\n                    HV-IRS-POST-DR\n                    HV-IRS-POST-CR\n                    HV-IRS-POST-AMOUNT\n                    HV-IRS-POST-LEGEND\n                    HV-IRS-VAT-AC-DEF\n                    HV-IRS-POST-VAT-SIDE\n                    HV-IRS-VAT-AMOUNT\n\n*>      /MYSQL-END\\\n     end-call\n*>\n     if       return-code = -1     *> no more data so free cursor & return\n              move 10 to fs-Reply WE-Error\n              move    \"EOF\" to WS-File-Key\n              move     zero to Most-Cursor-Set\n              go to ba999-End\n     end-if\n*>\n     if       WS-MYSQL-Count-Rows = zero\n              call  \"MySQL_errno\" using WS-MYSQL-Error-Number\n              if    WS-MYSQL-Error-Number  not = \"0  \"\n                    call \"MySQL_error\" using WS-MYSQL-Error-Message\n                    move 10 to fs-reply                  *> EOF equivilent !!\n                    move 10 to WE-Error\n                    move WS-MYSQL-Error-Number  to SQL-Err   *> Not really needed but help for testing\n                    move WS-MYSQL-Error-Message to SQL-Msg   *>  ditto\n                    initialize WS-IRS-Posting-Record with filler\n              move    \"EOF2\" to WS-File-Key\n              end-if\n              move     zero to Most-Cursor-Set\n              go to ba999-End\n     end-if.\n*>\n     if       fs-reply = 10\n              move     zero to Most-Cursor-Set\n              move    \"EOF3\" to WS-File-Key\n              go to ba999-End\n     end-if.\n     perform  bb100-UnloadHVs.       *> transfer/move HV vars to Record layout\n*>\n     move     HV-IRS-POST-KEY to WS-File-Key.\n     move     zero to fs-reply WE-Error.\n     go       to ba999-end.\n*>\n ba050-Process-Read-Indexed.\n*>\n*>  Now do on correct key within WHERE\n*>  Sets up key and compare data\n*>\n     set      KOR-x1 to File-Key-No\n     move     KOR-offset (KOR-x1) to K\n     move     KOR-length (KOR-x1) to L\n*>\n     move     spaces to WS-Where\n     move     1   to J\n     string   \"`\"                   delimited by size\n              KeyName (KOR-x1)      delimited by space\n              \"`\"                   delimited by size\n              '=\"'                  delimited by size\n              WS-IRS-Posting-Record (K:L)  delimited by size\n              '\"'                   delimited by size\n                      into WS-Where\n                        with pointer J\n     end-string\n     move     WS-Where (1:J)   to WS-Log-Where.    *>  For test logging\n     if    Testing-2\n           display Display-Message-1 with erase eos\n     end-if.\n ba051-Reselect.\n     move     5 to ws-No-Paragraph\n*>      /MYSQL SELECT\\\n*>\n*>    Select rows\n*>\n*>             TABLE=PSIRSPOST-REC\n           INITIALIZE WS-MYSQL-COMMAND\n           STRING \"SELECT * FROM \"\n             \"`PSIRSPOST-REC`\"\n             \" WHERE \"\n             WS-Where (1:J)\n            \";\"  X\"00\" INTO WS-MYSQL-COMMAND\n           PERFORM MYSQL-1210-COMMAND THRU MYSQL-1219-EXIT\n           PERFORM MYSQL-1220-STORE-RESULT THRU MYSQL-1239-EXIT\n           MOVE WS-MYSQL-RESULT TO TP-PSIRSPOST-REC\n*>      /MYSQL-END\\\n*>\n     if     WS-MYSQL-Count-Rows = zero\n            move 21  to fs-Reply             *> could also be 23 or 14\n            move zero to WE-Error\n            go to ba998-Free\n     end-if\n     move     6 to ws-No-Paragraph\n*>      /MYSQL FETCH\\\n*>\n*>    Fetch next record\n*>\n*>             TABLE=PSIRSPOST-REC\n           MOVE TP-PSIRSPOST-REC TO WS-MYSQL-RESULT\n           CALL \"MySQL_fetch_record\" USING WS-MYSQL-RESULT\n                    HV-IRS-POST-KEY\n                    HV-IRS-POST-CODE\n                    HV-IRS-POST-DAT\n                    HV-IRS-POST-DR\n                    HV-IRS-POST-CR\n                    HV-IRS-POST-AMOUNT\n                    HV-IRS-POST-LEGEND\n                    HV-IRS-VAT-AC-DEF\n                    HV-IRS-POST-VAT-SIDE\n                    HV-IRS-VAT-AMOUNT\n\n*>      /MYSQL-END\\\n     end-call\n*>\n     if       WS-MYSQL-Count-Rows not > zero\n              call     \"MySQL_errno\" using WS-MYSQL-Error-Number\n              end-call\n              if    WS-MYSQL-Error-Number  not = \"0  \"\n                    move 21 to fs-reply    *> from 23\n                    move 990 to WE-Error\n                    call \"MySQL_error\" using WS-MYSQL-Error-Message\n                    move WS-MYSQL-Error-Number to SQL-Err\n                    move WS-MYSQL-Error-Message to SQL-Msg\n                    move spaces to WS-File-Key\n                    go to ba998-Free\n              else\n                    move 21   to fs-reply    *> from 23\n                    move 989  to WE-Error\n                    move zero to SQL-Err\n                    move spaces to SQL-Msg\n                    move spaces to WS-File-Key\n                    go to ba998-Free\n              end-if\n     end-if                        *> row count zero should show up as a MYSQL error ?\n     perform  bb100-UnloadHVs      *> transfer/move HV vars to ws-Record layout\n     move     HV-IRS-POST-KEY to WS-File-Key.\n*>\n     move     zero to FS-Reply WE-Error.\n     go       to ba998-Free.\n*>\n ba060-Process-Start.    *> not used for postings ?\n*>\n*>  Check for Param error 1st on start\n*>\n     if       access-type < 5 or > 8                   *> not using not < or not >\n              move 99 to FS-Reply\n              move 997 to WE-Error                     *> Invalid calling parameter settings     997\n              go to ba999-end\n     end-if\n*>\n*>  First clear any active cursors\n*>\n     if       Cursor-Active\n              perform ba998-Free.\n*>\n*>  Now do Start on correct key before read-next  within WHERE\n*>  Set up MOST-relation for condition test and key\n*>\n     set      KOR-x1 to File-Key-No.\n     move     KOR-offset (KOR-x1) to K\n     move     KOR-length (KOR-x1) to L\n*>\n     move     spaces to MOST-Relation.\n     move     1   to J.\n     evaluate Access-Type     *>  x shows used in irs.\n              when  5                           *>x fn-equal-to [also in sub4]\n                    move \"=  \" to MOST-Relation\n              when  6                           *> fn-less-than  [NOT in sub4]\n                    move \"<  \" to MOST-Relation\n              when  7                           *>x fn-greater-than [also in sub4]\n                    move \">  \" to MOST-Relation\n              when  8                           *>x fn-not-less-than [also in sub4]\n                    move \">= \" to MOST-Relation\n              when  9                           *> fn-not-greater-than [ not currently used in ACAS ]\n                    move \"<= \" to MOST-Relation\n     end-evaluate\n*>\n     move     spaces to WS-Where\n     string   \"`\"                   delimited by size\n              KeyName (KOR-x1)      delimited by space\n              \"`\"                   delimited by size\n              MOST-relation         delimited by space\n              '\"'                   delimited by size\n              WS-IRS-Posting-Record (K:L)       delimited by size\n              '\"'                   delimited by size\n              ' ORDER BY '          delimited by size\n              \"`\"                   delimited by size\n              keyname (KOR-x1)      delimited by space\n              \"`\"                   delimited by size\n                ' ASC  '            delimited by size\n                             into WS-Where\n                             with pointer J\n     end-string\n     move     WS-Where (1:J)  to WS-Log-Where.    *>  For test logging\n     move     WS-IRS-Posting-Record (K:L) to WS-File-Key.\n     if    Testing-2\n           display Display-Message-1 with erase eos\n     end-if\n*>\n     move     8 to ws-No-Paragraph\n*>      /MYSQL SELECT\\\n*>\n*>    Select rows\n*>\n*>             TABLE=PSIRSPOST-REC\n           INITIALIZE WS-MYSQL-COMMAND\n           STRING \"SELECT * FROM \"\n             \"`PSIRSPOST-REC`\"\n             \" WHERE \"\n             WS-Where (1:J)\n            \";\"  X\"00\" INTO WS-MYSQL-COMMAND\n           PERFORM MYSQL-1210-COMMAND THRU MYSQL-1219-EXIT\n           PERFORM MYSQL-1220-STORE-RESULT THRU MYSQL-1239-EXIT\n           MOVE WS-MYSQL-RESULT TO TP-PSIRSPOST-REC\n*>      /MYSQL-END\\\n*>\n     if       WS-MYSQL-Count-Rows not zero\n              move 1 to Most-Cursor-Set\n     end-if\n*>\n     if       WS-MYSQL-Count-Rows = zero\n              call  \"MySQL_errno\" using WS-MYSQL-Error-Number\n              if    WS-MYSQL-Error-Number  not = \"0  \"\n                    call \"MySQL_error\" using WS-MYSQL-Error-Message\n                    move WS-MYSQL-Error-Number  to SQL-Err\n                    move WS-MYSQL-Error-Message to SQL-Msg\n                    move 21 to fs-reply                  *> this may need changing for val in WE-Error!!\n                    move zero to WE-Error\n              end-if\n     else\n              move  zero to FS-Reply WE-Error\n     end-if\n*>\n*> Here we need FETCH as SELECT has been issued & cursor active\n*>\n     go to ba040-Process-Read-Next.\n*>\n*> Changed to do start",
        "line": 428
      },
      {
        "type": "IF",
        "condition": "WS-MYSQL-COUNT-ROWS not = 1\n              call \"MySQL_errno\" using WS-MYSQL-Error-Number\n              if    WS-MYSQL-Error-Number  not = \"0  \"\n                    call \"MySQL_error\" using Ws-Mysql-Error-Message\n                    move WS-MYSQL-Error-Number  to SQL-Err\n                    move WS-MYSQL-Error-Message to SQL-Msg\n                    if    SQL-Err (1:4) = \"1062\" or = \"1022\"   *> Dup key (rec already present)\n                          move 22 to fs-reply\n                    else\n                          move 99 to fs-reply                  *> this may need changing for val in WE-Error!!\n                    end-if\n              end-if\n     end-if.\n*>                           produce logging & quit\n     go       to ba999-End.\n*>\n ba080-Process-Delete.\n*>\n     set      KOR-x1 to File-Key-No\n     move     KOR-offset (KOR-x1) to K\n     move     KOR-length (KOR-x1) to L\n*>\n     move     spaces to WS-Where\n     move     1   to J\n     string   \"`\"                   delimited by size\n              KeyName (KOR-x1)      delimited by space\n              \"`\"                   delimited by size\n              '=\"'                  delimited by size\n              WS-IRS-Posting-Record (K:L)    delimited by size\n              '\"'                   delimited by size\n                      into WS-Where\n                        with pointer J\n     end-string\n     move     WS-IRS-Posting-Record (K:L)  to WS-File-Key.\n     move     WS-Where (1:J)   to WS-Log-Where.   *>  For test logging\n     if    Testing-2\n           display Display-Message-1 with erase eos\n     end-if\n     move     13 to ws-No-Paragraph.\n*>      /MYSQL DELETE\\\n*>\n*>    Delete a row\n*>\n*>             TABLE=PSIRSPOST-REC\n           INITIALIZE WS-MYSQL-COMMAND\n           STRING \"DELETE FROM \"\n             \"`PSIRSPOST-REC`\"\n             \" WHERE \"\n             WS-Where (1:J)\n             X\"00\" INTO WS-MYSQL-COMMAND\n           PERFORM MYSQL-1210-COMMAND THRU MYSQL-1219-EXIT\n*>      /MYSQL-END\\\n     if       WS-MYSQL-COUNT-ROWS not = 1\n              call \"MySQL_errno\" using WS-MYSQL-Error-Number\n              if    WS-MYSQL-Error-Number  not = \"0  \"\n                    call \"MySQL_error\" using Ws-Mysql-Error-Message\n                    move WS-MYSQL-Error-Number  to SQL-Err\n                    move WS-MYSQL-Error-Message to SQL-Msg\n                    move 99 to fs-reply\n                    move 995 to WE-Error\n              end-if\n              if       Testing-1\n                       perform Ca-Process-Logs\n              end-if\n              go to ba999-Exit\n     else\n              move spaces to SQL-Msg\n              move zero   to SQL-Err\n     end-if.\n     move     zero to FS-Reply WE-Error.\n     go       to ba999-End.\n*>\n ba085-Process-Delete-ALL.    *> THIS IS NON STANDARD\n*>\n*> This is the equivalent of :\n*>           EXEC SQL\n*>              DELETE\n*>              FROM PSIRSPOST-REC\n*>           END-EXEC.\n*>\n*>  That creates the follwoing code from dbpre\n*>\n*>   MOVE LOW-VALUES TO SQLCA-STATEMENT\n*>   STRING\n*>     'DELETE ' DELIMITED SIZE\n*>     'FROM ' DELIMITED SIZE\n*>     'PSIRSPOST-REC ' DELIMITED SIZE\n*>   INTO SQLCA-STATEMENT\n*>   END-STRING\n*>   CALL 'MySQL_query' USING SQLCA-STATEMENT\n*>   END-CALL\n*>\n*> So if this does not work it will be changed.\n*>\n *>>    add      1  to WS-IRS-Post-Number.    *> as its the last posting\n     move     99999 to WS-IRS-Batch\n                       WS-IRS-Post-Number.\n*>\n     set      KOR-x1 to File-Key-No\n     move     KOR-offset (KOR-x1) to K\n     move     KOR-length (KOR-x1) to L\n*>\n     move     spaces to WS-Where\n     move     1   to J\n     string   \"`\"                   delimited by size\n              KeyName (KOR-x1)      delimited by space\n              \"`\"                   delimited by size\n              '<\"'                  delimited by size\n *>             Posting-Record (K:L)    delimited by size\n              WS-IRS-Post-Key              delimited by size\n              '\"'                   delimited by size\n                      into WS-Where\n                        with pointer J\n     end-string\n     move     spaces to WS-File-Key\n     string   \"Deleting back from \" delimited by size\n               WS-IRS-Post-Key             delimited by size\n                      into WS-File-Key\n     end-string                                   *> for logging\n*>     move     Posting-Record (K:L)  to WS-File-Key.\n     move     WS-Where (1:J)   to WS-Log-Where.   *>  For test logging\n     if    Testing-2\n           display Display-Message-1 with erase eos\n     end-if\n     move     13 to ws-No-Paragraph.\n*>      /MYSQL DELETE\\\n*>\n*>    Delete a row\n*>\n*>             TABLE=PSIRSPOST-REC\n           INITIALIZE WS-MYSQL-COMMAND\n           STRING \"DELETE FROM \"\n             \"`PSIRSPOST-REC`\"\n             \" WHERE \"\n             WS-Where (1:J)\n             X\"00\" INTO WS-MYSQL-COMMAND\n           PERFORM MYSQL-1210-COMMAND THRU MYSQL-1219-EXIT\n*>      /MYSQL-END\\\n     if       WS-MYSQL-COUNT-ROWS not > zero    *> Changed for delete-ALL\n              call \"MySQL_errno\" using WS-MYSQL-Error-Number\n              if    WS-MYSQL-Error-Number  not = \"0  \"\n                    call \"MySQL_error\" using Ws-Mysql-Error-Message\n                    move WS-MYSQL-Error-Number  to SQL-Err\n                    move WS-MYSQL-Error-Message to SQL-Msg\n                    move 99 to fs-reply\n                    move 995 to WE-Error\n              end-if\n              if       Testing-1\n                       perform Ca-Process-Logs\n              end-if\n              go to ba999-Exit\n     else      *> of course there could be no data in table\n              move spaces to SQL-Msg\n              move zero   to SQL-Err\n     end-if.\n     move     zero to FS-Reply WE-Error.\n     if       Testing-1\n              perform Ca-Process-Logs\n     end-if\n     go       to ba999-Exit.\n*>\n ba090-Process-Rewrite.\n*>\n     perform  bb000-HV-Load.       *> Load up the HV fields from table record in WS\n     move     17 to ws-No-Paragraph.\n     set      KOR-x1 to 1            *> 1 = Primary, 2 = Abrev, 3 = Desc (NOT Delete function as can be dups)\n     move     KOR-offset (KOR-x1) to K\n     move     KOR-length (KOR-x1) to L\n*>\n     move     spaces to WS-Where\n     move     1   to J\n     string   \"`\"                   delimited by size\n              KeyName (KOR-x1)      delimited by space\n              \"`\"                   delimited by size\n              '=\"'                  delimited by size\n              WS-IRS-Posting-Record (K:L)       delimited by size\n              '\"'                   delimited by size\n                      into WS-Where\n                        with pointer J\n     end-string\n     move     WS-Where (1:J)   to WS-Log-Where.    *>  For test logging\n     perform  bb300-Update.\n*>\n     if       Testing-2\n              display Display-Message-1 with erase eos\n     end-if\n*>\n     if       WS-MYSQL-COUNT-ROWS not = 1\n              call \"MySQL_errno\" using WS-MYSQL-Error-Number\n              if    WS-MYSQL-Error-Number  not = \"0  \"\n                    call \"MySQL_error\" using Ws-Mysql-Error-Message\n                    move WS-MYSQL-Error-Number  to SQL-Err\n                    move WS-MYSQL-Error-Message to SQL-Msg\n                    move 99 to fs-reply                  *> this may need changing for val in WE-Error!!\n                    move 994 to WE-Error\n              end-if\n              go to ba999-End\n     end-if\n     move     zero   to FS-Reply WE-Error.\n     move     zero   to SQL-Err.\n     move     spaces to SQL-Msg.\n     go       to ba999-End.\n*>\n ba100-Bad-Function.\n*>\n*> Houston; We have a problem\n*>\n     move     990 to WE-Error.\n     move     99 to Fs-Reply.\n     go       to ba999-End.\n*>\n*> /MYSQL PRO\\\n COPY \"mysql-procedures.cpy\".\n*> /MYSQL-END\\\n*>\n ba998-Free.\n     move     20 to ws-No-Paragraph.\n*>      /MYSQL FREE\\\n*>\n*>    Free result array\n*>\n*>             TABLE=PSIRSPOST-REC\n           MOVE TP-PSIRSPOST-REC TO WS-MYSQL-RESULT\n           CALL \"MySQL_free_result\" USING WS-MYSQL-RESULT end-call\n*>      /MYSQL-END\\\n     move     zero to Most-Cursor-Set.\n*>\n ba999-End.\n*>  Any Clean ups before quiting    move data record ?????  do so at the start as well ??????\n*>\n     if       Testing-1\n              perform Ca-Process-Logs\n     end-if.\n*>\n ba999-Exit.\n     exit program.\n*>\n bb000-HV-Load      Section.\n*>*************************\n*>\n*>  Load the Host variables with data from the passed record\n*>\n*> This Method loads the Host Variables for the Base table with\n*> the data passed in the data-buffer.\n*>\n     initialize TD-PSIRSPOST-REC.\n     move     WS-IRS-Post-Key      to HV-IRS-POST-KEY.\n     move     WS-IRS-Post-Code     to HV-IRS-POST-CODE.\n     move     WS-IRS-Post-Date     to HV-IRS-POST-DAT.\n     move     WS-IRS-Post-DR       to HV-IRS-POST-DR.\n     move     WS-IRS-Post-CR       to HV-IRS-POST-CR.\n     move     WS-IRS-Post-Amount   to HV-IRS-POST-AMOUNT.\n     move     WS-IRS-Post-Legend   to HV-IRS-POST-LEGEND.\n     move     WS-IRS-Vat-AC-Def    to HV-IRS-VAT-AC-DEF.\n     move     WS-IRS-Post-Vat-Side to HV-IRS-POST-VAT-SIDE.\n     move     WS-IRS-Vat-Amount    to HV-IRS-VAT-AMOUNT.\n*>\n*> Loading HVs implies a non-Fetch action. RGs are handled separately for\n*> all such actions so they must not be loaded here.\n*>\n bb000-Exit.\n     exit section.\n*>\n bb100-UnloadHVs    Section.\n*>*************************\n*>\n*>  Load the data buffer in the interface with data from the host variables.\n*> (init moved lower)\n*>\n*> NULL fields must not be returned in the buffer. SQL filters each column to\n*>  ensure it has a proper value.  This saves using indicator variables.\n*>\n     initialize WS-IRS-Posting-Record.\n*>\n     move     HV-IRS-POST-KEY      to WS-IRS-Post-Key.\n     move     HV-IRS-POST-CODE     to WS-IRS-Post-Code.\n     move     HV-IRS-POST-DAT      to WS-IRS-Post-Date.\n     move     HV-IRS-POST-DR       to WS-IRS-Post-DR.\n     move     HV-IRS-POST-CR       to WS-IRS-Post-CR.\n     move     HV-IRS-POST-AMOUNT   to WS-IRS-Post-Amount.\n     move     HV-IRS-POST-LEGEND   to WS-IRS-Post-Legend.\n     move     HV-IRS-VAT-AC-DEF    to WS-IRS-Vat-AC-Def.\n     move     HV-IRS-POST-VAT-SIDE to WS-IRS-Post-Vat-Side.\n     move     HV-IRS-VAT-AMOUNT    to WS-IRS-Vat-Amount.\n*>\n bb100-Exit.\n     exit section.\n*>\n bb200-Insert Section.\n*>*******************\n*>\n*>  /MYSQL INSERT\\\n*>\n*>    Insert a row\n*>\n*>         TABLE=PSIRSPOST-REC\n           INITIALIZE WS-MYSQL-COMMAND\n           MOVE 1 TO WS-MYSQL-I\n           STRING 'INSERT INTO '\n                    '`PSIRSPOST-REC` SET '\n              INTO WS-MYSQL-COMMAND\n              WITH POINTER WS-MYSQL-I end-string\n*>\n           STRING '`IRS-POST-KEY`=\"' INTO WS-MYSQL-COMMAND\n                   WITH POINTER WS-MYSQL-I end-string\n           MOVE HV-IRS-POST-KEY\n             TO WS-MYSQL-EDIT\n           STRING FUNCTION TRIM (WS-MYSQL-EDIT(03:18))\n             INTO WS-MYSQL-COMMAND\n             WITH POINTER WS-MYSQL-I end-string\n           STRING '\"' INTO WS-MYSQL-COMMAND\n           WITH POINTER WS-MYSQL-I end-string\n           STRING ', 'INTO WS-MYSQL-COMMAND\n           WITH POINTER WS-MYSQL-I end-string\n*>\n           STRING '`IRS-POST-CODE`=\"' INTO WS-MYSQL-COMMAND\n                   WITH POINTER WS-MYSQL-I end-string\n           STRING FUNCTION TRIM (HV-IRS-POST-CODE,TRAILING)\n                  '\"'\n                   INTO WS-MYSQL-COMMAND\n                   WITH POINTER WS-MYSQL-I end-string\n           STRING ', 'INTO WS-MYSQL-COMMAND\n           WITH POINTER WS-MYSQL-I end-string\n*>\n           STRING '`IRS-POST-DAT`=\"' INTO WS-MYSQL-COMMAND\n                   WITH POINTER WS-MYSQL-I end-string\n           STRING FUNCTION TRIM (HV-IRS-POST-DAT,TRAILING)\n                  '\"'\n                   INTO WS-MYSQL-COMMAND\n                   WITH POINTER WS-MYSQL-I end-string\n           STRING ', 'INTO WS-MYSQL-COMMAND\n           WITH POINTER WS-MYSQL-I end-string\n*>\n           STRING '`IRS-POST-DR`=\"' INTO WS-MYSQL-COMMAND\n                   WITH POINTER WS-MYSQL-I end-string\n           MOVE HV-IRS-POST-DR\n             TO WS-MYSQL-EDIT\n           STRING FUNCTION TRIM (WS-MYSQL-EDIT(11:10))\n             INTO WS-MYSQL-COMMAND\n             WITH POINTER WS-MYSQL-I end-string\n           STRING '\"' INTO WS-MYSQL-COMMAND\n           WITH POINTER WS-MYSQL-I end-string\n           STRING ', 'INTO WS-MYSQL-COMMAND\n           WITH POINTER WS-MYSQL-I end-string\n*>\n           STRING '`IRS-POST-CR`=\"' INTO WS-MYSQL-COMMAND\n                   WITH POINTER WS-MYSQL-I end-string\n           MOVE HV-IRS-POST-CR\n             TO WS-MYSQL-EDIT\n           STRING FUNCTION TRIM (WS-MYSQL-EDIT(11:10))\n             INTO WS-MYSQL-COMMAND\n             WITH POINTER WS-MYSQL-I end-string\n           STRING '\"' INTO WS-MYSQL-COMMAND\n           WITH POINTER WS-MYSQL-I end-string\n           STRING ', 'INTO WS-MYSQL-COMMAND\n           WITH POINTER WS-MYSQL-I end-string\n*>\n           STRING '`IRS-POST-AMOUNT`=\"' INTO WS-MYSQL-COMMAND\n                   WITH POINTER WS-MYSQL-I end-string\n           MOVE HV-IRS-POST-AMOUNT\n             TO WS-MYSQL-EDIT\n           STRING FUNCTION TRIM (WS-MYSQL-EDIT(14:07))\n             INTO WS-MYSQL-COMMAND\n             WITH POINTER WS-MYSQL-I end-string\n           STRING \".\" INTO WS-MYSQL-COMMAND\n             WITH POINTER WS-MYSQL-I end-string\n           STRING WS-MYSQL-EDIT(22:02)\n             INTO WS-MYSQL-COMMAND\n             WITH POINTER WS-MYSQL-I end-string\n           STRING '\"' INTO WS-MYSQL-COMMAND\n           WITH POINTER WS-MYSQL-I end-string\n           STRING ', 'INTO WS-MYSQL-COMMAND\n           WITH POINTER WS-MYSQL-I end-string\n*>\n           STRING '`IRS-POST-LEGEND`=\"' INTO WS-MYSQL-COMMAND\n                   WITH POINTER WS-MYSQL-I end-string\n           STRING FUNCTION TRIM (HV-IRS-POST-LEGEND,TRAILING)\n                  '\"'\n                   INTO WS-MYSQL-COMMAND\n                   WITH POINTER WS-MYSQL-I end-string\n           STRING ', 'INTO WS-MYSQL-COMMAND\n           WITH POINTER WS-MYSQL-I end-string\n*>\n           STRING '`IRS-VAT-AC-DEF`=\"' INTO WS-MYSQL-COMMAND\n                   WITH POINTER WS-MYSQL-I end-string\n           MOVE HV-IRS-VAT-AC-DEF\n             TO WS-MYSQL-EDIT\n           STRING FUNCTION TRIM (WS-MYSQL-EDIT(18:03))\n             INTO WS-MYSQL-COMMAND\n             WITH POINTER WS-MYSQL-I end-string\n           STRING '\"' INTO WS-MYSQL-COMMAND\n           WITH POINTER WS-MYSQL-I end-string\n           STRING ', 'INTO WS-MYSQL-COMMAND\n           WITH POINTER WS-MYSQL-I end-string\n*>\n           STRING '`IRS-POST-VAT-SIDE`=\"' INTO WS-MYSQL-COMMAND\n                   WITH POINTER WS-MYSQL-I end-string\n           STRING FUNCTION TRIM (HV-IRS-POST-VAT-SIDE,TRAILING)\n                  '\"'\n                   INTO WS-MYSQL-COMMAND\n                   WITH POINTER WS-MYSQL-I end-string\n           STRING ', 'INTO WS-MYSQL-COMMAND\n           WITH POINTER WS-MYSQL-I end-string\n*>\n           STRING '`IRS-VAT-AMOUNT`=\"' INTO WS-MYSQL-COMMAND\n                   WITH POINTER WS-MYSQL-I end-string\n           MOVE HV-IRS-VAT-AMOUNT\n             TO WS-MYSQL-EDIT\n           STRING FUNCTION TRIM (WS-MYSQL-EDIT(14:07))\n             INTO WS-MYSQL-COMMAND\n             WITH POINTER WS-MYSQL-I end-string\n           STRING \".\" INTO WS-MYSQL-COMMAND\n             WITH POINTER WS-MYSQL-I end-string\n           STRING WS-MYSQL-EDIT(22:02)\n             INTO WS-MYSQL-COMMAND\n             WITH POINTER WS-MYSQL-I end-string\n           STRING '\"' INTO WS-MYSQL-COMMAND\n           WITH POINTER WS-MYSQL-I end-string\n           STRING \";\" INTO WS-MYSQL-COMMAND\n             WITH POINTER WS-MYSQL-I end-string\n           STRING X\"00\" INTO WS-MYSQL-COMMAND\n             WITH POINTER WS-MYSQL-I end-string\n       PERFORM MYSQL-1210-COMMAND THRU MYSQL-1219-EXIT\n*>  /MYSQL-END\\\n       .     *> period here\n*>\n bb200-Exit.\n     exit section.\n*>\n bb300-Update Section.\n*>*******************\n*>\n*>  /MYSQL UPDATE\\\n*>\n*>    Update a row\n*>\n*>      TABLE=PSIRSPOST-REC\n           INITIALIZE WS-MYSQL-COMMAND\n           MOVE 1 TO WS-MYSQL-I\n           STRING 'UPDATE '\n                    '`PSIRSPOST-REC` SET '\n              INTO WS-MYSQL-COMMAND\n              WITH POINTER WS-MYSQL-I end-string\n*>\n           STRING '`IRS-POST-KEY`=\"' INTO WS-MYSQL-COMMAND\n                   WITH POINTER WS-MYSQL-I end-string\n           MOVE HV-IRS-POST-KEY\n             TO WS-MYSQL-EDIT\n           STRING FUNCTION TRIM (WS-MYSQL-EDIT(03:18))\n             INTO WS-MYSQL-COMMAND\n             WITH POINTER WS-MYSQL-I end-string\n           STRING '\"' INTO WS-MYSQL-COMMAND\n           WITH POINTER WS-MYSQL-I end-string\n           STRING ', 'INTO WS-MYSQL-COMMAND\n           WITH POINTER WS-MYSQL-I end-string\n*>\n           STRING '`IRS-POST-CODE`=\"' INTO WS-MYSQL-COMMAND\n                   WITH POINTER WS-MYSQL-I end-string\n           STRING FUNCTION TRIM (HV-IRS-POST-CODE,TRAILING)\n                  '\"'\n                   INTO WS-MYSQL-COMMAND\n                   WITH POINTER WS-MYSQL-I end-string\n           STRING ', 'INTO WS-MYSQL-COMMAND\n           WITH POINTER WS-MYSQL-I end-string\n*>\n           STRING '`IRS-POST-DAT`=\"' INTO WS-MYSQL-COMMAND\n                   WITH POINTER WS-MYSQL-I end-string\n           STRING FUNCTION TRIM (HV-IRS-POST-DAT,TRAILING)\n                  '\"'\n                   INTO WS-MYSQL-COMMAND\n                   WITH POINTER WS-MYSQL-I end-string\n           STRING ', 'INTO WS-MYSQL-COMMAND\n           WITH POINTER WS-MYSQL-I end-string\n*>\n           STRING '`IRS-POST-DR`=\"' INTO WS-MYSQL-COMMAND\n                   WITH POINTER WS-MYSQL-I end-string\n           MOVE HV-IRS-POST-DR\n             TO WS-MYSQL-EDIT\n           STRING FUNCTION TRIM (WS-MYSQL-EDIT(11:10))\n             INTO WS-MYSQL-COMMAND\n             WITH POINTER WS-MYSQL-I end-string\n           STRING '\"' INTO WS-MYSQL-COMMAND\n           WITH POINTER WS-MYSQL-I end-string\n           STRING ', 'INTO WS-MYSQL-COMMAND\n           WITH POINTER WS-MYSQL-I end-string\n*>\n           STRING '`IRS-POST-CR`=\"' INTO WS-MYSQL-COMMAND\n                   WITH POINTER WS-MYSQL-I end-string\n           MOVE HV-IRS-POST-CR\n             TO WS-MYSQL-EDIT\n           STRING FUNCTION TRIM (WS-MYSQL-EDIT(11:10))\n             INTO WS-MYSQL-COMMAND\n             WITH POINTER WS-MYSQL-I end-string\n           STRING '\"' INTO WS-MYSQL-COMMAND\n           WITH POINTER WS-MYSQL-I end-string\n           STRING ', 'INTO WS-MYSQL-COMMAND\n           WITH POINTER WS-MYSQL-I end-string\n*>\n           STRING '`IRS-POST-AMOUNT`=\"' INTO WS-MYSQL-COMMAND\n                   WITH POINTER WS-MYSQL-I end-string\n           MOVE HV-IRS-POST-AMOUNT\n             TO WS-MYSQL-EDIT\n           STRING FUNCTION TRIM (WS-MYSQL-EDIT(14:07))\n             INTO WS-MYSQL-COMMAND\n             WITH POINTER WS-MYSQL-I end-string\n           STRING \".\" INTO WS-MYSQL-COMMAND\n             WITH POINTER WS-MYSQL-I end-string\n           STRING WS-MYSQL-EDIT(22:02)\n             INTO WS-MYSQL-COMMAND\n             WITH POINTER WS-MYSQL-I end-string\n           STRING '\"' INTO WS-MYSQL-COMMAND\n           WITH POINTER WS-MYSQL-I end-string\n           STRING ', 'INTO WS-MYSQL-COMMAND\n           WITH POINTER WS-MYSQL-I end-string\n*>\n           STRING '`IRS-POST-LEGEND`=\"' INTO WS-MYSQL-COMMAND\n                   WITH POINTER WS-MYSQL-I end-string\n           STRING FUNCTION TRIM (HV-IRS-POST-LEGEND,TRAILING)\n                  '\"'\n                   INTO WS-MYSQL-COMMAND\n                   WITH POINTER WS-MYSQL-I end-string\n           STRING ', 'INTO WS-MYSQL-COMMAND\n           WITH POINTER WS-MYSQL-I end-string\n*>\n           STRING '`IRS-VAT-AC-DEF`=\"' INTO WS-MYSQL-COMMAND\n                   WITH POINTER WS-MYSQL-I end-string\n           MOVE HV-IRS-VAT-AC-DEF\n             TO WS-MYSQL-EDIT\n           STRING FUNCTION TRIM (WS-MYSQL-EDIT(18:03))\n             INTO WS-MYSQL-COMMAND\n             WITH POINTER WS-MYSQL-I end-string\n           STRING '\"' INTO WS-MYSQL-COMMAND\n           WITH POINTER WS-MYSQL-I end-string\n           STRING ', 'INTO WS-MYSQL-COMMAND\n           WITH POINTER WS-MYSQL-I end-string\n*>\n           STRING '`IRS-POST-VAT-SIDE`=\"' INTO WS-MYSQL-COMMAND\n                   WITH POINTER WS-MYSQL-I end-string\n           STRING FUNCTION TRIM (HV-IRS-POST-VAT-SIDE,TRAILING)\n                  '\"'\n                   INTO WS-MYSQL-COMMAND\n                   WITH POINTER WS-MYSQL-I end-string\n           STRING ', 'INTO WS-MYSQL-COMMAND\n           WITH POINTER WS-MYSQL-I end-string\n*>\n           STRING '`IRS-VAT-AMOUNT`=\"' INTO WS-MYSQL-COMMAND\n                   WITH POINTER WS-MYSQL-I end-string\n           MOVE HV-IRS-VAT-AMOUNT\n             TO WS-MYSQL-EDIT\n           STRING FUNCTION TRIM (WS-MYSQL-EDIT(14:07))\n             INTO WS-MYSQL-COMMAND\n             WITH POINTER WS-MYSQL-I end-string\n           STRING \".\" INTO WS-MYSQL-COMMAND\n             WITH POINTER WS-MYSQL-I end-string\n           STRING WS-MYSQL-EDIT(22:02)\n             INTO WS-MYSQL-COMMAND\n             WITH POINTER WS-MYSQL-I end-string\n           STRING '\"' INTO WS-MYSQL-COMMAND\n           WITH POINTER WS-MYSQL-I end-string\n           STRING \" WHERE \"\n              INTO WS-MYSQL-COMMAND\n              WITH POINTER WS-MYSQL-I end-string\n           STRING FUNCTION TRIM (WS-Where (1:J))\n              INTO WS-MYSQL-COMMAND\n              WITH POINTER WS-MYSQL-I end-string\n           STRING \";\" X\"00\" INTO WS-MYSQL-COMMAND\n             WITH POINTER WS-MYSQL-I end-string\n           PERFORM MYSQL-1210-COMMAND THRU MYSQL-1219-EXIT\n*>  /MYSQL-END\\\n       .     *> period here\n*>\n bb300-Exit.\n     exit section.\n*>\n Ca-Process-Logs.\n*>**************\n*>\n     call     \"fhlogger\" using File-Access\n                               ACAS-DAL-Common-data.\n*>\n ca-Exit.     exit.\n*>\nend program slpostingMT.",
        "line": 754
      }
    ],
    "evaluates": [
      {
        "content": "File-Function\n        when  1\n              go to ba020-Process-Open\n        when  2\n              g...",
        "line": 344,
        "whenCount": 10
      },
      {
        "content": "Access-Type     *>  x shows used in irs.\n              when  5                           *>x fn-equa...",
        "line": 670,
        "whenCount": 5
      }
    ],
    "validations": []
  },
  "complexity": {
    "mccabe": 31,
    "cognitive": 34,
    "halstead": {
      "uniqueOperators": 1,
      "uniqueOperands": 74,
      "totalOperators": 67,
      "totalOperands": 134,
      "vocabulary": 75,
      "length": 201,
      "volume": 1251.9925567896719
    }
  },
  "quality": {
    "gotos": [],
    "deadCode": [],
    "missingErrorHandlers": []
  },
  "sql": {
    "hasSQL": false,
    "statements": []
  },
  "cics": {
    "hasCICS": false,
    "statements": []
  }
}
