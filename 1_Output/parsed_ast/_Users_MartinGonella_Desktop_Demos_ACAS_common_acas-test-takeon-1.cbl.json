{
  "filePath": "/Users/MartinGonella/Desktop/Demos/ACAS/common/acas-test-takeon-1.cbl",
  "fileName": "acas-test-takeon-1.cbl",
  "timestamp": "2025-09-15T16:25:34.776Z",
  "programId": "takeon-1",
  "parserUsed": "GnuCOBOL + Regex",
  "parseConfidence": 0,
  "validationStatus": "ERROR",
  "gnuCobolValidation": {
    "success": true,
    "errors": [],
    "warnings": []
  },
  "parseErrors": [
    "Cannot read properties of undefined (reading 'total')"
  ],
  "parseWarnings": [],
  "divisions": {
    "identification": true,
    "environment": true,
    "data": true,
    "procedure": true
  },
  "structure": {
    "sections": [
      {
        "name": "input-output",
        "line": 80
      },
      {
        "name": "file",
        "line": 90
      },
      {
        "name": "working-storage",
        "line": 99
      },
      {
        "name": "la-proc-control",
        "line": 207
      },
      {
        "name": "lc-extract",
        "line": 246
      },
      {
        "name": "lcb-proc-customers",
        "line": 256
      },
      {
        "name": "zz050-Validate-Date",
        "line": 656
      },
      {
        "name": "exit",
        "line": 693
      }
    ],
    "paragraphs": [
      {
        "name": "date-compiled",
        "line": 23
      },
      {
        "name": "file-control",
        "line": 81
      },
      {
        "name": "la-main",
        "line": 210
      },
      {
        "name": "goback",
        "line": 240
      },
      {
        "name": "lc-main",
        "line": 249
      },
      {
        "name": "lcb010-main",
        "line": 259
      },
      {
        "name": "goback",
        "line": 281
      },
      {
        "name": "lcb020-read",
        "line": 284
      },
      {
        "name": "ws-code5",
        "line": 319
      },
      {
        "name": "lcb030-ReDo",
        "line": 378
      },
      {
        "name": "lcb040-Done",
        "line": 390
      },
      {
        "name": "end-if",
        "line": 450
      },
      {
        "name": "lcb050-Load-Address",
        "line": 452
      },
      {
        "name": "end-if",
        "line": 477
      },
      {
        "name": "lcb060-Abbrev-Address",
        "line": 481
      },
      {
        "name": "goback",
        "line": 496
      },
      {
        "name": "goback",
        "line": 509
      },
      {
        "name": "goback",
        "line": 522
      },
      {
        "name": "lcb070-Write",
        "line": 570
      },
      {
        "name": "lcb080-Delete-Rec",
        "line": 585
      },
      {
        "name": "acas012",
        "line": 590
      },
      {
        "name": "ACAS-DAL-Common-data",
        "line": 595
      },
      {
        "name": "acas012-Open",
        "line": 597
      },
      {
        "name": "acas012-Open-Input",
        "line": 603
      },
      {
        "name": "acas012-Close",
        "line": 609
      },
      {
        "name": "acas012-Read-Next",
        "line": 613
      },
      {
        "name": "acas012-Write",
        "line": 617
      },
      {
        "name": "acas012-Rewrite",
        "line": 621
      },
      {
        "name": "acas012-Delete",
        "line": 625
      },
      {
        "name": "aa100-Check-4-Errors",
        "line": 629
      },
      {
        "name": "end-if",
        "line": 642
      },
      {
        "name": "maps03",
        "line": 644
      },
      {
        "name": "maps09",
        "line": 649
      },
      {
        "name": "zz050-test-date",
        "line": 687
      },
      {
        "name": "zz050-exit",
        "line": 692
      }
    ],
    "entryPoints": []
  },
  "dependencies": {
    "calls": [
      {
        "target": "acas012",
        "line": 592,
        "type": "DYNAMIC",
        "using": [
          "System-Record",
          "WS-sales-Record",
          "File-Access",
          "File-Defs",
          "ACAS-DAL-Common-data"
        ]
      },
      {
        "target": "maps04",
        "line": 648,
        "type": "DYNAMIC",
        "using": [
          "maps03-ws"
        ]
      },
      {
        "target": "maps09",
        "line": 653,
        "type": "DYNAMIC",
        "using": [
          "customer-code"
        ]
      }
    ],
    "copies": [
      {
        "name": "of",
        "line": 72,
        "replacing": null
      },
      {
        "name": "envdiv",
        "line": 79,
        "replacing": null
      },
      {
        "name": "selsys",
        "line": 84,
        "replacing": null
      },
      {
        "name": "fdsys",
        "line": 93,
        "replacing": null
      },
      {
        "name": "Test-Data-Flags",
        "line": 179,
        "replacing": null
      },
      {
        "name": "wscall",
        "line": 181,
        "replacing": null
      },
      {
        "name": "wssl",
        "line": 182,
        "replacing": null
      },
      {
        "name": "wsmaps03",
        "line": 183,
        "replacing": null
      },
      {
        "name": "wsmaps09",
        "line": 184,
        "replacing": null
      },
      {
        "name": "wsfnctn",
        "line": 185,
        "replacing": null
      },
      {
        "name": "wsnames",
        "line": 186,
        "replacing": null
      },
      {
        "name": "Proc-Get-Env-Set-Files",
        "line": 696,
        "replacing": null
      }
    ],
    "performs": [
      {
        "target": "zz020-Get-Program-Args",
        "thru": null,
        "line": 218
      },
      {
        "target": "acas012-Close",
        "thru": null,
        "line": 240
      },
      {
        "target": "lc-extract",
        "thru": null,
        "line": 244
      },
      {
        "target": "lcb-proc-customers",
        "thru": null,
        "line": 252
      },
      {
        "target": "acas012-Open",
        "thru": null,
        "line": 275
      },
      {
        "target": "acas012-Close",
        "thru": null,
        "line": 281
      },
      {
        "target": "acas012-Close",
        "thru": null,
        "line": 288
      },
      {
        "target": "maps09",
        "thru": null,
        "line": 355
      },
      {
        "target": "zz050-Validate-Date",
        "thru": null,
        "line": 369
      },
      {
        "target": "lcb080-Delete-Rec",
        "thru": null,
        "line": 397
      },
      {
        "target": "lcb080-Delete-Rec",
        "thru": null,
        "line": 449
      },
      {
        "target": "acas012-Close",
        "thru": null,
        "line": 495
      },
      {
        "target": "acas012-Close",
        "thru": null,
        "line": 508
      },
      {
        "target": "acas012-Close",
        "thru": null,
        "line": 521
      },
      {
        "target": "acas012-Write",
        "thru": null,
        "line": 576
      },
      {
        "target": "acas012-Rewrite",
        "thru": null,
        "line": 578
      },
      {
        "target": "acas012-Delete",
        "thru": null,
        "line": 588
      },
      {
        "target": "acas012",
        "thru": null,
        "line": 601
      },
      {
        "target": "aa100-Check-4-Errors",
        "thru": null,
        "line": 602
      },
      {
        "target": "acas012",
        "thru": null,
        "line": 607
      },
      {
        "target": "aa100-Check-4-Errors",
        "thru": null,
        "line": 608
      },
      {
        "target": "acas012",
        "thru": null,
        "line": 612
      },
      {
        "target": "acas012",
        "thru": null,
        "line": 616
      },
      {
        "target": "acas012",
        "thru": null,
        "line": 620
      },
      {
        "target": "acas012",
        "thru": null,
        "line": 624
      },
      {
        "target": "acas012",
        "thru": null,
        "line": 628
      },
      {
        "target": "maps03",
        "thru": null,
        "line": 691
      }
    ]
  },
  "dataFlow": {
    "files": [],
    "moves": [
      {
        "from": "1",
        "to": "rrn",
        "line": 226
      },
      {
        "from": "zero",
        "to": "b",
        "line": 263
      },
      {
        "from": "zero",
        "to": "File-System-Used\r\n                      File-Duplicates-In-Use\r\n                      FA-File-System-Used\r\n                      FA-File-Duplicates-In-Use",
        "line": 268
      },
      {
        "from": "zero",
        "to": "Log-file-rec-written",
        "line": 272
      },
      {
        "from": "1",
        "to": "File-Key-No",
        "line": 274
      },
      {
        "from": "zero",
        "to": "Access-Type",
        "line": 283
      },
      {
        "from": "zero",
        "to": "f",
        "line": 313
      },
      {
        "from": "sl-charges",
        "to": "sales-late",
        "line": 321
      },
      {
        "from": "sl-dunning",
        "to": "sales-dunning",
        "line": 322
      },
      {
        "from": "sl-credit",
        "to": "sales-credit",
        "line": 323
      },
      {
        "from": "sl-disc",
        "to": "sales-discount",
        "line": 324
      },
      {
        "from": "sl-min",
        "to": "sales-late-min",
        "line": 325
      },
      {
        "from": "sl-max",
        "to": "sales-late-max",
        "line": 326
      },
      {
        "from": "sl-limit",
        "to": "sales-limit",
        "line": 327
      },
      {
        "from": "run-date",
        "to": "sales-create-date",
        "line": 328
      },
      {
        "from": "0",
        "to": "sales-status",
        "line": 329
      },
      {
        "from": "2",
        "to": "a",
        "line": 331
      },
      {
        "from": "\"C\"",
        "to": "maps09-reply",
        "line": 354
      },
      {
        "from": "Customer-Code",
        "to": "WS-Sales-Key",
        "line": 356
      },
      {
        "from": "\"19\"",
        "to": "ws-test-date (7:2)\r\n              else\r\n                       move     \"20\" to ws-test-date (7:2)\r\n              end-if\r\n              perform  zz050-Validate-Date\r\n              if       u-bin not = zero\r\n                       move  u-bin to Sales-Create-Date",
        "line": 365
      },
      {
        "from": "1",
        "to": "y",
        "line": 375
      },
      {
        "from": "1",
        "to": "z",
        "line": 376
      },
      {
        "from": "spaces",
        "to": "ws-tmp-telno2",
        "line": 377
      },
      {
        "from": "ws-tmp-telno2",
        "to": "ws-cust-telno",
        "line": 392
      },
      {
        "from": "spaces",
        "to": "WS-Cust-Telno\r\n              add 1 to No-Phone-Nos\r\n              perform lcb080-Delete-Rec\r\n              go to lcb020-read\r\n     end-if\r\n     move     WS-Cust-Telno to Sales-Phone",
        "line": 395
      },
      {
        "from": "a",
        "to": "b",
        "line": 403
      },
      {
        "from": "zero",
        "to": "z",
        "line": 408
      },
      {
        "from": "spaces",
        "to": "ws-tmp-addr1 ws-tmp-PC",
        "line": 409
      },
      {
        "from": "spaces",
        "to": "ws-addr2\r\n     else\r\n      if      ws-addr4  = spaces\r\n              unstring   ws-addr3 delimited by \"  \"\r\n                          into ws-tmp-addr1\r\n                               ws-tmp-PC\r\n              end-unstring\r\n              move spaces to ws-addr3\r\n      else\r\n        if    ws-addr4 not = spaces\r\n              unstring   ws-addr4 delimited by \"  \"\r\n                          into ws-tmp-addr1\r\n                               ws-tmp-PC\r\n              end-unstring\r\n              move spaces to ws-addr4",
        "line": 416
      },
      {
        "from": "spaces",
        "to": "Sales-Address",
        "line": 454
      },
      {
        "from": "1",
        "to": "z   *> so ignore contact name\r\n              move ws-name  to Sales-Name\r\n     else\r\n              move     1 to z\r\n              if       ws-contact not = spaces\r\n                       move     ws-contact to  Sales-Name\r\n                       string   ws-name      delimited by \"  \"\r\n                                SL-Delim     delimited by size\r\n                                                   into Sales-Address\r\n                                                   pointer z\r\n                         on overflow\r\n                               display \"OVERFLOW Contact Name\"    AT 0501 with erase eos\r\n                               display Sales-Address at 0601\r\n                               display ws-addr1 at 0701\r\n                               display sl-delim  at 0801\r\n                               display sales-address at 0901 with erase eos\r\n                               display \"PE 0??\" at 1001\r\n                               go to lcb050-Load-Address\r\n                       end-string\r\n              else\r\n                       move     ws-name    to  Sales-Name\r\n              end-if\r\n     end-if",
        "line": 456
      },
      {
        "from": "1",
        "to": "f\r\n                      go to lcb050-Load-Address",
        "line": 534
      },
      {
        "from": "1",
        "to": "f\r\n                      go to lcb050-Load-Address",
        "line": 551
      },
      {
        "from": "1",
        "to": "f\r\n                      go to lcb050-Load-Address",
        "line": 568
      },
      {
        "from": "z",
        "to": "d",
        "line": 573
      },
      {
        "from": "1",
        "to": "File-Key-No",
        "line": 575
      },
      {
        "from": "1",
        "to": "File-Key-No",
        "line": 587
      },
      {
        "from": "ws-test-date",
        "to": "ws-date",
        "line": 670
      },
      {
        "from": "1",
        "to": "Date-Form",
        "line": 672
      },
      {
        "from": "ws-days",
        "to": "ws-swap\r\n              move ws-month to ws-days\r\n              move ws-swap to ws-month\r\n              go to zz050-test-date",
        "line": 676
      },
      {
        "from": "\"dd/mm/ccyy\"",
        "to": "ws-date",
        "line": 683
      },
      {
        "from": "ws-date",
        "to": "u-date",
        "line": 689
      },
      {
        "from": "zero",
        "to": "u-bin",
        "line": 690
      }
    ],
    "computes": []
  },
  "businessLogic": {
    "conditions": [
      {
        "type": "IF",
        "condition": "used).\r\n*> 25/09/19 - .03 Make all records have status zero - inactive.\r\n*> 16/04/24 vbc       Copyright notice update superceding all previous notices.\r\n*>\r\n*>**\r\n*>  From copyright.cob.\r\n*>\r\n*> Copyright Notice.\r\n*> ****************\r\n*>\r\n*> This notice supercedes all prior copyright notices & was updated 2024-04-16.\r\n*>\r\n*> These files and programs are part of the Applewood Computers Accounting\r\n*> System and is Copyright (c) Vincent B Coen. 1976-2025 and later.\r\n*>\r\n*> This program is now free software; you can redistribute it and/or modify it\r\n*> under the terms listed here and of the GNU General Public License as\r\n*> published by the Free Software Foundation; version 3 and later as revised\r\n*> for PERSONAL USAGE ONLY and that includes for use within a business but\r\n*> EXCLUDES repackaging or for Resale, Rental or Hire in ANY way.\r\n*>\r\n*> Persons interested in repackaging, redevelopment for the purpose of resale or\r\n*> distribution in a rental or hire mode must get in touch with the copyright\r\n*> holder with your commercial plans and proposals.\r\n*>\r\n*> ACAS is distributed in the hope that it will be useful, but WITHOUT\r\n*> ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\r\n*> FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\r\n*> for more details. If it breaks, you own both pieces but I will endeavour\r\n*> to fix it, providing you tell me about the problem.\r\n*>\r\n*> You should have received a copy of the GNU General Public License along\r\n*> with ACAS; see the file COPYING.  If not, write to the Free Software\r\n*> Foundation, 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA.\r\n*>\r\n*>******************************************************************************\r\n environment division.\r\n*>\r\n copy \"envdiv.cob\".\r\n*>\r\n input-output section.\r\n file-control.\r\n*>\r\n copy \"selsys.cob\".\r\n*>\r\n     select customersin     assign \"customer.txt\"\r\n                            organization line sequential\r\n                            status fs-reply.\r\n*>\r\n DATA DIVISION.\r\n file section.\r\n*>\r\n copy \"fdsys.cob\".\r\n*>\r\n fd  CustomersIn.\r\n*>\r\n 01  customersin-record.\r\n     03  prd-char        pic x   occurs 256.\r\n*>\r\n working-storage section.\r\n*>\r\n 77  prog-name           pic x(20)    value \"SL Takeon-1 3.02.03)\".\r\n 77  z                   binary-char  value zero.\r\n 77  y                   binary-char  value zero.\r\n 77  x                   binary-char  value zero.\r\n 77  OS-Delimiter        pic x        value \"/\".\r\n 77  ACAS_BIN            pic x(512)   value spaces.\r\n 77  ACAS_LEDGERS        pic x(500)   value spaces.\r\n 77  Arg-Number          pic 9        value zero.\r\n*>\r\n*> holds program parameter values from command line\r\n*>\r\n 01  Arg-Vals                         value spaces.\r\n     03  Arg-Value       pic x(525)  occurs 2.\r\n 01  Arg-Test            pic x(525)   value spaces.\r\n*>\r\n 01  work-fields.\r\n     03  ws-Rec-Cnt-In   pic 9(4)     value zero.\r\n     03  ws-Rec-Cnt-Out  pic 9(4)     value zero.\r\n     03  ws-Rec-Cnt-R-Out pic 9(6)    value zero.\r\n     03  ws-reply        pic x.\r\n*>\r\n 01  ws-data.\r\n     03  a               pic 9999   binary.\r\n     03  b               pic 9999.\r\n     03  c               pic 9(4)   value zero.\r\n     03  d               pic 9(4)   value zero.\r\n     03  e               pic 9(4)   value zero.\r\n     03  f               pic 9      value zero.\r\n     03  Short-Address   pic 9(4)   value zero.\r\n     03  No-Phone-Nos    pic 9(4)   value zero.\r\n     03  Deleted-Recs    pic 9(4)   value zero.\r\n     03  ws-Test-Date    pic x(10).\r\n     03  ws-swap             pic xx.\r\n     03  ws-Conv-Date        pic x(10).\r\n     03  ws-date             pic x(10).\r\n     03  ws-UK redefines ws-date.\r\n         05  ws-days         pic xx.\r\n         05  filler          pic x.\r\n         05  ws-month        pic xx.\r\n         05  filler          pic x.\r\n         05  ws-year         pic x(4).\r\n     03  ws-USA redefines ws-date.\r\n         05  ws-usa-month    pic xx.\r\n         05  filler          pic x.\r\n         05  ws-usa-days     pic xx.\r\n         05  filler          pic x.\r\n         05  filler          pic x(4).\r\n     03  ws-Intl redefines ws-date.\r\n         05  ws-intl-year    pic x(4).\r\n         05  filler          pic x.\r\n         05  ws-intl-month   pic xx.\r\n         05  filler          pic x.\r\n         05  ws-intl-days    pic xx.\r\n*>\r\n     03  ws-name-addr.  *> Have to break down last addr line 4 trail postcode\r\n         05  ws-name     pic x(32).\r\n         05  ws-addr1    pic x(32).\r\n         05  ws-addr2    pic x(32).\r\n         05  ws-addr3    pic x(32).\r\n         05  ws-addr4    pic x(32).\r\n         05  ws-addr5    pic x(32).\r\n         05  ws-contact  pic x(32).   *> was 27\r\n         05  ws-cust-telno pic x(13).\r\n         05  ws-type     pic x.\r\n         05  ws-DateX.\r\n             07  ws-Date9 pic 9(8).\r\n         05  ws-addr-level pic 9.\r\n         05  ws-tmp-addr1 pic x(32).\r\n         05  ws-tmp-PC   pic x(12).\r\n     03  ws-Cust-Code.                 *> Will become sales key\r\n         05  filler      pic x       value \"S\".\r\n         05  ws-code5    pic x(5).\r\n         05  filler      pic x       value zero.\r\n     03  ws-tmp-telno2   pic x(13).\r\n     03  ws-Tmp-Date     pic x(8)    value spaces.\r\n     03  ws-Tmp-BinDate  binary-long  value zero.\r\n*>\r\n copy \"Test-Data-Flags.cob\".  *> set sw-testing to zero to stop logging.\r\n*>\r\n copy \"wscall.cob\".\r\n copy \"wssl.cob\".\r\n copy \"wsmaps03.cob\".\r\n copy \"wsmaps09.cob\".\r\n copy \"wsfnctn.cob\".\r\n copy \"wsnames.cob\".\r\n*>\r\n 01  Error-Messages.\r\n*> System Wide\r\n     03  ST001          pic x(26) value \"SL001 System 1 read err = \".\r\n     03  ST004          pic x(59) value \"SL004 Problem with opening system file. Hit return to clear\".\r\n     03  SY006          pic x(62) value \"SY006 Program Arguments limited to two and you have specified \".\r\n     03  SY007          pic x(35) value \"SY007 Program arguments incorrect: \".\r\n     03  SY008          pic x(31) value \"SY008 Note message & Hit return\".\r\n     03  SY009          pic x(53) value \"SY009 Environment variables not yet set up : ABORTING\".\r\n*> Program specific\r\n     03  SL010          pic x(30) value \"SL010 Duplicate key/s found = \".\r\n     03  SL011          pic x(33) value \"SL011 Error on salesMT processing\".\r\n     03  SL012          pic x(33) value \"SL012 Error opening sales File = \".\r\n     03  SL013          pic x(30) value \"SL013 Error on reading file = \".\r\n     03  SL014          pic x(31) value \"SL014 Error on writing table = \".\r\n     03  SL015          pic x(34) value \"SL015 Error opening sales Table = \".\r\n     03  SL096          pic x(37) value \"SL096 SL Delimiter not set - Aborting\".\r\n     03  SL097          pic x(29) value \"SL097 No Sales file present\".\r\n     03  SL099          pic x(15) value \"SL099 Ignoring.\".\r\n*>\r\n procedure  division.\r\n la-proc-control        section.\r\n*>*****************************\r\n*>\r\n la-main.\r\n*>\r\n        DISPLAY  prog-name       AT 0101 with erase eos.\r\n        DISPLAY  \"Cust. TAKE-ON\" AT 0129.\r\n*>\r\n*>  Get the system param for the various default Cust fields\r\n*>\r\n     perform  zz020-Get-Program-Args.\r\n     open     input System-File.\r\n     if       fs-reply not = zero\r\n              display ST001 fs-reply\r\n              display ST004\r\n              close System-File\r\n              goback\r\n     end-if\r\n     move     1 to rrn.\r\n     read     system-file record.\r\n     if       fs-reply not = zero\r\n              display ST001 fs-reply\r\n              close System-File\r\n              goback\r\n     end-if\r\n*>\r\n*>  Check that SL-Delim is set (not space)\r\n*>\r\n     if       SL-Delim = spaces\r\n              display SL096 at 0501\r\n              display SY008          at 0601\r\n              accept ws-reply        at 0632\r\n              perform acas012-Close\r\n              goback.\r\n*>\r\n     close    System-File.\r\n     perform  lc-extract.\r\n     stop     run.\r\n*>\r\n lc-extract          section.\r\n*>**************************\r\n*>\r\n lc-main.\r\n*>\r\n     perform  lcb-proc-customers.\r\n*>\r\n lc999-exit.  exit.\r\n*>*********   ****\r\n*>\r\n lcb-proc-customers    section.\r\n*>*****************    *******\r\n*>\r\n lcb010-main.\r\n*>\r\n     open     input customersin.\r\n     move     zero to b.\r\n*>\r\n*>  Over-ride processes for acas012/salesMT for Dup modes\r\n*>    we are only writing to Cobol file\r\n*>\r\n     move     zero to File-System-Used\r\n                      File-Duplicates-In-Use\r\n                      FA-File-System-Used\r\n                      FA-File-Duplicates-In-Use.   *>  Cobol file in use\r\n     move     zero to Log-file-rec-written.        *> for logging.\r\n*>\r\n     move     1 to File-Key-No.\r\n     perform  acas012-Open.    *> For I/O\r\n     if       fs-reply not = zero\r\n              display SL012  at 0501\r\n              display fs-reply at 0534\r\n              display SY008          at 0601\r\n              accept ws-reply        at 0632\r\n              perform acas012-Close\r\n              goback.\r\n     move     zero to Access-Type.\r\n*>\r\n lcb020-read.\r\n     read     customersin at end\r\n              close customersin   *> customersout\r\n              perform acas012-Close\r\n              display \"Customer Rec max size = \" AT 1401 with erase eos\r\n              display b at 1425\r\n              display \"Customer count = \" at 1501\r\n              display C at 1518\r\n              display \"Max Addr length \" at 1601\r\n              display d at 1617\r\n              display \"Record written Short\" at 1701\r\n              display E   at 1722\r\n              display \"Short Addr count = \" at 1801\r\n              display Short-Address         at 1820\r\n              display \"No Phone # count = \" at 1901\r\n              display No-Phone-Nos          at 1920\r\n              display \"Deleted Rec cnt  = \" at 2001\r\n              display Deleted-Recs          at 2020\r\n              display \"Records in = \"       at 2101\r\n              display ws-rec-Cnt-In         at 2115\r\n              display \"Records Out = \"      at 2201\r\n              display ws-Rec-Cnt-Out        at 2215\r\n              display \"Records Rewritten = \"  at 2301\r\n              display ws-Rec-Cnt-R-Out        at 2322\r\n              display \"Note counts and hit return\" at 2401\r\n              accept ws-Reply at 2427\r\n              go to lcb999-exit.\r\n*>\r\n     move     zero to f.       *> clear overflow flag\r\n     add      1 to ws-Rec-Cnt-In.\r\n*>\r\n*> Init salesled record and load defaults (from system rec)\r\n*>\r\n     initialise WS-Sales-Record\r\n                ws-name-addr\r\n                ws-code5.\r\n     move     sl-charges to  sales-late.\r\n     move     sl-dunning to  sales-dunning.\r\n     move     sl-credit  to  sales-credit.\r\n     move     sl-disc    to  sales-discount.\r\n     move     sl-min     to  sales-late-min.\r\n     move     sl-max     to  sales-late-max.\r\n     move     sl-limit   to  sales-limit.\r\n     move     run-date   to  sales-create-date.\r\n     move     0          to  sales-status.              *> Inactive\r\n*>\r\n     move     2 to a.\r\n     unstring customersin-record delimited by \"',\" into ws-code5 pointer a.\r\n*>\r\n     add      1 to a.\r\n     unstring customersin-record delimited by \"',\" into ws-name pointer a.\r\n     add      1 to a.\r\n     unstring customersin-record delimited by \"',\" into ws-addr1 pointer a.\r\n     add      1 to a.\r\n     unstring customersin-record delimited by \"',\" into ws-addr2 pointer a.\r\n     add      1 to a.\r\n     unstring customersin-record delimited by \"',\" into ws-addr3 pointer a.\r\n     add      1 to a.\r\n     unstring customersin-record delimited by \"',\" into ws-addr4 pointer a.\r\n     add      1 to a.\r\n     unstring customersin-record delimited by \"',\" into ws-contact pointer a.\r\n     add      1 to a.\r\n     unstring customersin-record delimited by \"',\" into ws-cust-telno pointer a.\r\n     add      1 to a.              *> next not wanted.\r\n     unstring customersin-record delimited by \"',\" into ws-type pointer a.\r\n     add      1 to a.\r\n     unstring customersin-record delimited by \"'\" into ws-DateX pointer a.\r\n*>\r\n     move     function upper-case (ws-cust-code) to Customer-Nos.\r\n     move     \"C\"  to  maps09-reply.\r\n     perform  maps09.\r\n     move     Customer-Code to WS-Sales-Key.    *> now got check digit\r\n*>\r\n*>  If valid date convert to binary  otherwise leave as todays date\r\n*>    moved earlier.\r\n*>\r\n     if       ws-DateX not = \"00/00/00\"\r\n              move     ws-DateX (1:6) to ws-test-date (1:6)\r\n              move     ws-DateX (7:2) to ws-test-date (9:2)\r\n              if       ws-Date9 (7:2) > 30\r\n                       move     \"19\" to ws-test-date (7:2)\r\n              else\r\n                       move     \"20\" to ws-test-date (7:2)\r\n              end-if\r\n              perform  zz050-Validate-Date\r\n              if       u-bin not = zero\r\n                       move  u-bin to Sales-Create-Date.\r\n*>\r\n*>  Clean up phone no. size 13 chars\r\n*>\r\n     move     1  to y.\r\n     move     1  to z.\r\n     move     spaces to ws-tmp-telno2.\r\n*>\r\n lcb030-ReDo.\r\n     if       z > 13\r\n              go to lcb040-Done.\r\n     if       ws-cust-telno (z:1) = \"(\" or \")\" or space\r\n              add 1 to z\r\n              go to lcb030-ReDo.\r\n     move     ws-cust-telno (z:1) to ws-tmp-Telno2 (y:1).\r\n     add      1 to y.\r\n     add      1 to z.\r\n     if       z < 14\r\n              go to lcb030-ReDo.\r\n*>\r\n lcb040-Done.\r\n     move     ws-tmp-telno2  to ws-cust-telno.\r\n     if       ws-Cust-Telno (1:5) = zeros\r\n         or   ws-Cust-Telno = \"000-0000\"\r\n              move spaces to WS-Cust-Telno\r\n              add 1 to No-Phone-Nos\r\n              perform lcb080-Delete-Rec\r\n              go to lcb020-read\r\n     end-if\r\n     move     WS-Cust-Telno to Sales-Phone.\r\n*>\r\n     if       a > b                    *> Just noting max record size\r\n              move a to b.\r\n*>\r\n*>  Now clean last addr field to break out the postcode.\r\n*>    as xyz and finished with, can use them ignoring addr1\r\n*>\r\n     move     zero to z.\r\n     move     spaces to ws-tmp-addr1 ws-tmp-PC.\r\n*>\r\n     if       ws-addr3  = spaces\r\n              unstring   ws-addr2 delimited by \"  \"\r\n                          into ws-tmp-addr1\r\n                               ws-tmp-PC\r\n              end-unstring\r\n              move spaces to ws-addr2\r\n     else\r\n      if      ws-addr4  = spaces\r\n              unstring   ws-addr3 delimited by \"  \"\r\n                          into ws-tmp-addr1\r\n                               ws-tmp-PC\r\n              end-unstring\r\n              move spaces to ws-addr3\r\n      else\r\n        if    ws-addr4 not = spaces\r\n              unstring   ws-addr4 delimited by \"  \"\r\n                          into ws-tmp-addr1\r\n                               ws-tmp-PC\r\n              end-unstring\r\n              move spaces to ws-addr4.\r\n*>\r\n*> Quick clean for '\"' replacing with space to stop SQL errors\r\n*>\r\n     inspect  ws-addr1  replacing all quotes by space.\r\n     inspect  ws-addr2  replacing all quotes by space.\r\n     inspect  ws-addr3  replacing all quotes by space.\r\n     inspect  ws-addr4  replacing all quotes by space.\r\n     move     function trim (ws-addr1, leading) to ws-addr1.\r\n     move     function trim (ws-addr2, leading) to ws-addr2.\r\n     move     function trim (ws-addr3, leading) to ws-addr3.\r\n     move     function trim (ws-addr4, leading) to ws-addr4.\r\n*>\r\n*> Test for no addresses in data so skip. Test for it 1st\r\n*>\r\n     if       spaces = ws-addr4\r\n                 and = ws-addr3\r\n                 and = ws-addr2\r\n              add    1 to Short-Address\r\n              perform lcb080-Delete-Rec\r\n              go to lcb020-read\r\n     end-if.\r\n*>\r\n lcb050-Load-Address.\r\n     move     spaces to Sales-Address.\r\n     if       z > 95        *> got overflow before on try 1\r\n              move 1 to z   *> so ignore contact name\r\n              move ws-name  to Sales-Name\r\n     else\r\n              move     1 to z\r\n              if       ws-contact not = spaces\r\n                       move     ws-contact to  Sales-Name\r\n                       string   ws-name      delimited by \"  \"\r\n                                SL-Delim     delimited by size\r\n                                                   into Sales-Address\r\n                                                   pointer z\r\n                         on overflow\r\n                               display \"OVERFLOW Contact Name\"    AT 0501 with erase eos\r\n                               display Sales-Address at 0601\r\n                               display ws-addr1 at 0701\r\n                               display sl-delim  at 0801\r\n                               display sales-address at 0901 with erase eos\r\n                               display \"PE 0??\" at 1001\r\n                               go to lcb050-Load-Address\r\n                       end-string\r\n              else\r\n                       move     ws-name    to  Sales-Name\r\n              end-if\r\n     end-if.\r\n*>\r\n*>  addr1 should not be spaces.\r\n*>\r\n lcb060-Abbrev-Address.\r\n     string   ws-addr1     delimited by \"  \"\r\n              SL-Delim     delimited by size\r\n                                          into Sales-Address\r\n                                          pointer z\r\n              on overflow\r\n                      display \"OVERFLOW Addr 1\"    AT 0501 with erase eos\r\n                      display Sales-Address at 0601\r\n                      display ws-addr1 at 0701\r\n                      display sl-delim  at 0801\r\n                      display sales-address at 0901\r\n                      display \" \" at 1001 with erase eos\r\n                      stop \"PE 1??\"\r\n                      perform acas012-Close\r\n                      close Customersin\r\n                      goback.\r\n     if       ws-addr2 not = spaces\r\n              string   ws-addr2     delimited by \"  \"\r\n                       SL-Delim     delimited by size\r\n                                          into Sales-Address\r\n                                          pointer z\r\n              on overflow\r\n                      display \"OVERFLOW addr 2\"    AT 0501 with erase eos\r\n                      display Sales-Address at 0601\r\n                      display \" \" at 0701 with erase eos\r\n                      stop \"PE 2??\"\r\n                      perform acas012-Close\r\n                      close Customersin\r\n                      goback.\r\n     if       ws-addr3 not = spaces\r\n              string   ws-addr3     delimited by \"  \"\r\n                       SL-Delim     delimited by size\r\n                                          into Sales-Address\r\n                                          pointer z\r\n              on overflow\r\n                      display \"OVERFLOW addr 3\"    AT 0501 with erase eos\r\n                      display Sales-Address at 0601\r\n                      display \" \" at 0701 with erase eos\r\n                      stop \"PE 3??\"\r\n                      perform acas012-Close\r\n                      close Customersin\r\n                      goback.\r\n     if       ws-addr4 not = spaces\r\n              string   ws-addr4     delimited by \"  \"\r\n                       SL-Delim     delimited by size\r\n                                          into Sales-Address\r\n                                          pointer z\r\n              on overflow\r\n                      display \"OVERFLOW addr 4\"    AT 1201 with erase eos\r\n                      display Sales-Address at 0501\r\n                      display \" \" at 0601\r\n                      display \"PE 4??\" at 0701 with erase eos\r\n                      move 1 to f\r\n                      go to lcb050-Load-Address.\r\n*>\r\n     if       ws-Tmp-Addr1 not = spaces\r\n              string   ws-Tmp-addr1 delimited by \"  \"\r\n                       SL-Delim     delimited by size\r\n                                          into Sales-Address\r\n                                          pointer z\r\n              on overflow\r\n                 if   f not = zero\r\n                      add 1 to E\r\n                      go to lcb070-Write\r\n                 else\r\n                      display \"OVERFLOW tmp addr1\"    AT 0501 with erase eos\r\n                      display Sales-Address at 0601\r\n                      display \" \" at 0701\r\n                      display \"PE 5??\" at 0801 with erase eos\r\n                      move 1 to f\r\n                      go to lcb050-Load-Address.\r\n*>\r\n     if       ws-Tmp-PC not = spaces\r\n              string   ws-Tmp-PC    delimited by \"  \"\r\n                       SL-Delim     delimited by size\r\n                                          into Sales-Address\r\n                                          pointer z\r\n              on overflow\r\n                 if   f not = zero\r\n                      add 1 to E\r\n                      go to lcb070-Write\r\n                 else\r\n                      display \"OVERFLOW tmp PC\"    AT 0501 with erase eos\r\n                      display Sales-Address at 0601\r\n                      display \" \" at 0701\r\n                      display \"PE 6??\" at 0801 with erase eos\r\n                      move 1 to f\r\n                      go to lcb050-Load-Address.\r\n*>\r\n lcb070-Write.\r\n     if       z > d\r\n              move z to d.\r\n*>\r\n     move     1 to File-Key-No.\r\n     perform  acas012-Write.\r\n     if       FS-Reply not = zero\r\n              perform  acas012-Rewrite\r\n              add 1 to ws-Rec-Cnt-R-Out\r\n     else\r\n              add      1 to ws-Rec-Cnt-Out\r\n     end-if\r\n     add      1 to c.\r\n     go       to lcb020-read.\r\n*>\r\n lcb080-Delete-Rec.\r\n     move     1 to File-Key-No.\r\n     perform  acas012-Delete.       *> Not bothering with tests, dont care.\r\n     add      1 to Deleted-Recs.\r\n*>\r\n acas012.\r\n     call     \"acas012\" using System-Record\r\n                              WS-sales-Record\r\n                              File-Access\r\n                              File-Defs\r\n                              ACAS-DAL-Common-data.\r\n*>\r\n acas012-Open.\r\n     set      fn-open to true.\r\n     set      fn-i-o  to true.\r\n     perform  acas012.\r\n     perform  aa100-Check-4-Errors.\r\n*>\r\n acas012-Open-Input.\r\n     set      fn-open  to true.\r\n     set      fn-input to true.\r\n     perform  acas012.\r\n     perform  aa100-Check-4-Errors.\r\n*>\r\n acas012-Close.\r\n     set      fn-Close to true.\r\n     perform  acas012.\r\n*>\r\n acas012-Read-Next.\r\n     set      fn-Read-Next to true.\r\n     perform  acas012.\r\n*>\r\n acas012-Write.\r\n     set      fn-Write to true.\r\n     perform  acas012.\r\n*>\r\n acas012-Rewrite.\r\n     set      fn-re-Write to true.\r\n     perform  acas012.\r\n*>\r\n acas012-Delete.\r\n     set      fn-Delete to true.\r\n     perform  acas012.\r\n*>\r\n aa100-Check-4-Errors.\r\n     if       fs-reply not = zero\r\n              display SL011            at 0801   *> acas012/salesMT processing\r\n              display \"Fs-reply = \"    at 0901\r\n              display fs-reply         at 0912\r\n              display \"WE-Error = \"    at 1001\r\n              display  WE-Error        at 1012\r\n              display SQL-Err          at 1101\r\n              display SQL-Msg          at 1201\r\n              display SY008 at 1701 with erase eol\r\n              accept  Accept-Reply at 1735\r\n              display \" \" at 0801 with erase eos\r\n              go to lcb999-exit\r\n     end-if.\r\n*>\r\n maps03.\r\n*>*****\r\n*>\r\n     call     \"maps04\"  using  maps03-ws.\r\n*>\r\n maps09.\r\n*>*****\r\n*>\r\n     call     \"maps09\"  using  customer-code.\r\n*>\r\n lcb999-exit. exit.\r\n*>\r\n zz050-Validate-Date        section.\r\n*>*********************************\r\n*>\r\n*>  Converts USA/Intl to UK date format for processing.\r\n*>*******************************\r\n*> Input:   ws-test-date\r\n*> output:  u-date/ws-date as uk date format\r\n*>          u-bin not zero if valid date\r\n*>\r\n     inspect  ws-test-date replacing all \".\" by \"/\".\r\n     inspect  ws-test-date replacing all \",\" by \"/\".\r\n     inspect  ws-test-date replacing all \"-\" by \"/\".\r\n*>\r\n     move     ws-test-date to ws-date.\r\n     if       Date-Form = zero\r\n              move 1 to Date-Form.\r\n     if       Date-UK\r\n              go to zz050-test-date.\r\n     if       Date-USA                *> swap month and days\r\n              move ws-days to ws-swap\r\n              move ws-month to ws-days\r\n              move ws-swap to ws-month\r\n              go to zz050-test-date.\r\n*>\r\n*> So its International date format\r\n*>\r\n     move     \"dd/mm/ccyy\" to ws-date.  *> swap Intl to UK form\r\n     move     ws-test-date (1:4) to ws-Year.\r\n     move     ws-test-date (6:2) to ws-Month.\r\n     move     ws-test-date (9:2) to ws-Days.\r\n*>\r\n zz050-test-date.\r\n     move     ws-date to u-date.\r\n     move     zero to u-bin.\r\n     perform  maps03.\r\n*>\r\n zz050-exit.\r\n     exit     section.\r\n*>\r\n copy \"Proc-Get-Env-Set-Files.cob\".\r\n*>",
        "line": 41
      }
    ],
    "evaluates": [],
    "validations": []
  },
  "complexity": {
    "mccabe": 5,
    "cognitive": 1,
    "halstead": {
      "uniqueOperators": 1,
      "uniqueOperands": 55,
      "totalOperators": 43,
      "totalOperands": 86,
      "vocabulary": 56,
      "length": 129,
      "volume": 749.1487849454309
    }
  },
  "quality": {
    "gotos": [],
    "deadCode": [],
    "missingErrorHandlers": []
  },
  "sql": {
    "hasSQL": false,
    "statements": []
  },
  "cics": {
    "hasCICS": false,
    "statements": []
  }
}
